{"_id":"form-data","_rev":"24-e25cda92d0140b12198d9d72b9e8cf1f","name":"form-data","description":"A module to create readable `\"multipart/form-data\"` streams.  Can be used to submit forms and file uploads to other web applications.","dist-tags":{"latest":"0.0.7"},"versions":{"0.0.0":{"author":{"name":"Felix Geisendörfer","email":"felix@debuggable.com","url":"http://debuggable.com/"},"name":"form-data","description":"A module to create readable `\"application/x-www-form-urlencoded\"` streams.  Can be used to submit forms and file uploads to other web applications.","version":"0.0.0","repository":{"type":"git","url":"git://github.com/felixge/form-data.git"},"main":"./lib/form_data","engines":{"node":"*"},"dependencies":{},"devDependencies":{},"_id":"form-data@0.0.0","_engineSupported":true,"_npmVersion":"1.0.3","_nodeVersion":"v0.4.8-pre","_defaultsLoaded":true,"dist":{"shasum":"c18c31c227bbb33b053217e8fec0c2255e06a1e8","tarball":"http://registry.npmjs.org/form-data/-/form-data-0.0.0.tgz"},"scripts":{},"directories":{}},"0.0.2":{"author":{"name":"Felix Geisendörfer","email":"felix@debuggable.com","url":"http://debuggable.com/"},"name":"form-data","description":"A module to create readable `\"multipart/form-data\"` streams.  Can be used to submit forms and file uploads to other web applications.","version":"0.0.2","repository":{"type":"git","url":"git://github.com/felixge/node-form-data.git"},"main":"./lib/form_data","engines":{"node":"*"},"dependencies":{"combined-stream":"0.0.3","mime":"1.2.2","async":"0.1.9"},"devDependencies":{"fake":"0.2.1","far":"0.0.1","formidable":"1.0.2"},"_npmUser":{"name":"idralyuk","email":"igor@buran.us"},"_id":"form-data@0.0.2","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.16","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"6d1470b4355088034bb28c0a5417845facf10068","tarball":"http://registry.npmjs.org/form-data/-/form-data-0.0.2.tgz"},"readme":"# form-data\n\nA module to create readable `\"multipart/form-data\"` streams.  Can be used to\nsubmit forms and file uploads to other web applications.\n\nThe API of this module is inspired by the\n[XMLHttpRequest-2 FormData Interface][xhr2-fd].\n\n[xhr2-fd]: http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#the-formdata-interface\n\n## Install\n\nSorry, this isn't ready for you yet.\n\n## Usage\n\nIn this example we are constructing a form with 3 fields that contain a string,\na buffer and a file stream.\n\n``` javascript\nvar FormData = require('form-data');\nvar fs = require('fs');\n\nvar form = new FormData();\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_file', fs.createReadStream('/foo/bar.jpg'));\n```\n\nIn order to submit this form to a web application, you can use node's http\nclient interface:\n\n``` javascript\nvar http = require('http');\n\nvar request = http.request({\n  method: 'post',\n  host: 'example.org',\n  path: '/upload',\n  headers: form.getHeaders()\n});\n\nform.pipe(request);\n\nrequest.on('response', function(res) {\n  console.log(res.statusCode);\n});\n```\n\nOr if you would prefer the `'Content-Length'` header to be set for you:\n\n``` javascript\nform.submit('example.org/upload', function(err, res) {\n  console.log(res.statusCode);\n});\n```\n\n[xhr2-fd]: http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#the-formdata-interface\n","maintainers":[{"name":"felixge","email":"felix@debuggable.com"},{"name":"idralyuk","email":"igor@buran.us"}],"directories":{}},"0.0.3":{"author":{"name":"Felix Geisendörfer","email":"felix@debuggable.com","url":"http://debuggable.com/"},"name":"form-data","description":"A module to create readable `\"multipart/form-data\"` streams.  Can be used to submit forms and file uploads to other web applications.","version":"0.0.3","repository":{"type":"git","url":"git://github.com/felixge/node-form-data.git"},"main":"./lib/form_data","engines":{"node":"*"},"dependencies":{"combined-stream":"0.0.3","mime":"1.2.2","async":"0.1.9"},"devDependencies":{"fake":"0.2.1","far":"0.0.1","formidable":"1.0.2","request":"~2.9.203"},"readme":"# form-data\n\nA module to create readable `\"multipart/form-data\"` streams.  Can be used to\nsubmit forms and file uploads to other web applications.\n\nThe API of this module is inspired by the\n[XMLHttpRequest-2 FormData Interface][xhr2-fd].\n\n[xhr2-fd]: http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#the-formdata-interface\n\n## Install\n\nSorry, this isn't ready for you yet.\n\n## Usage\n\nIn this example we are constructing a form with 3 fields that contain a string,\na buffer and a file stream.\n\n``` javascript\nvar FormData = require('form-data');\nvar fs = require('fs');\n\nvar form = new FormData();\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_file', fs.createReadStream('/foo/bar.jpg'));\n```\n\nAlso you can use http-response stream:\n\n``` javascript\nvar FormData = require('form-data');\nvar http = require('http');\n\nvar form = new FormData();\n\nhttp.request('http://nodejs.org/images/logo.png', function(response) {\n  form.append('my_field', 'my value');\n  form.append('my_buffer', new Buffer(10));\n  form.append('my_logo', response);\n});\n```\n\nOr @mikeal's request stream:\n\n``` javascript\nvar FormData = require('form-data');\nvar request = require('request');\n\nvar form = new FormData();\n\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_logo', request('http://nodejs.org/images/logo.png'));\n```\n\nIn order to submit this form to a web application, you can use node's http\nclient interface:\n\n``` javascript\nvar http = require('http');\n\nvar request = http.request({\n  method: 'post',\n  host: 'example.org',\n  path: '/upload',\n  headers: form.getHeaders()\n});\n\nform.pipe(request);\n\nrequest.on('response', function(res) {\n  console.log(res.statusCode);\n});\n```\n\nOr if you would prefer the `'Content-Length'` header to be set for you:\n\n``` javascript\nform.submit('example.org/upload', function(err, res) {\n  console.log(res.statusCode);\n});\n```\n\n[xhr2-fd]: http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#the-formdata-interface\n","_id":"form-data@0.0.3","dist":{"shasum":"6eea17b45790b42d779a1d581d1b3600fe0c7c0d","tarball":"http://registry.npmjs.org/form-data/-/form-data-0.0.3.tgz"},"maintainers":[{"name":"felixge","email":"felix@debuggable.com"},{"name":"idralyuk","email":"igor@buran.us"},{"name":"alexindigo","email":"iam@alexindigo.com"}],"directories":{}},"0.0.4":{"author":{"name":"Felix Geisendörfer","email":"felix@debuggable.com","url":"http://debuggable.com/"},"name":"form-data","description":"A module to create readable `\"multipart/form-data\"` streams.  Can be used to submit forms and file uploads to other web applications.","version":"0.0.4","repository":{"type":"git","url":"git://github.com/felixge/node-form-data.git"},"main":"./lib/form_data","engines":{"node":"*"},"dependencies":{"combined-stream":"0.0.3","mime":"~1.2.2","async":"~0.1.9"},"devDependencies":{"fake":"0.2.1","far":"0.0.1","formidable":"1.0.2","request":"~2.9.203"},"readme":"# form-data\n\nA module to create readable `\"multipart/form-data\"` streams.  Can be used to\nsubmit forms and file uploads to other web applications.\n\nThe API of this module is inspired by the\n[XMLHttpRequest-2 FormData Interface][xhr2-fd].\n\n[xhr2-fd]: http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#the-formdata-interface\n\n## Install\n\nSorry, this isn't ready for you yet.\n\n## Usage\n\nIn this example we are constructing a form with 3 fields that contain a string,\na buffer and a file stream.\n\n``` javascript\nvar FormData = require('form-data');\nvar fs = require('fs');\n\nvar form = new FormData();\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_file', fs.createReadStream('/foo/bar.jpg'));\n```\n\nAlso you can use http-response stream:\n\n``` javascript\nvar FormData = require('form-data');\nvar http = require('http');\n\nvar form = new FormData();\n\nhttp.request('http://nodejs.org/images/logo.png', function(response) {\n  form.append('my_field', 'my value');\n  form.append('my_buffer', new Buffer(10));\n  form.append('my_logo', response);\n});\n```\n\nOr @mikeal's request stream:\n\n``` javascript\nvar FormData = require('form-data');\nvar request = require('request');\n\nvar form = new FormData();\n\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_logo', request('http://nodejs.org/images/logo.png'));\n```\n\nIn order to submit this form to a web application, you can use node's http\nclient interface:\n\n``` javascript\nvar http = require('http');\n\nvar request = http.request({\n  method: 'post',\n  host: 'example.org',\n  path: '/upload',\n  headers: form.getHeaders()\n});\n\nform.pipe(request);\n\nrequest.on('response', function(res) {\n  console.log(res.statusCode);\n});\n```\n\nOr if you would prefer the `'Content-Length'` header to be set for you:\n\n``` javascript\nform.submit('example.org/upload', function(err, res) {\n  console.log(res.statusCode);\n});\n```\n\n[xhr2-fd]: http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#the-formdata-interface\n","_id":"form-data@0.0.4","dist":{"shasum":"564115f4a26826903510ec6a94488b4cb11ea317","tarball":"http://registry.npmjs.org/form-data/-/form-data-0.0.4.tgz"},"_npmVersion":"1.1.51","_npmUser":{"name":"alexindigo","email":"iam@alexindigo.com"},"maintainers":[{"name":"felixge","email":"felix@debuggable.com"},{"name":"idralyuk","email":"igor@buran.us"},{"name":"alexindigo","email":"iam@alexindigo.com"}],"directories":{}},"0.0.5":{"author":{"name":"Felix Geisendörfer","email":"felix@debuggable.com","url":"http://debuggable.com/"},"name":"form-data","description":"A module to create readable `\"multipart/form-data\"` streams.  Can be used to submit forms and file uploads to other web applications.","version":"0.0.5","repository":{"type":"git","url":"git://github.com/felixge/node-form-data.git"},"main":"./lib/form_data","engines":{"node":"*"},"dependencies":{"combined-stream":"0.0.3","mime":"~1.2.2","async":"~0.1.9"},"devDependencies":{"fake":"0.2.1","far":"0.0.1","formidable":"1.0.2","request":"~2.9.203"},"readme":"# form-data\n\nA module to create readable `\"multipart/form-data\"` streams.  Can be used to\nsubmit forms and file uploads to other web applications.\n\nThe API of this module is inspired by the\n[XMLHttpRequest-2 FormData Interface][xhr2-fd].\n\n[xhr2-fd]: http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#the-formdata-interface\n\n## Install\n\nSorry, this isn't ready for you yet.\n\n## Usage\n\nIn this example we are constructing a form with 3 fields that contain a string,\na buffer and a file stream.\n\n``` javascript\nvar FormData = require('form-data');\nvar fs = require('fs');\n\nvar form = new FormData();\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_file', fs.createReadStream('/foo/bar.jpg'));\n```\n\nAlso you can use http-response stream:\n\n``` javascript\nvar FormData = require('form-data');\nvar http = require('http');\n\nvar form = new FormData();\n\nhttp.request('http://nodejs.org/images/logo.png', function(response) {\n  form.append('my_field', 'my value');\n  form.append('my_buffer', new Buffer(10));\n  form.append('my_logo', response);\n});\n```\n\nOr @mikeal's request stream:\n\n``` javascript\nvar FormData = require('form-data');\nvar request = require('request');\n\nvar form = new FormData();\n\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_logo', request('http://nodejs.org/images/logo.png'));\n```\n\nIn order to submit this form to a web application, you can use node's http\nclient interface:\n\n``` javascript\nvar http = require('http');\n\nvar request = http.request({\n  method: 'post',\n  host: 'example.org',\n  path: '/upload',\n  headers: form.getHeaders()\n});\n\nform.pipe(request);\n\nrequest.on('response', function(res) {\n  console.log(res.statusCode);\n});\n```\n\nOr if you would prefer the `'Content-Length'` header to be set for you:\n\n``` javascript\nform.submit('example.org/upload', function(err, res) {\n  console.log(res.statusCode);\n});\n```\n\nTo use custom headers and pre-known length in parts:\n\n``` javascript\nvar CRLF = '\\r\\n';\nvar form = new FormData();\n\nvar options = {\n  header: CRLF + '--' + form.getBoundary() + CRLF + 'X-Custom-Header: 123' + CRLF + CRLF,\n  knownLength: 1\n};\n\nform.append('my_buffer', buffer, options);\n\nform.submit('http://example.com/', function(err, res) {\n  if (err) throw err;\n  console.log('Done');\n});\n```\n\n[xhr2-fd]: http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#the-formdata-interface\n","readmeFilename":"Readme.md","_id":"form-data@0.0.5","dist":{"shasum":"2fe21ccdb8c09cf52d60f78d67f2dd242f2a6102","tarball":"http://registry.npmjs.org/form-data/-/form-data-0.0.5.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"alexindigo","email":"iam@alexindigo.com"},"maintainers":[{"name":"felixge","email":"felix@debuggable.com"},{"name":"idralyuk","email":"igor@buran.us"},{"name":"alexindigo","email":"iam@alexindigo.com"},{"name":"mikeal","email":"mikeal.rogers@gmail.com"}],"directories":{}},"0.0.6":{"author":{"name":"Felix Geisendörfer","email":"felix@debuggable.com","url":"http://debuggable.com/"},"name":"form-data","description":"A module to create readable `\"multipart/form-data\"` streams.  Can be used to submit forms and file uploads to other web applications.","version":"0.0.6","repository":{"type":"git","url":"git://github.com/felixge/node-form-data.git"},"main":"./lib/form_data","engines":{"node":"*"},"dependencies":{"combined-stream":"0.0.3","mime":"~1.2.2","async":"~0.1.9"},"devDependencies":{"fake":"0.2.1","far":"0.0.1","formidable":"1.0.2","request":"~2.9.203"},"readme":"# form-data\n\nA module to create readable `\"multipart/form-data\"` streams.  Can be used to\nsubmit forms and file uploads to other web applications.\n\nThe API of this module is inspired by the\n[XMLHttpRequest-2 FormData Interface][xhr2-fd].\n\n[xhr2-fd]: http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#the-formdata-interface\n\n## Install\n\nSorry, this isn't ready for you yet.\n\n## Usage\n\nIn this example we are constructing a form with 3 fields that contain a string,\na buffer and a file stream.\n\n``` javascript\nvar FormData = require('form-data');\nvar fs = require('fs');\n\nvar form = new FormData();\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_file', fs.createReadStream('/foo/bar.jpg'));\n```\n\nAlso you can use http-response stream:\n\n``` javascript\nvar FormData = require('form-data');\nvar http = require('http');\n\nvar form = new FormData();\n\nhttp.request('http://nodejs.org/images/logo.png', function(response) {\n  form.append('my_field', 'my value');\n  form.append('my_buffer', new Buffer(10));\n  form.append('my_logo', response);\n});\n```\n\nOr @mikeal's request stream:\n\n``` javascript\nvar FormData = require('form-data');\nvar request = require('request');\n\nvar form = new FormData();\n\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_logo', request('http://nodejs.org/images/logo.png'));\n```\n\nIn order to submit this form to a web application, you can use node's http\nclient interface:\n\n``` javascript\nvar http = require('http');\n\nvar request = http.request({\n  method: 'post',\n  host: 'example.org',\n  path: '/upload',\n  headers: form.getHeaders()\n});\n\nform.pipe(request);\n\nrequest.on('response', function(res) {\n  console.log(res.statusCode);\n});\n```\n\nOr if you would prefer the `'Content-Length'` header to be set for you:\n\n``` javascript\nform.submit('example.org/upload', function(err, res) {\n  console.log(res.statusCode);\n});\n```\n\nTo use custom headers and pre-known length in parts:\n\n``` javascript\nvar CRLF = '\\r\\n';\nvar form = new FormData();\n\nvar options = {\n  header: CRLF + '--' + form.getBoundary() + CRLF + 'X-Custom-Header: 123' + CRLF + CRLF,\n  knownLength: 1\n};\n\nform.append('my_buffer', buffer, options);\n\nform.submit('http://example.com/', function(err, res) {\n  if (err) throw err;\n  console.log('Done');\n});\n```\n\nFor edge cases, like POST request to URL with query string or to pass HTTP auth creadentials, object can be passed to `form.submit()` as first parameter:\n\n``` javascript\nform.submit({\n  host: 'example.com',\n  path: '/probably.php?extra=params',\n  auth: 'username:password'\n}, function(err, res) {\n  console.log(res.statusCode);\n});\n```\n\n\n[xhr2-fd]: http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#the-formdata-interface\n","readmeFilename":"Readme.md","_id":"form-data@0.0.6","dist":{"shasum":"77ba50dea04bc6eb9bc7bd2d119e64b1f8070a41","tarball":"http://registry.npmjs.org/form-data/-/form-data-0.0.6.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"alexindigo","email":"iam@alexindigo.com"},"maintainers":[{"name":"felixge","email":"felix@debuggable.com"},{"name":"idralyuk","email":"igor@buran.us"},{"name":"alexindigo","email":"iam@alexindigo.com"},{"name":"mikeal","email":"mikeal.rogers@gmail.com"}],"directories":{}},"0.0.7":{"author":{"name":"Felix Geisendörfer","email":"felix@debuggable.com","url":"http://debuggable.com/"},"name":"form-data","description":"A module to create readable `\"multipart/form-data\"` streams.  Can be used to submit forms and file uploads to other web applications.","version":"0.0.7","repository":{"type":"git","url":"git://github.com/felixge/node-form-data.git"},"main":"./lib/form_data","engines":{"node":"*"},"dependencies":{"combined-stream":"~0.0.4","mime":"~1.2.2","async":"~0.1.9"},"devDependencies":{"fake":"0.2.1","far":"0.0.1","formidable":"1.0.2","request":"~2.9.203"},"readme":"# form-data\n\nA module to create readable `\"multipart/form-data\"` streams.  Can be used to\nsubmit forms and file uploads to other web applications.\n\nThe API of this module is inspired by the\n[XMLHttpRequest-2 FormData Interface][xhr2-fd].\n\n[xhr2-fd]: http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#the-formdata-interface\n\n## Install\n\nSorry, this isn't ready for you yet.\n\n## Usage\n\nIn this example we are constructing a form with 3 fields that contain a string,\na buffer and a file stream.\n\n``` javascript\nvar FormData = require('form-data');\nvar fs = require('fs');\n\nvar form = new FormData();\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_file', fs.createReadStream('/foo/bar.jpg'));\n```\n\nAlso you can use http-response stream:\n\n``` javascript\nvar FormData = require('form-data');\nvar http = require('http');\n\nvar form = new FormData();\n\nhttp.request('http://nodejs.org/images/logo.png', function(response) {\n  form.append('my_field', 'my value');\n  form.append('my_buffer', new Buffer(10));\n  form.append('my_logo', response);\n});\n```\n\nOr @mikeal's request stream:\n\n``` javascript\nvar FormData = require('form-data');\nvar request = require('request');\n\nvar form = new FormData();\n\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_logo', request('http://nodejs.org/images/logo.png'));\n```\n\nIn order to submit this form to a web application, you can use node's http\nclient interface:\n\n``` javascript\nvar http = require('http');\n\nvar request = http.request({\n  method: 'post',\n  host: 'example.org',\n  path: '/upload',\n  headers: form.getHeaders()\n});\n\nform.pipe(request);\n\nrequest.on('response', function(res) {\n  console.log(res.statusCode);\n});\n```\n\nOr if you would prefer the `'Content-Length'` header to be set for you:\n\n``` javascript\nform.submit('example.org/upload', function(err, res) {\n  console.log(res.statusCode);\n});\n```\n\nTo use custom headers and pre-known length in parts:\n\n``` javascript\nvar CRLF = '\\r\\n';\nvar form = new FormData();\n\nvar options = {\n  header: CRLF + '--' + form.getBoundary() + CRLF + 'X-Custom-Header: 123' + CRLF + CRLF,\n  knownLength: 1\n};\n\nform.append('my_buffer', buffer, options);\n\nform.submit('http://example.com/', function(err, res) {\n  if (err) throw err;\n  console.log('Done');\n});\n```\n\nFor edge cases, like POST request to URL with query string or to pass HTTP auth creadentials, object can be passed to `form.submit()` as first parameter:\n\n``` javascript\nform.submit({\n  host: 'example.com',\n  path: '/probably.php?extra=params',\n  auth: 'username:password'\n}, function(err, res) {\n  console.log(res.statusCode);\n});\n```\n\n\n[xhr2-fd]: http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#the-formdata-interface\n","readmeFilename":"Readme.md","_id":"form-data@0.0.7","dist":{"shasum":"7211182a26a266ce39710dc8bc4a81b7040859be","tarball":"http://registry.npmjs.org/form-data/-/form-data-0.0.7.tgz"},"_from":".","_npmVersion":"1.2.10","_npmUser":{"name":"celer","email":"dtyree77@gmail.com"},"maintainers":[{"name":"felixge","email":"felix@debuggable.com"},{"name":"idralyuk","email":"igor@buran.us"},{"name":"alexindigo","email":"iam@alexindigo.com"},{"name":"mikeal","email":"mikeal.rogers@gmail.com"},{"name":"celer","email":"dtyree77@gmail.com"}],"directories":{}}},"maintainers":[{"name":"felixge","email":"felix@debuggable.com"},{"name":"idralyuk","email":"igor@buran.us"},{"name":"alexindigo","email":"iam@alexindigo.com"},{"name":"mikeal","email":"mikeal.rogers@gmail.com"},{"name":"celer","email":"dtyree77@gmail.com"}],"time":{"0.0.0":"2011-05-16T14:58:22.532Z","0.0.2":"2012-07-02T21:59:37.447Z","0.0.3":"2012-08-10T03:05:05.412Z","0.0.4":"2012-09-06T16:47:43.385Z","0.0.5":"2012-12-05T07:06:20.011Z","0.0.6":"2013-01-08T08:04:51.296Z","0.0.7":"2013-02-10T02:53:05.643Z"},"author":{"name":"Felix Geisendörfer","email":"felix@debuggable.com","url":"http://debuggable.com/"},"repository":{"type":"git","url":"git://github.com/felixge/node-form-data.git"},"users":{"alexindigo":true},"_attachments":{"form-data-0.0.7.tgz":{"content_type":"application/octet-stream","revpos":24,"digest":"md5-KJcxGTwNLVXQfBra4j/dNA==","length":27366,"stub":true},"form-data-0.0.6.tgz":{"content_type":"application/octet-stream","revpos":21,"digest":"md5-JFtCQIHcnXP/wfXYlglrxQ==","length":29949,"stub":true},"form-data-0.0.5.tgz":{"content_type":"application/octet-stream","revpos":19,"digest":"md5-8iXJ5TVRYpMu5e0mbi840Q==","length":29077,"stub":true},"form-data-0.0.4.tgz":{"content_type":"application/octet-stream","revpos":16,"digest":"md5-2Sx68Ul7l5hvMSy52ATsYg==","length":27362,"stub":true},"form-data-0.0.3.tgz":{"content_type":"application/octet-stream","revpos":13,"digest":"md5-Qsj92vkXBA/UXhf8A7vONw==","length":27353,"stub":true},"form-data-0.0.2.tgz":{"content_type":"application/octet-stream","revpos":10,"digest":"md5-5mGAXEepF62v+ModSkNQYg==","length":23542,"stub":true},"form-data-0.0.0.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-Fw0/sIDTrD0cmGHPI37MEA==","length":6019,"stub":true}},"_etag":"\"ASEJD1448LR2HP87RUQJ2BI48\""}