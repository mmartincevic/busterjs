{"_id":"jsdom","_rev":"118-9f19272c5732cfb53d823cf22f4b9dc9","name":"jsdom","description":"A JavaScript implementation of the W3C DOM","dist-tags":{"latest":"0.5.3"},"versions":{"0.0.1":{"name":"jsdom","version":"0.0.1","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">= 0.1.0"},"os":["linux","macos","win"],"cpu":["x86","ppc","x86_64"],"engines":["v8","ejs","node","rhino"],"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.0.1","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"b270a7e2a79875d0dba3e9c59cea8cefb32f2ad1","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.0.1.tgz"}},"0.1.2":{"name":"jsdom","version":"0.1.2","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">= 0.1.0"},"os":["linux","macos","win"],"cpu":["x86","ppc","x86_64"],"engines":["v8","ejs","node","rhino"],"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.2","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"5117bfe0e7962b3dd577931e5b7b335db030ced1","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.2.tgz"}},"0.1.4":{"name":"jsdom","version":"0.1.4","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">= 0.1.0"},"os":["linux","macos","win"],"cpu":["x86","ppc","x86_64"],"engines":["v8","ejs","node","rhino"],"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.4","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"2c9ee02ea3ea2f0b4e387b1821ccf5424b31dca5","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.4.tgz"}},"0.1.5":{"name":"jsdom","version":"0.1.5","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">= 0.1.0"},"os":["linux","macos","win"],"cpu":["x86","ppc","x86_64"],"engines":["v8","ejs","node","rhino"],"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.5","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"5096c757e444016d77f02edb82864ec130b6d9a5","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.5.tgz"}},"0.1.6":{"name":"jsdom","version":"0.1.6","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">= 0.1.0"},"os":["linux","macos","win"],"cpu":["x86","ppc","x86_64"],"engines":["v8","ejs","node","rhino"],"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.6","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"40da4aa5eaa1d3652185f5372e610a2194fe5214","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.6.tgz"}},"0.1.7":{"name":"jsdom","version":"0.1.7","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">= 0.1.0"},"os":["linux","macos","win"],"cpu":["x86","ppc","x86_64"],"engines":["v8","ejs","node","rhino"],"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.7","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"b767b38cbae8226f3ca1e8c80860be11d5da0450","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.7.tgz"}},"0.1.8":{"name":"jsdom","version":"0.1.8","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">= 0.1.0"},"os":["linux","macos","win"],"cpu":["x86","ppc","x86_64"],"engines":["v8","ejs","node","rhino"],"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.8","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"4d79b47fc734ff30f7b3ef137f1fa76a622eddda","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.8.tgz"}},"0.1.9":{"name":"jsdom","version":"0.1.9","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">= 0.1.0"},"os":["linux","macos","win"],"cpu":["x86","ppc","x86_64"],"engines":["v8","ejs","node","rhino"],"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.9","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"90970ee0062390204b283033c53e41a60a549c00","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.9.tgz"}},"0.1.10":{"name":"jsdom","version":"0.1.10","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">= 0.1.0"},"os":["linux","macos","win"],"cpu":["x86","ppc","x86_64"],"engines":["v8","ejs","node","rhino"],"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.10","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"c9b62e962e6ee72dc21cf0ba5989af99cdf73894","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.10.tgz"}},"0.1.11":{"name":"jsdom","version":"0.1.11","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">= 0.1.0"},"os":["linux","macos","win"],"cpu":["x86","ppc","x86_64"],"engines":["v8","ejs","node","rhino"],"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.11","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"bc25e30aa7d5f01dec8279999ae2ce1f94585aa4","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.11.tgz"}},"0.1.12":{"name":"jsdom","version":"0.1.12","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">= 0.1.0"},"os":["linux","macos","win"],"cpu":["x86","ppc","x86_64"],"engines":["v8","ejs","node","rhino"],"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.12","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"35c5a675ca6cf5b46b1805cfdbd6397584685d54","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.12.tgz"}},"0.1.13":{"name":"jsdom","version":"0.1.13","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">= 0.1.0"},"os":["linux","macos","win"],"cpu":["x86","ppc","x86_64"],"engines":["v8","ejs","node","rhino"],"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.13","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"dc8348808ab1e6184e6ac19463a77136e5be01d3","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.13.tgz"}},"0.1.15":{"name":"jsdom","version":"0.1.15","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">= 0.1.0"},"engines":{"node":">=0.1.9"},"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.15","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"ce04889fcc01fcd16c2a3ae43cb57b130e7329ed","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.15.tgz"}},"0.1.16":{"name":"jsdom","version":"0.1.16","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">= 0.1.0"},"engines":{"node":">=0.1.9"},"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.16","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"7130725853437060820c4fecd3cee94bee80734f","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.16.tgz"}},"0.1.17":{"name":"jsdom","version":"0.1.17","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">= 0.1.0"},"engines":{"node":">=0.1.9"},"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.17","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"0a56ed01b9801ac42b853e5796bf8359563a16b5","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.17.tgz"}},"0.1.18":{"name":"jsdom","version":"0.1.18","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">= 0.1.0"},"engines":{"node":">=0.1.9"},"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.18","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"27c57f52dee9b5ba16709dde5ba178ca5dce053c","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.18.tgz"}},"0.1.19":{"name":"jsdom","version":"0.1.19","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">= 0.1.0"},"engines":{"node":">=0.1.9"},"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.19","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"c4e73293362380ed49a3f2ba90d82604e934a51d","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.19.tgz"}},"0.1.20":{"name":"jsdom","version":"0.1.20","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">=0.1.0","request":">=0.10.0"},"engines":{"node":">=0.1.9"},"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.20","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"488049dbcb3f5c3ac7088d1a7e3742744f0a8b6f","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.20.tgz"}},"0.1.21":{"name":"jsdom","version":"0.1.21","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"mjsunit.runner":">=0.1.0"},"engines":{"node":">=0.1.9"},"directories":{"lib":"lib"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.21","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"95c1e9562e22ae55d6b526a2450ca30a2b3dbab4","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.21.tgz"}},"0.1.22":{"name":"jsdom","version":"0.1.22","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":">=1.7.0"},"devDependiencies":{"mjsunit.runner":">=0.1.0"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.22","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"4be2e7faa490562f5fffdab4290a626ea46d2a40","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.22.tgz"}},"0.1.23":{"name":"jsdom","version":"0.1.23","description":"CommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.","keywords":["dom","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":">=1.7.0"},"devDependiencies":{"mjsunit.runner":">=0.1.0"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.1.23","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"f866d0a1bb5fe4785bedb360f5e720197eb325ed","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.1.23.tgz"}},"0.2.0":{"name":"jsdom","version":"0.2.0","description":"A javascript implementation of the W3C DOM","keywords":["dom","w3c","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","email":"N/A","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":">=1.7.0","request":">=1.0.0"},"devDependiencies":{"mjsunit.runner":">=0.1.0"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.2.0","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"03b2ab99052b3171d9d010606c939513eaebc746","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.0.tgz"}},"0.2.1":{"name":"jsdom","version":"0.2.1","description":"A javascript implementation of the W3C DOM","keywords":["dom","w3c","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","email":"N/A","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":">=1.7.0","request":">=1.0.0","cssom":">=0.2.0"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.2.1","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"b8b600610e4e46a9b323b5b7e049e3de959942e3","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.1.tgz"}},"0.2.2":{"name":"jsdom","version":"0.2.2","description":"A javascript implementation of the W3C DOM","keywords":["dom","w3c","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","email":"N/A","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":">=1.7.0","request":">=1.0.0","cssom":">=0.2.0","contextify":">=0.0.1"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.2.2","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"0bcfbbf6c2547e07a714d67252a3cd3c6ff31a1e","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.2.tgz"}},"0.2.3":{"name":"jsdom","version":"0.2.3","description":"A javascript implementation of the W3C DOM","keywords":["dom","w3c","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","email":"N/A","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":">=1.7.0","request":">=1.0.0","cssom":">=0.2.0","contextify":">=0.0.3"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.2.3","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"d162cb9cb32ae91be046622bb97f39b977b9b47b","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.3.tgz"}},"0.2.4":{"name":"jsdom","version":"0.2.4","description":"A javascript implementation of the W3C DOM","keywords":["dom","w3c","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","email":"N/A","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":">=1.7.0","request":">=1.0.0","cssom":">=0.2.0","contextify":">=0.0.3"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.2.4","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"9072421fe9537f568ce837bc747e04cd716e59bb","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.4.tgz"}},"0.2.5":{"name":"jsdom","version":"0.2.5","description":"A javascript implementation of the W3C DOM","keywords":["dom","w3c","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","email":"N/A","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":">=1.7.0","request":">=1.0.0","cssom":">=0.2.0","contextify":">=0.0.3"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.2.5","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"316a582966936326835cd2ec19f739c6262bf18a","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.5.tgz"}},"0.2.6":{"name":"jsdom","version":"0.2.6","description":"A javascript implementation of the W3C DOM","keywords":["dom","w3c","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","email":"N/A","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":">=1.7.0","request":">=1.0.0","cssom":">=0.2.0","contextify":">=0.0.3"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.2.6","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"58c8c0143b2e41e0bf25d32f20ee333ed4adaa62","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.6.tgz"}},"0.2.7":{"name":"jsdom","version":"0.2.7","description":"A javascript implementation of the W3C DOM","keywords":["dom","w3c","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","email":"N/A","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":">=1.7.0","request":">=1.0.0","cssom":">=0.2.0","contextify":">=0.0.3"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.2.7","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"85bf57dfa7d79ab01e8fdb1b05cda19cc608a2d3","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.7.tgz"}},"0.2.8":{"name":"jsdom","version":"0.2.8","description":"A javascript implementation of the W3C DOM","keywords":["dom","w3c","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","email":"N/A","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":">=1.7.0","request":">=1.0.0","cssom":">=0.2.0","contextify":">=0.0.3"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.2.8","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"527b41dbae1be8b52fae24d58ed7c24108145ff6","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.8.tgz"}},"0.2.9":{"name":"jsdom","version":"0.2.9","description":"A javascript implementation of the W3C DOM","keywords":["dom","w3c","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","email":"N/A","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":">=1.7.0","request":">=1.0.0","cssom":">=0.2.0","contextify":">=0.0.3"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.2.9","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"997104091dcdb0400d9792eb8a6e62175c29ea2c","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.9.tgz"}},"0.2.10":{"name":"jsdom","version":"0.2.10","description":"A javascript implementation of the W3C DOM","keywords":["dom","w3c","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","email":"N/A","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","request":"2.x","cssom":"0.2.x","contextify":"0.0.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.2.10","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1-pre","_defaultsLoaded":true,"dist":{"shasum":"445e36549318aea97f6cc59985cd1e2fc885537f","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.10.tgz"}},"0.2.11":{"name":"jsdom","version":"0.2.11","description":"A javascript implementation of the W3C DOM","keywords":["dom","w3c","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","email":"N/A","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","request":"2.x","cssom":"0.2.x","contextify":"0.1.x"},"optionalDependencies":{"contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.2.11","_engineSupported":true,"_npmVersion":"1.1.0-alpha-2","_nodeVersion":"v0.6.4-pre","_defaultsLoaded":true,"dist":{"shasum":"d2167cc67657b5904e6a770f274341e27e8260b7","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.11.tgz"}},"0.2.12":{"name":"jsdom","version":"0.2.12","description":"A javascript implementation of the W3C DOM","keywords":["dom","w3c","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","email":"N/A","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","request":"2.x","cssom":"0.2.x","contextify":"0.1.x"},"optionalDependencies":{"contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.2.12","_engineSupported":true,"_npmVersion":"1.1.0-alpha-2","_nodeVersion":"v0.6.4-pre","_defaultsLoaded":true,"dist":{"shasum":"f0fd86f7dea82005cf6f7256e1bf3c7bf766a135","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.12.tgz"}},"0.2.13":{"name":"jsdom","version":"0.2.13","description":"A javascript implementation of the W3C DOM","keywords":["dom","w3c","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","email":"N/A","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","request":"2.x","cssom":"0.2.x","contextify":"0.1.x"},"optionalDependencies":{"contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.2.13","_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"61814ecfd8a8174ebee7ef1ff2eaf224577c8ffa","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.13.tgz"}},"0.2.14":{"name":"jsdom","version":"0.2.14","description":"A javascript implementation of the W3C DOM","keywords":["dom","w3c","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","email":"N/A","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","request":"2.x","cssom":"0.2.x","contextify":"0.1.x"},"optionalDependencies":{"contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.2.14","_engineSupported":true,"_npmVersion":"1.1.2","_nodeVersion":"v0.6.9","_defaultsLoaded":true,"dist":{"shasum":"713224f2e1a7b6f70bdd378f520a9d28bd32ecd8","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.14.tgz"}},"0.2.15":{"name":"jsdom","version":"0.2.15","description":"A javascript implementation of the W3C DOM","keywords":["dom","w3c","javascript"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","email":"N/A","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"},{"name":"Tiago Rodrigues","email":"tmcrodrigues@gmail.com","url":"http://trodrigues.net"},{"name":"Samori Gorse","email":"samorigorse@gmail.com","url":"http://github.com/shinuza"},{"name":"John Roberts","email":"jroberts@logitech.com"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","request":"2.x","cssom":"0.2.x","contextify":"0.1.x"},"optionalDependencies":{"contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"engines":{"node":">=0.1.9"},"directories":{"lib":"./lib/jsdom"},"main":"./lib/jsdom","_npmUser":{"name":"tmpvar","email":"tmpvar@gmail.com"},"_id":"jsdom@0.2.15","_engineSupported":true,"_npmVersion":"1.1.19","_nodeVersion":"v0.8.2","_defaultsLoaded":true,"dist":{"shasum":"c60224bcd4b5137bb93eeb8e6c039fc42b0b1524","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.15.tgz"}},"0.2.16":{"name":"jsdom","version":"0.2.16","description":"A JavaScript implementation of the W3C DOM","keywords":["dom","w3c","html"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"},{"name":"domenicdenicola","email":"domenic@domenicdenicola.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"},{"name":"Tiago Rodrigues","email":"tmcrodrigues@gmail.com","url":"http://trodrigues.net"},{"name":"Samori Gorse","email":"samorigorse@gmail.com","url":"http://github.com/shinuza"},{"name":"John Roberts","email":"jroberts@logitech.com"},{"name":"Chad Walker","email":"chad@chad-cat-lore-eddie.com","url":"https://github.com/chad3814"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","request":"2.x","cssom":">=0.2.2","cssstyle":"0.2.x","contextify":"0.1.x"},"optionalDependencies":{"contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"directories":{"lib":"./lib/jsdom"},"scripts":{"test":"node ./test/runner"},"main":"./lib/jsdom","readme":"# jsdom\n\nA JavaScript implementation of the W3C DOM.\n\n## Install\n\n```bash\n$ npm install jsdom\n```\n\n## Human contact\n\nsee: [mailing list](http://groups.google.com/group/jsdom)\n\n## Easymode\n\nBootstrapping a DOM is generally a difficult process involving many error prone steps. We didn't want jsdom to fall into the same trap and that is why a new method, `jsdom.env()`, has been added in jsdom 0.2.0 which should make everyone's lives easier.\n\nwith URL\n\n```js\n// Count all of the links from the nodejs build page\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  \"http://nodejs.org/dist/\",\n  [\"http://code.jquery.com/jquery.js\"],\n  function (errors, window) {\n    console.log(\"there have been\", window.$(\"a\").length, \"nodejs releases!\");\n  }\n);\n```\n\nor with raw HTML\n\n```js\n// Run some jQuery on a html fragment\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  '<p><a class=\"the-link\" href=\"https://github.com/tmpvar/jsdom\">jsdom\\'s Homepage</a></p>',\n  [\"http://code.jquery.com/jquery.js\"],\n  function(errors, window) {\n    console.log(\"contents of a.the-link:\", window.$(\"a.the-link\").text());\n  }\n);\n```\n\nor with a configuration object\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  scripts: [\"http://code.jquery.com/jquery.js\"],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\nor with raw JavaScript source\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\nvar fs = require(\"fs\");\nvar jquery = fs.readFileSync(\"./jquery.js\").toString();\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  src: [jquery],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\n### How it works\n`jsdom.env` is built for ease of use, which is rare in the world of the DOM! Since the web has some absolutely horrible JavaScript on it, as of jsdom 0.2.0 `jsdom.env` will not process external resources (scripts, images, etc).  If you want to process the JavaScript use one of the methods below (`jsdom.jsdom` or `jsdom.jQueryify`)\n\n```js\njsdom.env(html, [scripts], [config], callback);\n```\n\n- `html` (**required**): may be a URL, HTML fragment, or file.\n- `scripts` (**optional**): may contain files or URLs.\n- `config` (**optional**): see below.\n- `callback` (**required**): takes two arguments:\n  - `errors`: an array of errors\n  - `window`: a brand new window\n\n_example:_\n\n```js\njsdom.env(html, function (errors, window) {\n  // free memory associated with the window\n  window.close();\n});\n```\n\nIf you would like to specify a configuration object only:\n\n```js\njsdom.env(config);\n```\n\n- `config.html`: see `html` above.\n- `config.scripts`: see `scripts` above.\n- `config.src`: an array of JavaScript strings that will be evaluated against the resulting document. Similar to `scripts`, but it accepts JavaScript instead of paths/URLs.\n- `config.done`: see `callback` above.\n- `config.document`:\n  - `referer`: the new document will have this referer\n  - `cookie`: manually set a cookie value, e.g. `'key=value; expires=Wed, Sep 21 2011 12:00:00 GMT; path=/'`\n- `config.features` : see `Flexibility` section below. **Note**: the default feature set for jsdom.env does _not_ include fetching remote JavaScript and executing it. This is something that you will need to **carefully** enable yourself.\n\n## For the hardcore\n\nIf you want to spawn a document/window and specify all sorts of options this is the section for you. This section covers the `jsdom.jsdom` method:\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar doc = jsdom(markup, level, options);\nvar window = doc.createWindow();\n```\n\n- `markup` is an HTML/XML document to be parsed. You can also pass `null` or an undefined value to get a basic document with empty `<head>` and `<body>` tags. Document fragments are also supported (including `\"\"`), and will behave as sanely as possible (e.g. the resulting document will lack the `head`, `body` and `documentElement` properties if the corresponding elements aren't included).\n\n- `level` is `null` (which means level3) by default, but you can pass another level if you'd like.\n\n  ```js\n  var jsdom = require(\"jsdom\");\n  var doc = jsdom.jsdom(\"<html><body></body></html>\", jsdom.level(1, \"core\"));\n  ```\n\n- `options` see the **Flexibility** section below.\n\n### Flexibility\n\nOne of the goals of jsdom is to be as minimal and light as possible. This section details how someone can change the behavior of `Document`s on the fly.  These features are baked into the `DOMImplementation` that every `Document` has, and may be tweaked in two ways:\n\n1. When you create a new `Document` using the jsdom builder (`require(\"jsdom\").jsdom()`)\n\n  ```js\n  var jsdom = require(\"jsdom\").jsdom;\n  var doc = jsdom(\"<html><body></body></html>\", null, {\n    features: {\n      FetchExternalResources : [\"img\"]\n    }\n  });\n  ```\n\n  Do note, that this will only affect the document that is currently being created. All other documents will use the defaults specified below (see: Default Features).\n\n2. Before creating any documents, you can modify the defaults for all future documents:\n\n  ```js\n  require(\"jsdom\").defaultDocumentFeatures = {\n    FetchExternalResources: [\"script\"],\n    ProcessExternalResources: false,\n    MutationEvents: false,\n    QuerySelector: false\n  };\n  ```\n\n#### Default Features\n\nDefault features are extremely important for jsdom as they lower the configuration requirement and present developers a set of consistent default behaviors. The following sections detail the available features, their defaults, and the values that jsdom uses.\n\n\n`FetchExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\", \"img\", \"css\", \"frame\", \"iframe\", \"link\"]` or `false`\n\nEnables/disables fetching files over the file system/HTTP.\n\n`ProcessExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\"]` or `false`\n\nDisabling this will disable script execution (currently only JavaScript).\n\n`MutationEvents`\n\n- _Default_: `\"2.0\"`\n- _Allowed_ : `\"2.0\"` or `false`\n\nInitially enabled to be up to spec. Disable this if you do not need mutation events and want jsdom to be a bit more efficient.\n\n**Note**: `ProcessExternalResources` requires this to be enabled.\n\n`QuerySelector`\n\n - _Default_ : `false`\n - _Allowed_ : `true`\n\nThis feature is backed by [sizzle][] but currently causes problems with some libraries. Enable this if you want `document.querySelector` and friends, but be aware that many libraries feature detect for this, and it may cause you a bit of trouble.\n\n[sizzle]: http://sizzlejs.com/\n\n## Canvas\n\njsdom includes support for using the [canvas](https://npmjs.org/package/canvas) package to extend any `<canvas>` elements with the canvas API. To make this work, you need to include canvas as a dependency in your project, as a peer of jsdom. If jsdom can find the canvas package, it will use it, but if it's not present, then `<canvas>` elements will behave like `<div>`s.\n\n# More Examples\n\n## Creating a document-less window\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.createWindow();\n\nconsole.log(window.document); // output: undefined\n```\n\n## Creating a document\n\n```js\nvar jsdom = require(\"jsdom\");\nvar doc = new (jsdom.level(1, \"core\").Document)();\n\nconsole.log(doc.nodeName); // outputs: #document\n```\n\n## Creating a browser-like BOM/DOM/Window\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar document = jsdom(\"<html><head></head><body>hello world</body></html>\");\nvar window = document.createWindow();\n\nconsole.log(window.document.innerHTML);\n// output: \"<html><head></head><body>hello world</body></html>\"\n\nconsole.log(window.innerWidth);\n// output: 1024\n\nconsole.log(typeof window.document.getElementsByClassName);\n// outputs: function\n```\n\n## jQueryify\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.jsdom().createWindow();\n\njsdom.jQueryify(window, \"http://code.jquery.com/jquery.js\", function () {\n  window.$(\"body\").append('<div class=\"testing\">Hello World, It works</div>');\n\n  console.log(window.$(\".testing\").text());\n});\n```\n\n## Passing objects to scripts inside the page\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar window = jsdom().createWindow();\n\nwindow.__myObject = { foo: \"bar\" };\n\nvar scriptEl = window.document.createElement(\"script\");\nscriptEl.src = \"anotherScript.js\";\nwindow.document.body.appendChild(scriptEl);\n\n// anotherScript.js will have the ability to read `window.__myObject`, even\n// though it originated in Node!\n```\n\n# Test Compliance:\n\n```\n level1/core                        532/532      100%\n level1/html                        238/238      100%\n level1/svg                         527/527      100%\n level2/core                        283/283      100%\n level2/html                        694/694      100%\n level2/style                           5/5      100%\n level2/extra                           4/4      100%\n level2/events                        24/24      100%\n level3/xpath                         93/93      100%\n window/index                           5/5      100%\n window/script                        10/10      100%\n window/frame                         14/14      100%\n sizzle/index                         12/15       80%\n jsdom/index                          79/79      100%\n jsonp/jsonp                            1/1      100%\n browser/contextifyReplacement          4/4      100%\n browser/index                        22/22      100%\n------------------------------------------------------\nTOTALS: 3/2550 failed; 99% success\n```\n\n## Running the tests\n\nFirst you'll want to `npm install`. To run all the tests, use `npm test`, which just calls `node test/runner`.\n\nUsing `test/runner` directly, you can slice and dice which tests your want to run from different levels. Usage is as follows:\n\n```\ntest/runner --help\nRun the jsdom test suite\n\nOptions:\n-s, --suites     suites that you want to run. ie: -s level1/core,1/html,html [string]\n-f, --fail-fast  stop on the first failed test\n-h, --help       show the help\n-t, --tests      choose the test cases to run. ie: -t jquery\n```\n","_id":"jsdom@0.2.16","dist":{"shasum":"cf1724fa56f4c7120227e4e3638a92d1375ce2fc","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.16.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"domenicdenicola","email":"domenic@domenicdenicola.com"}},"0.2.17":{"name":"jsdom","version":"0.2.17","description":"A JavaScript implementation of the W3C DOM","keywords":["dom","w3c","html"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"},{"name":"domenicdenicola","email":"domenic@domenicdenicola.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"},{"name":"Tiago Rodrigues","email":"tmcrodrigues@gmail.com","url":"http://trodrigues.net"},{"name":"Samori Gorse","email":"samorigorse@gmail.com","url":"http://github.com/shinuza"},{"name":"John Roberts","email":"jroberts@logitech.com"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","request":"2.x","cssom":"0.2.x","contextify":"0.1.x"},"optionalDependencies":{"contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"directories":{"lib":"./lib/jsdom"},"scripts":{"test":"node ./test/runner"},"main":"./lib/jsdom","readme":"# jsdom\n\nA JavaScript implementation of the W3C DOM.\n\n## Install\n\n```bash\n$ npm install jsdom\n```\n\n## Human contact\n\nsee: [mailing list](http://groups.google.com/group/jsdom)\n\n## Easymode\n\nBootstrapping a DOM is generally a difficult process involving many error prone steps. We didn't want jsdom to fall into the same trap and that is why a new method, `jsdom.env()`, has been added in jsdom 0.2.0 which should make everyone's lives easier.\n\nwith URL\n\n```js\n// Count all of the links from the nodejs build page\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  \"http://nodejs.org/dist/\",\n  [\"http://code.jquery.com/jquery.js\"],\n  function (errors, window) {\n    console.log(\"there have been\", window.$(\"a\").length, \"nodejs releases!\");\n  }\n);\n```\n\nor with raw HTML\n\n```js\n// Run some jQuery on a html fragment\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  '<p><a class=\"the-link\" href=\"https://github.com/tmpvar/jsdom\">jsdom\\'s Homepage</a></p>',\n  [\"http://code.jquery.com/jquery.js\"],\n  function(errors, window) {\n    console.log(\"contents of a.the-link:\", window.$(\"a.the-link\").text());\n  }\n);\n```\n\nor with a configuration object\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  scripts: [\"http://code.jquery.com/jquery.js\"],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\nor with raw JavaScript source\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\nvar fs = require(\"fs\");\nvar jquery = fs.readFileSync(\"./jquery.js\").toString();\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  src: [jquery],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\n### How it works\n`jsdom.env` is built for ease of use, which is rare in the world of the DOM! Since the web has some absolutely horrible JavaScript on it, as of jsdom 0.2.0 `jsdom.env` will not process external resources (scripts, images, etc).  If you want to process the JavaScript use one of the methods below (`jsdom.jsdom` or `jsdom.jQueryify`)\n\n```js\njsdom.env(html, [scripts], [config], callback);\n```\n\n- `html` (**required**): may be a URL, HTML fragment, or file.\n- `scripts` (**optional**): may contain files or URLs.\n- `config` (**optional**): see below.\n- `callback` (**required**): takes two arguments:\n  - `errors`: an array of errors\n  - `window`: a brand new window\n\n_example:_\n\n```js\njsdom.env(html, function (errors, window) {\n  // free memory associated with the window\n  window.close();\n});\n```\n\nIf you would like to specify a configuration object only:\n\n```js\njsdom.env(config);\n```\n\n- `config.html`: see `html` above.\n- `config.scripts`: see `scripts` above.\n- `config.src`: an array of JavaScript strings that will be evaluated against the resulting document. Similar to `scripts`, but it accepts JavaScript instead of paths/URLs.\n- `config.done`: see `callback` above.\n- `config.document`:\n  - `referer`: the new document will have this referer\n  - `cookie`: manually set a cookie value, e.g. `'key=value; expires=Wed, Sep 21 2011 12:00:00 GMT; path=/'`\n- `config.features` : see `Flexibility` section below. **Note**: the default feature set for jsdom.env does _not_ include fetching remote JavaScript and executing it. This is something that you will need to **carefully** enable yourself.\n\n## For the hardcore\n\nIf you want to spawn a document/window and specify all sorts of options this is the section for you. This section covers the `jsdom.jsdom` method:\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar doc = jsdom(markup, level, options);\nvar window = doc.createWindow();\n```\n\n- `markup` is an HTML/XML document to be parsed. You can also pass `null` or an undefined value to get a basic document with empty `<head>` and `<body>` tags. Document fragments are also supported (including `\"\"`), and will behave as sanely as possible (e.g. the resulting document will lack the `head`, `body` and `documentElement` properties if the corresponding elements aren't included).\n\n- `level` is `null` (which means level3) by default, but you can pass another level if you'd like.\n\n  ```js\n  var jsdom = require(\"jsdom\");\n  var doc = jsdom.jsdom(\"<html><body></body></html>\", jsdom.level(1, \"core\"));\n  ```\n\n- `options` see the **Flexibility** section below.\n\n### Flexibility\n\nOne of the goals of jsdom is to be as minimal and light as possible. This section details how someone can change the behavior of `Document`s on the fly.  These features are baked into the `DOMImplementation` that every `Document` has, and may be tweaked in two ways:\n\n1. When you create a new `Document` using the jsdom builder (`require(\"jsdom\").jsdom()`)\n\n  ```js\n  var jsdom = require(\"jsdom\").jsdom;\n  var doc = jsdom(\"<html><body></body></html>\", null, {\n    features: {\n      FetchExternalResources : [\"img\"]\n    }\n  });\n  ```\n\n  Do note, that this will only affect the document that is currently being created. All other documents will use the defaults specified below (see: Default Features).\n\n2. Before creating any documents, you can modify the defaults for all future documents:\n\n  ```js\n  require(\"jsdom\").defaultDocumentFeatures = {\n    FetchExternalResources: [\"script\"],\n    ProcessExternalResources: false,\n    MutationEvents: false,\n    QuerySelector: false\n  };\n  ```\n\n#### Default Features\n\nDefault features are extremely important for jsdom as they lower the configuration requirement and present developers a set of consistent default behaviors. The following sections detail the available features, their defaults, and the values that jsdom uses.\n\n\n`FetchExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\", \"img\", \"css\", \"frame\", \"iframe\", \"link\"]` or `false`\n\nEnables/disables fetching files over the file system/HTTP.\n\n`ProcessExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\"]` or `false`\n\nDisabling this will disable script execution (currently only JavaScript).\n\n`MutationEvents`\n\n- _Default_: `\"2.0\"`\n- _Allowed_ : `\"2.0\"` or `false`\n\nInitially enabled to be up to spec. Disable this if you do not need mutation events and want jsdom to be a bit more efficient.\n\n**Note**: `ProcessExternalResources` requires this to be enabled.\n\n`QuerySelector`\n\n - _Default_ : `false`\n - _Allowed_ : `true`\n\nThis feature is backed by [sizzle][] but currently causes problems with some libraries. Enable this if you want `document.querySelector` and friends, but be aware that many libraries feature detect for this, and it may cause you a bit of trouble.\n\n[sizzle]: http://sizzlejs.com/\n\n## Canvas\n\njsdom includes support for using the [canvas](https://npmjs.org/package/canvas) package to extend any `<canvas>` elements with the canvas API. To make this work, you need to include canvas as a dependency in your project, as a peer of jsdom. If jsdom can find the canvas package, it will use it, but if it's not present, then `<canvas>` elements will behave like `<div>`s.\n\n# More Examples\n\n## Creating a document-less window\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.createWindow();\n\nconsole.log(window.document); // output: undefined\n```\n\n## Creating a document\n\n```js\nvar jsdom = require(\"jsdom\");\nvar doc = new (jsdom.level(1, \"core\").Document)();\n\nconsole.log(doc.nodeName); // outputs: #document\n```\n\n## Creating a browser-like BOM/DOM/Window\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar document = jsdom(\"<html><head></head><body>hello world</body></html>\");\nvar window = document.createWindow();\n\nconsole.log(window.document.innerHTML);\n// output: \"<html><head></head><body>hello world</body></html>\"\n\nconsole.log(window.innerWidth);\n// output: 1024\n\nconsole.log(typeof window.document.getElementsByClassName);\n// outputs: function\n```\n\n## jQueryify\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.jsdom().createWindow();\n\njsdom.jQueryify(window, \"http://code.jquery.com/jquery.js\", function () {\n  window.$(\"body\").append('<div class=\"testing\">Hello World, It works</div>');\n\n  console.log(window.$(\".testing\").text());\n});\n```\n\n## Passing objects to scripts inside the page\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar window = jsdom().createWindow();\n\nwindow.__myObject = { foo: \"bar\" };\n\nvar scriptEl = window.document.createElement(\"script\");\nscriptEl.src = \"anotherScript.js\";\nwindow.document.body.appendChild(scriptEl);\n\n// anotherScript.js will have the ability to read `window.__myObject`, even\n// though it originated in Node!\n```\n\n# Test Compliance:\n\n```\n level1/core                        532/532      100%\n level1/html                        238/238      100%\n level1/svg                         527/527      100%\n level2/core                        283/283      100%\n level2/html                        694/694      100%\n level2/style                           5/5      100%\n level2/extra                           4/4      100%\n level2/events                        24/24      100%\n level3/xpath                         93/93      100%\n window/index                           5/5      100%\n window/script                        10/10      100%\n window/frame                         14/14      100%\n sizzle/index                         12/15       80%\n jsdom/index                          79/80       98%\n jsonp/jsonp                            1/1      100%\n browser/contextifyReplacement          4/4      100%\n browser/index                        21/22       95%\n------------------------------------------------------\nTOTALS: 5/2551 failed; 99% success\n```\n\n## Running the tests\n\nFirst you'll want to `npm install`. To run all the tests, use `npm test`, which just calls `node test/runner`.\n\nUsing `test/runner` directly, you can slice and dice which tests your want to run from different levels. Usage is as follows:\n\n```\ntest/runner --help\nRun the jsdom test suite\n\nOptions:\n-s, --suites     suites that you want to run. ie: -s level1/core,1/html,html [string]\n-f, --fail-fast  stop on the first failed test\n-h, --help       show the help\n-t, --tests      choose the test cases to run. ie: -t jquery\n```\n","_id":"jsdom@0.2.17","dist":{"shasum":"b3a93929267b0fa9b7aaacdedd55630fefc1f5a4","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.17.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"domenicdenicola","email":"domenic@domenicdenicola.com"}},"0.2.18":{"name":"jsdom","version":"0.2.18","description":"A JavaScript implementation of the W3C DOM","keywords":["dom","w3c","html"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"},{"name":"domenicdenicola","email":"domenic@domenicdenicola.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"},{"name":"Tiago Rodrigues","email":"tmcrodrigues@gmail.com","url":"http://trodrigues.net"},{"name":"Samori Gorse","email":"samorigorse@gmail.com","url":"http://github.com/shinuza"},{"name":"John Roberts","email":"jroberts@logitech.com"},{"name":"Chad Walker","email":"chad@chad-cat-lore-eddie.com","url":"https://github.com/chad3814"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","request":"2.x","cssom":"0.2.x","cssstyle":">=0.2.3","contextify":"0.1.x"},"optionalDependencies":{"contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"directories":{"lib":"./lib/jsdom"},"scripts":{"test":"node ./test/runner"},"main":"./lib/jsdom","readme":"# jsdom\n\nA JavaScript implementation of the W3C DOM.\n\n## Install\n\n```bash\n$ npm install jsdom\n```\n\n## Human contact\n\nsee: [mailing list](http://groups.google.com/group/jsdom)\n\n## Easymode\n\nBootstrapping a DOM is generally a difficult process involving many error prone steps. We didn't want jsdom to fall into the same trap and that is why a new method, `jsdom.env()`, has been added in jsdom 0.2.0 which should make everyone's lives easier.\n\nwith URL\n\n```js\n// Count all of the links from the nodejs build page\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  \"http://nodejs.org/dist/\",\n  [\"http://code.jquery.com/jquery.js\"],\n  function (errors, window) {\n    console.log(\"there have been\", window.$(\"a\").length, \"nodejs releases!\");\n  }\n);\n```\n\nor with raw HTML\n\n```js\n// Run some jQuery on a html fragment\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  '<p><a class=\"the-link\" href=\"https://github.com/tmpvar/jsdom\">jsdom\\'s Homepage</a></p>',\n  [\"http://code.jquery.com/jquery.js\"],\n  function(errors, window) {\n    console.log(\"contents of a.the-link:\", window.$(\"a.the-link\").text());\n  }\n);\n```\n\nor with a configuration object\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  scripts: [\"http://code.jquery.com/jquery.js\"],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\nor with raw JavaScript source\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\nvar fs = require(\"fs\");\nvar jquery = fs.readFileSync(\"./jquery.js\").toString();\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  src: [jquery],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\n### How it works\n`jsdom.env` is built for ease of use, which is rare in the world of the DOM! Since the web has some absolutely horrible JavaScript on it, as of jsdom 0.2.0 `jsdom.env` will not process external resources (scripts, images, etc).  If you want to process the JavaScript use one of the methods below (`jsdom.jsdom` or `jsdom.jQueryify`)\n\n```js\njsdom.env(html, [scripts], [config], callback);\n```\n\n- `html` (**required**): may be a URL, HTML fragment, or file.\n- `scripts` (**optional**): may contain files or URLs.\n- `config` (**optional**): see below.\n- `callback` (**required**): takes two arguments:\n  - `errors`: an array of errors\n  - `window`: a brand new window\n\n_example:_\n\n```js\njsdom.env(html, function (errors, window) {\n  // free memory associated with the window\n  window.close();\n});\n```\n\nIf you would like to specify a configuration object only:\n\n```js\njsdom.env(config);\n```\n\n- `config.html`: see `html` above.\n- `config.scripts`: see `scripts` above.\n- `config.src`: an array of JavaScript strings that will be evaluated against the resulting document. Similar to `scripts`, but it accepts JavaScript instead of paths/URLs.\n- `config.done`: see `callback` above.\n- `config.document`:\n  - `referer`: the new document will have this referer\n  - `cookie`: manually set a cookie value, e.g. `'key=value; expires=Wed, Sep 21 2011 12:00:00 GMT; path=/'`\n- `config.features` : see `Flexibility` section below. **Note**: the default feature set for jsdom.env does _not_ include fetching remote JavaScript and executing it. This is something that you will need to **carefully** enable yourself.\n\n## For the hardcore\n\nIf you want to spawn a document/window and specify all sorts of options this is the section for you. This section covers the `jsdom.jsdom` method:\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar doc = jsdom(markup, level, options);\nvar window = doc.createWindow();\n```\n\n- `markup` is an HTML/XML document to be parsed. You can also pass `null` or an undefined value to get a basic document with empty `<head>` and `<body>` tags. Document fragments are also supported (including `\"\"`), and will behave as sanely as possible (e.g. the resulting document will lack the `head`, `body` and `documentElement` properties if the corresponding elements aren't included).\n\n- `level` is `null` (which means level3) by default, but you can pass another level if you'd like.\n\n  ```js\n  var jsdom = require(\"jsdom\");\n  var doc = jsdom.jsdom(\"<html><body></body></html>\", jsdom.level(1, \"core\"));\n  ```\n\n- `options` see the **Flexibility** section below.\n\n### Flexibility\n\nOne of the goals of jsdom is to be as minimal and light as possible. This section details how someone can change the behavior of `Document`s on the fly.  These features are baked into the `DOMImplementation` that every `Document` has, and may be tweaked in two ways:\n\n1. When you create a new `Document` using the jsdom builder (`require(\"jsdom\").jsdom()`)\n\n  ```js\n  var jsdom = require(\"jsdom\").jsdom;\n  var doc = jsdom(\"<html><body></body></html>\", null, {\n    features: {\n      FetchExternalResources : [\"img\"]\n    }\n  });\n  ```\n\n  Do note, that this will only affect the document that is currently being created. All other documents will use the defaults specified below (see: Default Features).\n\n2. Before creating any documents, you can modify the defaults for all future documents:\n\n  ```js\n  require(\"jsdom\").defaultDocumentFeatures = {\n    FetchExternalResources: [\"script\"],\n    ProcessExternalResources: false,\n    MutationEvents: false,\n    QuerySelector: false\n  };\n  ```\n\n#### Default Features\n\nDefault features are extremely important for jsdom as they lower the configuration requirement and present developers a set of consistent default behaviors. The following sections detail the available features, their defaults, and the values that jsdom uses.\n\n\n`FetchExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\", \"img\", \"css\", \"frame\", \"iframe\", \"link\"]` or `false`\n\nEnables/disables fetching files over the file system/HTTP.\n\n`ProcessExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\"]` or `false`\n\nDisabling this will disable script execution (currently only JavaScript).\n\n`MutationEvents`\n\n- _Default_: `\"2.0\"`\n- _Allowed_ : `\"2.0\"` or `false`\n\nInitially enabled to be up to spec. Disable this if you do not need mutation events and want jsdom to be a bit more efficient.\n\n**Note**: `ProcessExternalResources` requires this to be enabled.\n\n`QuerySelector`\n\n - _Default_ : `false`\n - _Allowed_ : `true`\n\nThis feature is backed by [sizzle][] but currently causes problems with some libraries. Enable this if you want `document.querySelector` and friends, but be aware that many libraries feature detect for this, and it may cause you a bit of trouble.\n\n[sizzle]: http://sizzlejs.com/\n\n## Canvas\n\njsdom includes support for using the [canvas](https://npmjs.org/package/canvas) package to extend any `<canvas>` elements with the canvas API. To make this work, you need to include canvas as a dependency in your project, as a peer of jsdom. If jsdom can find the canvas package, it will use it, but if it's not present, then `<canvas>` elements will behave like `<div>`s.\n\n# More Examples\n\n## Creating a document-less window\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.createWindow();\n\nconsole.log(window.document); // output: undefined\n```\n\n## Creating a document\n\n```js\nvar jsdom = require(\"jsdom\");\nvar doc = new (jsdom.level(1, \"core\").Document)();\n\nconsole.log(doc.nodeName); // outputs: #document\n```\n\n## Creating a browser-like BOM/DOM/Window\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar document = jsdom(\"<html><head></head><body>hello world</body></html>\");\nvar window = document.createWindow();\n\nconsole.log(window.document.innerHTML);\n// output: \"<html><head></head><body>hello world</body></html>\"\n\nconsole.log(window.innerWidth);\n// output: 1024\n\nconsole.log(typeof window.document.getElementsByClassName);\n// outputs: function\n```\n\n## jQueryify\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.jsdom().createWindow();\n\njsdom.jQueryify(window, \"http://code.jquery.com/jquery.js\", function () {\n  window.$(\"body\").append('<div class=\"testing\">Hello World, It works</div>');\n\n  console.log(window.$(\".testing\").text());\n});\n```\n\n## Passing objects to scripts inside the page\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar window = jsdom().createWindow();\n\nwindow.__myObject = { foo: \"bar\" };\n\nvar scriptEl = window.document.createElement(\"script\");\nscriptEl.src = \"anotherScript.js\";\nwindow.document.body.appendChild(scriptEl);\n\n// anotherScript.js will have the ability to read `window.__myObject`, even\n// though it originated in Node!\n```\n\n# Test Compliance:\n\n```\n level1/core                        532/532      100%\n level1/html                        238/238      100%\n level1/svg                         527/527      100%\n level2/core                        283/283      100%\n level2/html                        694/694      100%\n level2/style                           5/5      100%\n level2/extra                           4/4      100%\n level2/events                        24/24      100%\n level3/xpath                         93/93      100%\n window/index                           5/5      100%\n window/script                        10/10      100%\n window/frame                         14/14      100%\n sizzle/index                         12/15       80%\n jsdom/index                          80/80      100%\n jsonp/jsonp                            1/1      100%\n browser/contextifyReplacement          4/4      100%\n browser/index                        22/22      100%\n------------------------------------------------------\nTOTALS: 3/2551 failed; 99% success\n```\n\n## Running the tests\n\nFirst you'll want to `npm install`. To run all the tests, use `npm test`, which just calls `node test/runner`.\n\nUsing `test/runner` directly, you can slice and dice which tests your want to run from different levels. Usage is as follows:\n\n```\ntest/runner --help\nRun the jsdom test suite\n\nOptions:\n-s, --suites     suites that you want to run. ie: -s level1/core,1/html,html [string]\n-f, --fail-fast  stop on the first failed test\n-h, --help       show the help\n-t, --tests      choose the test cases to run. ie: -t jquery\n```\n","_id":"jsdom@0.2.18","dist":{"shasum":"4fef91619bf5267aff74c03a4222a0318f259587","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.18.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"domenicdenicola","email":"domenic@domenicdenicola.com"}},"0.2.19":{"name":"jsdom","version":"0.2.19","description":"A JavaScript implementation of the W3C DOM","keywords":["dom","w3c","html"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"},{"name":"domenic","email":"domenic@domenicdenicola.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"},{"name":"Tiago Rodrigues","email":"tmcrodrigues@gmail.com","url":"http://trodrigues.net"},{"name":"Samori Gorse","email":"samorigorse@gmail.com","url":"http://github.com/shinuza"},{"name":"John Roberts","email":"jroberts@logitech.com"},{"name":"Chad Walker","email":"chad@chad-cat-lore-eddie.com","url":"https://github.com/chad3814"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","request":"2.x","cssom":"0.2.x","cssstyle":">=0.2.3","contextify":"0.1.x"},"optionalDependencies":{"contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"directories":{"lib":"./lib/jsdom"},"scripts":{"test":"node ./test/runner"},"main":"./lib/jsdom","readme":"# jsdom\n\nA JavaScript implementation of the W3C DOM.\n\n## Install\n\n```bash\n$ npm install jsdom\n```\n\n## Human contact\n\nsee: [mailing list](http://groups.google.com/group/jsdom)\n\n## Easymode\n\nBootstrapping a DOM is generally a difficult process involving many error prone steps. We didn't want jsdom to fall into the same trap and that is why a new method, `jsdom.env()`, has been added in jsdom 0.2.0 which should make everyone's lives easier.\n\nwith URL\n\n```js\n// Count all of the links from the nodejs build page\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  \"http://nodejs.org/dist/\",\n  [\"http://code.jquery.com/jquery.js\"],\n  function (errors, window) {\n    console.log(\"there have been\", window.$(\"a\").length, \"nodejs releases!\");\n  }\n);\n```\n\nor with raw HTML\n\n```js\n// Run some jQuery on a html fragment\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  '<p><a class=\"the-link\" href=\"https://github.com/tmpvar/jsdom\">jsdom\\'s Homepage</a></p>',\n  [\"http://code.jquery.com/jquery.js\"],\n  function(errors, window) {\n    console.log(\"contents of a.the-link:\", window.$(\"a.the-link\").text());\n  }\n);\n```\n\nor with a configuration object\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  scripts: [\"http://code.jquery.com/jquery.js\"],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\nor with raw JavaScript source\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\nvar fs = require(\"fs\");\nvar jquery = fs.readFileSync(\"./jquery.js\").toString();\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  src: [jquery],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\n### How it works\n`jsdom.env` is built for ease of use, which is rare in the world of the DOM! Since the web has some absolutely horrible JavaScript on it, as of jsdom 0.2.0 `jsdom.env` will not process external resources (scripts, images, etc).  If you want to process the JavaScript use one of the methods below (`jsdom.jsdom` or `jsdom.jQueryify`)\n\n```js\njsdom.env(html, [scripts], [config], callback);\n```\n\n- `html` (**required**): may be a URL, HTML fragment, or file.\n- `scripts` (**optional**): may contain files or URLs.\n- `config` (**optional**): see below.\n- `callback` (**required**): takes two arguments:\n  - `errors`: an array of errors\n  - `window`: a brand new window\n\n_example:_\n\n```js\njsdom.env(html, function (errors, window) {\n  // free memory associated with the window\n  window.close();\n});\n```\n\nIf you would like to specify a configuration object only:\n\n```js\njsdom.env(config);\n```\n\n- `config.html`: see `html` above.\n- `config.scripts`: see `scripts` above.\n- `config.src`: an array of JavaScript strings that will be evaluated against the resulting document. Similar to `scripts`, but it accepts JavaScript instead of paths/URLs.\n- `config.done`: see `callback` above.\n- `config.document`:\n  - `referer`: the new document will have this referer\n  - `cookie`: manually set a cookie value, e.g. `'key=value; expires=Wed, Sep 21 2011 12:00:00 GMT; path=/'`\n- `config.features` : see `Flexibility` section below. **Note**: the default feature set for jsdom.env does _not_ include fetching remote JavaScript and executing it. This is something that you will need to **carefully** enable yourself.\n\n## For the hardcore\n\nIf you want to spawn a document/window and specify all sorts of options this is the section for you. This section covers the `jsdom.jsdom` method:\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar doc = jsdom(markup, level, options);\nvar window = doc.createWindow();\n```\n\n- `markup` is an HTML/XML document to be parsed. You can also pass `null` or an undefined value to get a basic document with empty `<head>` and `<body>` tags. Document fragments are also supported (including `\"\"`), and will behave as sanely as possible (e.g. the resulting document will lack the `head`, `body` and `documentElement` properties if the corresponding elements aren't included).\n\n- `level` is `null` (which means level3) by default, but you can pass another level if you'd like.\n\n  ```js\n  var jsdom = require(\"jsdom\");\n  var doc = jsdom.jsdom(\"<html><body></body></html>\", jsdom.level(1, \"core\"));\n  ```\n\n- `options` see the **Flexibility** section below.\n\n### Flexibility\n\nOne of the goals of jsdom is to be as minimal and light as possible. This section details how someone can change the behavior of `Document`s on the fly.  These features are baked into the `DOMImplementation` that every `Document` has, and may be tweaked in two ways:\n\n1. When you create a new `Document` using the jsdom builder (`require(\"jsdom\").jsdom()`)\n\n  ```js\n  var jsdom = require(\"jsdom\").jsdom;\n  var doc = jsdom(\"<html><body></body></html>\", null, {\n    features: {\n      FetchExternalResources : [\"img\"]\n    }\n  });\n  ```\n\n  Do note, that this will only affect the document that is currently being created. All other documents will use the defaults specified below (see: Default Features).\n\n2. Before creating any documents, you can modify the defaults for all future documents:\n\n  ```js\n  require(\"jsdom\").defaultDocumentFeatures = {\n    FetchExternalResources: [\"script\"],\n    ProcessExternalResources: false,\n    MutationEvents: false,\n    QuerySelector: false\n  };\n  ```\n\n#### Default Features\n\nDefault features are extremely important for jsdom as they lower the configuration requirement and present developers a set of consistent default behaviors. The following sections detail the available features, their defaults, and the values that jsdom uses.\n\n\n`FetchExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\", \"img\", \"css\", \"frame\", \"iframe\", \"link\"]` or `false`\n\nEnables/disables fetching files over the file system/HTTP.\n\n`ProcessExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\"]` or `false`\n\nDisabling this will disable script execution (currently only JavaScript).\n\n`SkipExternalResources`\n\n- _Default_: `false`\n- _Allowed_: `/url to be skipped/` or `false`\n- _Example_: `/http:\\/\\/example.org/js/bad\\.js/`\n\nDo not download and process resources with url matching a regular expression.\n\n`MutationEvents`\n\n- _Default_: `\"2.0\"`\n- _Allowed_ : `\"2.0\"` or `false`\n\nInitially enabled to be up to spec. Disable this if you do not need mutation events and want jsdom to be a bit more efficient.\n\n**Note**: `ProcessExternalResources` requires this to be enabled.\n\n`QuerySelector`\n\n - _Default_ : `false`\n - _Allowed_ : `true`\n\nThis feature is backed by [sizzle][] but currently causes problems with some libraries. Enable this if you want `document.querySelector` and friends, but be aware that many libraries feature detect for this, and it may cause you a bit of trouble.\n\n[sizzle]: http://sizzlejs.com/\n\n## Canvas\n\njsdom includes support for using the [canvas](https://npmjs.org/package/canvas) package to extend any `<canvas>` elements with the canvas API. To make this work, you need to include canvas as a dependency in your project, as a peer of jsdom. If jsdom can find the canvas package, it will use it, but if it's not present, then `<canvas>` elements will behave like `<div>`s.\n\n# More Examples\n\n## Creating a document-less window\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.createWindow();\n\nconsole.log(window.document); // output: undefined\n```\n\n## Creating a document\n\n```js\nvar jsdom = require(\"jsdom\");\nvar doc = new (jsdom.level(1, \"core\").Document)();\n\nconsole.log(doc.nodeName); // outputs: #document\n```\n\n## Creating a browser-like BOM/DOM/Window\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar document = jsdom(\"<html><head></head><body>hello world</body></html>\");\nvar window = document.createWindow();\n\nconsole.log(window.document.innerHTML);\n// output: \"<html><head></head><body>hello world</body></html>\"\n\nconsole.log(window.innerWidth);\n// output: 1024\n\nconsole.log(typeof window.document.getElementsByClassName);\n// outputs: function\n```\n\n## jQueryify\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.jsdom().createWindow();\n\njsdom.jQueryify(window, \"http://code.jquery.com/jquery.js\", function () {\n  window.$(\"body\").append('<div class=\"testing\">Hello World, It works</div>');\n\n  console.log(window.$(\".testing\").text());\n});\n```\n\n## Passing objects to scripts inside the page\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar window = jsdom().createWindow();\n\nwindow.__myObject = { foo: \"bar\" };\n\nvar scriptEl = window.document.createElement(\"script\");\nscriptEl.src = \"anotherScript.js\";\nwindow.document.body.appendChild(scriptEl);\n\n// anotherScript.js will have the ability to read `window.__myObject`, even\n// though it originated in Node!\n```\n\n# Test Compliance:\n\n```\n level1/core                        532/532      100%\n level1/html                        238/238      100%\n level1/svg                         527/527      100%\n level2/core                        283/283      100%\n level2/html                        694/694      100%\n level2/style                           5/5      100%\n level2/extra                           4/4      100%\n level2/events                        24/24      100%\n level3/xpath                         93/93      100%\n window/index                           5/5      100%\n window/script                        10/10      100%\n window/frame                         14/14      100%\n sizzle/index                         12/15       80%\n jsdom/index                          83/83      100%\n jsonp/jsonp                            1/1      100%\n browser/contextifyReplacement          4/4      100%\n browser/index                        22/22      100%\n------------------------------------------------------\nTOTALS: 3/2554 failed; 99% success\n```\n\n## Running the tests\n\nFirst you'll want to `npm install`. To run all the tests, use `npm test`, which just calls `node test/runner`.\n\nUsing `test/runner` directly, you can slice and dice which tests your want to run from different levels. Usage is as follows:\n\n```\ntest/runner --help\nRun the jsdom test suite\n\nOptions:\n-s, --suites     suites that you want to run. ie: -s level1/core,1/html,html [string]\n-f, --fail-fast  stop on the first failed test\n-h, --help       show the help\n-t, --tests      choose the test cases to run. ie: -t jquery\n```\n","_id":"jsdom@0.2.19","dist":{"shasum":"c0811df73901289ea6a0c825c7bb0c09c8c88629","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.2.19.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"domenic","email":"domenic@domenicdenicola.com"}},"0.3.0":{"name":"jsdom","version":"0.3.0","description":"A JavaScript implementation of the W3C DOM","keywords":["dom","w3c","html"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"},{"name":"domenic","email":"domenic@domenicdenicola.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"},{"name":"Tiago Rodrigues","email":"tmcrodrigues@gmail.com","url":"http://trodrigues.net"},{"name":"Samori Gorse","email":"samorigorse@gmail.com","url":"http://github.com/shinuza"},{"name":"John Roberts","email":"jroberts@logitech.com"},{"name":"Chad Walker","email":"chad@chad-cat-lore-eddie.com","url":"https://github.com/chad3814"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","nwmatcher":">=1.3.0","request":"2.x","cssom":"0.2.x","cssstyle":">=0.2.3","contextify":"0.1.x"},"optionalDependencies":{"contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"directories":{"lib":"./lib/jsdom"},"scripts":{"test":"node ./test/runner"},"main":"./lib/jsdom","readme":"# jsdom\n\nA JavaScript implementation of the W3C DOM.\n\n## Install\n\n```bash\n$ npm install jsdom\n```\n\n## Human contact\n\nsee: [mailing list](http://groups.google.com/group/jsdom)\n\n## Easymode\n\nBootstrapping a DOM is generally a difficult process involving many error prone steps. We didn't want jsdom to fall into the same trap and that is why a new method, `jsdom.env()`, has been added in jsdom 0.2.0 which should make everyone's lives easier.\n\nwith URL\n\n```js\n// Count all of the links from the nodejs build page\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  \"http://nodejs.org/dist/\",\n  [\"http://code.jquery.com/jquery.js\"],\n  function (errors, window) {\n    console.log(\"there have been\", window.$(\"a\").length, \"nodejs releases!\");\n  }\n);\n```\n\nor with raw HTML\n\n```js\n// Run some jQuery on a html fragment\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  '<p><a class=\"the-link\" href=\"https://github.com/tmpvar/jsdom\">jsdom\\'s Homepage</a></p>',\n  [\"http://code.jquery.com/jquery.js\"],\n  function(errors, window) {\n    console.log(\"contents of a.the-link:\", window.$(\"a.the-link\").text());\n  }\n);\n```\n\nor with a configuration object\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  scripts: [\"http://code.jquery.com/jquery.js\"],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\nor with raw JavaScript source\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\nvar fs = require(\"fs\");\nvar jquery = fs.readFileSync(\"./jquery.js\").toString();\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  src: [jquery],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\n### How it works\n`jsdom.env` is built for ease of use, which is rare in the world of the DOM! Since the web has some absolutely horrible JavaScript on it, as of jsdom 0.2.0 `jsdom.env` will not process external resources (scripts, images, etc).  If you want to process the JavaScript use one of the methods below (`jsdom.jsdom` or `jsdom.jQueryify`)\n\n```js\njsdom.env(html, [scripts], [config], callback);\n```\n\n- `html` (**required**): may be a URL, HTML fragment, or file.\n- `scripts` (**optional**): may contain files or URLs.\n- `config` (**optional**): see below.\n- `callback` (**required**): takes two arguments:\n  - `errors`: an array of errors\n  - `window`: a brand new window\n\n_example:_\n\n```js\njsdom.env(html, function (errors, window) {\n  // free memory associated with the window\n  window.close();\n});\n```\n\nIf you would like to specify a configuration object only:\n\n```js\njsdom.env(config);\n```\n\n- `config.html`: see `html` above.\n- `config.scripts`: see `scripts` above.\n- `config.src`: an array of JavaScript strings that will be evaluated against the resulting document. Similar to `scripts`, but it accepts JavaScript instead of paths/URLs.\n- `config.done`: see `callback` above.\n- `config.document`:\n  - `referer`: the new document will have this referer\n  - `cookie`: manually set a cookie value, e.g. `'key=value; expires=Wed, Sep 21 2011 12:00:00 GMT; path=/'`\n- `config.features` : see `Flexibility` section below. **Note**: the default feature set for jsdom.env does _not_ include fetching remote JavaScript and executing it. This is something that you will need to **carefully** enable yourself.\n\n## For the hardcore\n\nIf you want to spawn a document/window and specify all sorts of options this is the section for you. This section covers the `jsdom.jsdom` method:\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar doc = jsdom(markup, level, options);\nvar window = doc.createWindow();\n```\n\n- `markup` is an HTML/XML document to be parsed. You can also pass `null` or an undefined value to get a basic document with empty `<head>` and `<body>` tags. Document fragments are also supported (including `\"\"`), and will behave as sanely as possible (e.g. the resulting document will lack the `head`, `body` and `documentElement` properties if the corresponding elements aren't included).\n\n- `level` is `null` (which means level3) by default, but you can pass another level if you'd like.\n\n  ```js\n  var jsdom = require(\"jsdom\");\n  var doc = jsdom.jsdom(\"<html><body></body></html>\", jsdom.level(1, \"core\"));\n  ```\n\n- `options` see the **Flexibility** section below.\n\n### Flexibility\n\nOne of the goals of jsdom is to be as minimal and light as possible. This section details how someone can change the behavior of `Document`s on the fly.  These features are baked into the `DOMImplementation` that every `Document` has, and may be tweaked in two ways:\n\n1. When you create a new `Document` using the jsdom builder (`require(\"jsdom\").jsdom()`)\n\n  ```js\n  var jsdom = require(\"jsdom\").jsdom;\n  var doc = jsdom(\"<html><body></body></html>\", null, {\n      features: {\n        FetchExternalResources : [\"img\"]\n      }\n  });\n  ```\n\n  Do note, that this will only affect the document that is currently being created. All other documents will use the defaults specified below (see: Default Features).\n\n2. Before creating any documents, you can modify the defaults for all future documents:\n\n  ```js\n  require(\"jsdom\").defaultDocumentFeatures = {\n      FetchExternalResources: [\"script\"],\n      ProcessExternalResources: false\n  };\n  ```\n\n#### Default Features\n\nDefault features are extremely important for jsdom as they lower the configuration requirement and present developers a set of consistent default behaviors. The following sections detail the available features, their defaults, and the values that jsdom uses.\n\n\n`FetchExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\", \"img\", \"css\", \"frame\", \"iframe\", \"link\"]` or `false`\n\nEnables/disables fetching files over the file system/HTTP.\n\n`ProcessExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\"]` or `false`\n\nDisabling this will disable script execution (currently only JavaScript).\n\n`SkipExternalResources`\n\n- _Default_: `false`\n- _Allowed_: `/url to be skipped/` or `false`\n- _Example_: `/http:\\/\\/example.org/js/bad\\.js/`\n\nDo not download and process resources with url matching a regular expression.\n\n## Canvas\n\njsdom includes support for using the [canvas](https://npmjs.org/package/canvas) package to extend any `<canvas>` elements with the canvas API. To make this work, you need to include canvas as a dependency in your project, as a peer of jsdom. If jsdom can find the canvas package, it will use it, but if it's not present, then `<canvas>` elements will behave like `<div>`s.\n\n# More Examples\n\n## Creating a document-less window\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.createWindow();\n\nconsole.log(window.document); // output: undefined\n```\n\n## Creating a document\n\n```js\nvar jsdom = require(\"jsdom\");\nvar doc = new (jsdom.level(1, \"core\").Document)();\n\nconsole.log(doc.nodeName); // outputs: #document\n```\n\n## Creating a browser-like BOM/DOM/Window\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar document = jsdom(\"<html><head></head><body>hello world</body></html>\");\nvar window = document.createWindow();\n\nconsole.log(window.document.innerHTML);\n// output: \"<html><head></head><body>hello world</body></html>\"\n\nconsole.log(window.innerWidth);\n// output: 1024\n\nconsole.log(typeof window.document.getElementsByClassName);\n// outputs: function\n```\n\n## jQueryify\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.jsdom().createWindow();\n\njsdom.jQueryify(window, \"http://code.jquery.com/jquery.js\", function () {\n  window.$(\"body\").append('<div class=\"testing\">Hello World, It works</div>');\n\n  console.log(window.$(\".testing\").text());\n});\n```\n\n## Passing objects to scripts inside the page\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar window = jsdom().createWindow();\n\nwindow.__myObject = { foo: \"bar\" };\n\nvar scriptEl = window.document.createElement(\"script\");\nscriptEl.src = \"anotherScript.js\";\nwindow.document.body.appendChild(scriptEl);\n\n// anotherScript.js will have the ability to read `window.__myObject`, even\n// though it originated in Node!\n```\n\n# Test Compliance:\n\n```\n level1/core                        532/532      100%\n level1/html                        238/238      100%\n level1/svg                         527/527      100%\n level2/core                        283/283      100%\n level2/html                        695/695      100%\n level2/style                           7/7      100%\n level2/extra                           4/4      100%\n level2/events                        24/24      100%\n level3/xpath                         93/93      100%\n window/index                           5/5      100%\n window/script                        10/10      100%\n window/frame                         14/14      100%\n sizzle/index                          8/14       57%\n jsdom/index                          85/85      100%\n jsonp/jsonp                            1/1      100%\n browser/contextifyReplacement          4/4      100%\n browser/index                        22/22      100%\n------------------------------------------------------\nTOTALS: 6/2558 failed; 99% success\n```\n\n## Running the tests\n\nFirst you'll want to `npm install`. To run all the tests, use `npm test`, which just calls `node test/runner`.\n\nUsing `test/runner` directly, you can slice and dice which tests your want to run from different levels. Usage is as follows:\n\n```\ntest/runner --help\nRun the jsdom test suite\n\nOptions:\n-s, --suites     suites that you want to run. ie: -s level1/core,1/html,html [string]\n-f, --fail-fast  stop on the first failed test\n-h, --help       show the help\n-t, --tests      choose the test cases to run. ie: -t jquery\n```\n","_id":"jsdom@0.3.0","dist":{"shasum":"ff663bb14915fec7ead6a5b93741905a4c846d0e","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.3.0.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"domenic","email":"domenic@domenicdenicola.com"}},"0.3.1":{"name":"jsdom","version":"0.3.1","description":"A JavaScript implementation of the W3C DOM","keywords":["dom","w3c","html"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"},{"name":"domenic","email":"domenic@domenicdenicola.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"},{"name":"Tiago Rodrigues","email":"tmcrodrigues@gmail.com","url":"http://trodrigues.net"},{"name":"Samori Gorse","email":"samorigorse@gmail.com","url":"http://github.com/shinuza"},{"name":"John Roberts","email":"jroberts@logitech.com"},{"name":"Chad Walker","email":"chad@chad-cat-lore-eddie.com","url":"https://github.com/chad3814"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","nwmatcher":">=1.3.0","request":"2.x","cssom":"0.2.x","cssstyle":">=0.2.3","contextify":"0.1.x"},"optionalDependencies":{"contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","optimist":"*"},"directories":{"lib":"./lib/jsdom"},"scripts":{"test":"node ./test/runner"},"main":"./lib/jsdom","readme":"# jsdom\n\nA JavaScript implementation of the W3C DOM.\n\n## Install\n\n```bash\n$ npm install jsdom\n```\n\n## Human contact\n\nsee: [mailing list](http://groups.google.com/group/jsdom)\n\n## Easymode\n\nBootstrapping a DOM is generally a difficult process involving many error prone steps. We didn't want jsdom to fall into the same trap and that is why a new method, `jsdom.env()`, has been added in jsdom 0.2.0 which should make everyone's lives easier.\n\nwith URL\n\n```js\n// Count all of the links from the nodejs build page\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  \"http://nodejs.org/dist/\",\n  [\"http://code.jquery.com/jquery.js\"],\n  function (errors, window) {\n    console.log(\"there have been\", window.$(\"a\").length, \"nodejs releases!\");\n  }\n);\n```\n\nor with raw HTML\n\n```js\n// Run some jQuery on a html fragment\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  '<p><a class=\"the-link\" href=\"https://github.com/tmpvar/jsdom\">jsdom\\'s Homepage</a></p>',\n  [\"http://code.jquery.com/jquery.js\"],\n  function(errors, window) {\n    console.log(\"contents of a.the-link:\", window.$(\"a.the-link\").text());\n  }\n);\n```\n\nor with a configuration object\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  scripts: [\"http://code.jquery.com/jquery.js\"],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\nor with raw JavaScript source\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\nvar fs = require(\"fs\");\nvar jquery = fs.readFileSync(\"./jquery.js\").toString();\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  src: [jquery],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\n### How it works\n`jsdom.env` is built for ease of use, which is rare in the world of the DOM! Since the web has some absolutely horrible JavaScript on it, as of jsdom 0.2.0 `jsdom.env` will not process external resources (scripts, images, etc).  If you want to process the JavaScript use one of the methods below (`jsdom.jsdom` or `jsdom.jQueryify`)\n\n```js\njsdom.env(html, [scripts], [config], callback);\n```\n\n- `html` (**required**): may be a URL, HTML fragment, or file.\n- `scripts` (**optional**): may contain files or URLs.\n- `config` (**optional**): see below.\n- `callback` (**required**): takes two arguments:\n  - `errors`: an array of errors\n  - `window`: a brand new window\n\n_example:_\n\n```js\njsdom.env(html, function (errors, window) {\n  // free memory associated with the window\n  window.close();\n});\n```\n\nIf you would like to specify a configuration object only:\n\n```js\njsdom.env(config);\n```\n\n- `config.html`: see `html` above.\n- `config.scripts`: see `scripts` above.\n- `config.src`: an array of JavaScript strings that will be evaluated against the resulting document. Similar to `scripts`, but it accepts JavaScript instead of paths/URLs.\n- `config.done`: see `callback` above.\n- `config.document`:\n  - `referer`: the new document will have this referer\n  - `cookie`: manually set a cookie value, e.g. `'key=value; expires=Wed, Sep 21 2011 12:00:00 GMT; path=/'`\n- `config.features` : see `Flexibility` section below. **Note**: the default feature set for jsdom.env does _not_ include fetching remote JavaScript and executing it. This is something that you will need to **carefully** enable yourself.\n\n## For the hardcore\n\nIf you want to spawn a document/window and specify all sorts of options this is the section for you. This section covers the `jsdom.jsdom` method:\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar doc = jsdom(markup, level, options);\nvar window = doc.createWindow();\n```\n\n- `markup` is an HTML/XML document to be parsed. You can also pass `null` or an undefined value to get a basic document with empty `<head>` and `<body>` tags. Document fragments are also supported (including `\"\"`), and will behave as sanely as possible (e.g. the resulting document will lack the `head`, `body` and `documentElement` properties if the corresponding elements aren't included).\n\n- `level` is `null` (which means level3) by default, but you can pass another level if you'd like.\n\n  ```js\n  var jsdom = require(\"jsdom\");\n  var doc = jsdom.jsdom(\"<html><body></body></html>\", jsdom.level(1, \"core\"));\n  ```\n\n- `options` see the **Flexibility** section below.\n\n### Flexibility\n\nOne of the goals of jsdom is to be as minimal and light as possible. This section details how someone can change the behavior of `Document`s on the fly.  These features are baked into the `DOMImplementation` that every `Document` has, and may be tweaked in two ways:\n\n1. When you create a new `Document` using the jsdom builder (`require(\"jsdom\").jsdom()`)\n\n  ```js\n  var jsdom = require(\"jsdom\").jsdom;\n  var doc = jsdom(\"<html><body></body></html>\", null, {\n      features: {\n        FetchExternalResources : [\"img\"]\n      }\n  });\n  ```\n\n  Do note, that this will only affect the document that is currently being created. All other documents will use the defaults specified below (see: Default Features).\n\n2. Before creating any documents, you can modify the defaults for all future documents:\n\n  ```js\n  require(\"jsdom\").defaultDocumentFeatures = {\n      FetchExternalResources: [\"script\"],\n      ProcessExternalResources: false\n  };\n  ```\n\n#### Default Features\n\nDefault features are extremely important for jsdom as they lower the configuration requirement and present developers a set of consistent default behaviors. The following sections detail the available features, their defaults, and the values that jsdom uses.\n\n\n`FetchExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\", \"img\", \"css\", \"frame\", \"iframe\", \"link\"]` or `false`\n\nEnables/disables fetching files over the file system/HTTP.\n\n`ProcessExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\"]` or `false`\n\nDisabling this will disable script execution (currently only JavaScript).\n\n`SkipExternalResources`\n\n- _Default_: `false`\n- _Allowed_: `/url to be skipped/` or `false`\n- _Example_: `/http:\\/\\/example.org/js/bad\\.js/`\n\nDo not download and process resources with url matching a regular expression.\n\n## Canvas\n\njsdom includes support for using the [canvas](https://npmjs.org/package/canvas) package to extend any `<canvas>` elements with the canvas API. To make this work, you need to include canvas as a dependency in your project, as a peer of jsdom. If jsdom can find the canvas package, it will use it, but if it's not present, then `<canvas>` elements will behave like `<div>`s.\n\n# More Examples\n\n## Creating a document-less window\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.createWindow();\n\nconsole.log(window.document); // output: undefined\n```\n\n## Creating a document\n\n```js\nvar jsdom = require(\"jsdom\");\nvar doc = new (jsdom.level(1, \"core\").Document)();\n\nconsole.log(doc.nodeName); // outputs: #document\n```\n\n## Creating a browser-like BOM/DOM/Window\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar document = jsdom(\"<html><head></head><body>hello world</body></html>\");\nvar window = document.createWindow();\n\nconsole.log(window.document.innerHTML);\n// output: \"<html><head></head><body>hello world</body></html>\"\n\nconsole.log(window.innerWidth);\n// output: 1024\n\nconsole.log(typeof window.document.getElementsByClassName);\n// outputs: function\n```\n\n## jQueryify\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.jsdom().createWindow();\n\njsdom.jQueryify(window, \"http://code.jquery.com/jquery.js\", function () {\n  window.$(\"body\").append('<div class=\"testing\">Hello World, It works</div>');\n\n  console.log(window.$(\".testing\").text());\n});\n```\n\n## Passing objects to scripts inside the page\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar window = jsdom().createWindow();\n\nwindow.__myObject = { foo: \"bar\" };\n\nvar scriptEl = window.document.createElement(\"script\");\nscriptEl.src = \"anotherScript.js\";\nwindow.document.body.appendChild(scriptEl);\n\n// anotherScript.js will have the ability to read `window.__myObject`, even\n// though it originated in Node!\n```\n\n# Test Compliance:\n\n```\n level1/core                        532/532      100%\n level1/html                        238/238      100%\n level1/svg                         527/527      100%\n level2/core                        283/283      100%\n level2/html                        695/695      100%\n level2/style                           8/8      100%\n level2/extra                           4/4      100%\n level2/events                        24/24      100%\n level3/xpath                         93/93      100%\n window/index                           5/5      100%\n window/script                        10/10      100%\n window/frame                         14/14      100%\n sizzle/index                          8/14       57%\n jsdom/index                          85/85      100%\n jsonp/jsonp                            1/1      100%\n browser/contextifyReplacement          4/4      100%\n browser/index                        22/22      100%\n------------------------------------------------------\nTOTALS: 6/2559 failed; 99% success\n```\n\n## Running the tests\n\nFirst you'll want to `npm install`. To run all the tests, use `npm test`, which just calls `node test/runner`.\n\nUsing `test/runner` directly, you can slice and dice which tests your want to run from different levels. Usage is as follows:\n\n```\ntest/runner --help\nRun the jsdom test suite\n\nOptions:\n-s, --suites     suites that you want to run. ie: -s level1/core,1/html,html [string]\n-f, --fail-fast  stop on the first failed test\n-h, --help       show the help\n-t, --tests      choose the test cases to run. ie: -t jquery\n```\n","_id":"jsdom@0.3.1","dist":{"shasum":"2c7d67c20c1e629df7baa9644c61b583c669f76f","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.3.1.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"domenic","email":"domenic@domenicdenicola.com"}},"0.3.2":{"name":"jsdom","version":"0.3.2","description":"A JavaScript implementation of the W3C DOM","keywords":["dom","w3c","html"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"},{"name":"domenic","email":"domenic@domenicdenicola.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"},{"name":"Tiago Rodrigues","email":"tmcrodrigues@gmail.com","url":"http://trodrigues.net"},{"name":"Samori Gorse","email":"samorigorse@gmail.com","url":"http://github.com/shinuza"},{"name":"John Roberts","email":"jroberts@logitech.com"},{"name":"Chad Walker","email":"chad@chad-cat-lore-eddie.com","url":"https://github.com/chad3814"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","nwmatcher":">=1.3.0","request":"2.x","cssom":"0.2.x","cssstyle":">=0.2.3","contextify":"0.1.x"},"optionalDependencies":{"contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","html5":">=0.3.8","optimist":"*"},"directories":{"lib":"./lib/jsdom"},"scripts":{"test":"node ./test/runner"},"main":"./lib/jsdom","readme":"# jsdom\n\nA JavaScript implementation of the W3C DOM.\n\n## Install\n\n```bash\n$ npm install jsdom\n```\n\n## Human contact\n\nsee: [mailing list](http://groups.google.com/group/jsdom)\n\n## Easymode\n\nBootstrapping a DOM is generally a difficult process involving many error prone steps. We didn't want jsdom to fall into the same trap and that is why a new method, `jsdom.env()`, has been added in jsdom 0.2.0 which should make everyone's lives easier.\n\nwith URL\n\n```js\n// Count all of the links from the nodejs build page\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  \"http://nodejs.org/dist/\",\n  [\"http://code.jquery.com/jquery.js\"],\n  function (errors, window) {\n    console.log(\"there have been\", window.$(\"a\").length, \"nodejs releases!\");\n  }\n);\n```\n\nor with raw HTML\n\n```js\n// Run some jQuery on a html fragment\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  '<p><a class=\"the-link\" href=\"https://github.com/tmpvar/jsdom\">jsdom\\'s Homepage</a></p>',\n  [\"http://code.jquery.com/jquery.js\"],\n  function(errors, window) {\n    console.log(\"contents of a.the-link:\", window.$(\"a.the-link\").text());\n  }\n);\n```\n\nor with a configuration object\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  scripts: [\"http://code.jquery.com/jquery.js\"],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\nor with raw JavaScript source\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\nvar fs = require(\"fs\");\nvar jquery = fs.readFileSync(\"./jquery.js\").toString();\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  src: [jquery],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\n### How it works\n`jsdom.env` is built for ease of use, which is rare in the world of the DOM! Since the web has some absolutely horrible JavaScript on it, as of jsdom 0.2.0 `jsdom.env` will not process external resources (scripts, images, etc).  If you want to process the JavaScript use one of the methods below (`jsdom.jsdom` or `jsdom.jQueryify`)\n\n```js\njsdom.env(html, [scripts], [config], callback);\n```\n\n- `html` (**required**): may be a URL, HTML fragment, or file.\n- `scripts` (**optional**): may contain files or URLs.\n- `config` (**optional**): see below.\n- `callback` (**required**): takes two arguments:\n  - `errors`: an array of errors\n  - `window`: a brand new window\n\n_example:_\n\n```js\njsdom.env(html, function (errors, window) {\n  // free memory associated with the window\n  window.close();\n});\n```\n\nIf you would like to specify a configuration object only:\n\n```js\njsdom.env(config);\n```\n\n- `config.html`: see `html` above.\n- `config.scripts`: see `scripts` above.\n- `config.src`: an array of JavaScript strings that will be evaluated against the resulting document. Similar to `scripts`, but it accepts JavaScript instead of paths/URLs.\n- `config.done`: see `callback` above.\n- `config.document`:\n  - `referer`: the new document will have this referer\n  - `cookie`: manually set a cookie value, e.g. `'key=value; expires=Wed, Sep 21 2011 12:00:00 GMT; path=/'`\n- `config.features` : see `Flexibility` section below. **Note**: the default feature set for jsdom.env does _not_ include fetching remote JavaScript and executing it. This is something that you will need to **carefully** enable yourself.\n\n## For the hardcore\n\nIf you want to spawn a document/window and specify all sorts of options this is the section for you. This section covers the `jsdom.jsdom` method:\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar doc = jsdom(markup, level, options);\nvar window = doc.createWindow();\n```\n\n- `markup` is an HTML/XML document to be parsed. You can also pass `null` or an undefined value to get a basic document with empty `<head>` and `<body>` tags. Document fragments are also supported (including `\"\"`), and will behave as sanely as possible (e.g. the resulting document will lack the `head`, `body` and `documentElement` properties if the corresponding elements aren't included).\n\n- `level` is `null` (which means level3) by default, but you can pass another level if you'd like.\n\n  ```js\n  var jsdom = require(\"jsdom\");\n  var doc = jsdom.jsdom(\"<html><body></body></html>\", jsdom.level(1, \"core\"));\n  ```\n\n- `options` see the **Flexibility** section below.\n\n### Flexibility\n\nOne of the goals of jsdom is to be as minimal and light as possible. This section details how someone can change the behavior of `Document`s on the fly.  These features are baked into the `DOMImplementation` that every `Document` has, and may be tweaked in two ways:\n\n1. When you create a new `Document` using the jsdom builder (`require(\"jsdom\").jsdom()`)\n\n  ```js\n  var jsdom = require(\"jsdom\").jsdom;\n  var doc = jsdom(\"<html><body></body></html>\", null, {\n      features: {\n        FetchExternalResources : [\"img\"]\n      }\n  });\n  ```\n\n  Do note, that this will only affect the document that is currently being created. All other documents will use the defaults specified below (see: Default Features).\n\n2. Before creating any documents, you can modify the defaults for all future documents:\n\n  ```js\n  require(\"jsdom\").defaultDocumentFeatures = {\n      FetchExternalResources: [\"script\"],\n      ProcessExternalResources: false\n  };\n  ```\n\n#### Default Features\n\nDefault features are extremely important for jsdom as they lower the configuration requirement and present developers a set of consistent default behaviors. The following sections detail the available features, their defaults, and the values that jsdom uses.\n\n\n`FetchExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\", \"img\", \"css\", \"frame\", \"iframe\", \"link\"]` or `false`\n\nEnables/disables fetching files over the file system/HTTP.\n\n`ProcessExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\"]` or `false`\n\nDisabling this will disable script execution (currently only JavaScript).\n\n`SkipExternalResources`\n\n- _Default_: `false`\n- _Allowed_: `/url to be skipped/` or `false`\n- _Example_: `/http:\\/\\/example.org/js/bad\\.js/`\n\nDo not download and process resources with url matching a regular expression.\n\n## Canvas\n\njsdom includes support for using the [canvas](https://npmjs.org/package/canvas) package to extend any `<canvas>` elements with the canvas API. To make this work, you need to include canvas as a dependency in your project, as a peer of jsdom. If jsdom can find the canvas package, it will use it, but if it's not present, then `<canvas>` elements will behave like `<div>`s.\n\n# More Examples\n\n## Creating a document-less window\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.createWindow();\n\nconsole.log(window.document); // output: undefined\n```\n\n## Creating a document\n\n```js\nvar jsdom = require(\"jsdom\");\nvar doc = new (jsdom.level(1, \"core\").Document)();\n\nconsole.log(doc.nodeName); // outputs: #document\n```\n\n## Creating a browser-like BOM/DOM/Window\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar document = jsdom(\"<html><head></head><body>hello world</body></html>\");\nvar window = document.createWindow();\n\nconsole.log(window.document.innerHTML);\n// output: \"<html><head></head><body>hello world</body></html>\"\n\nconsole.log(window.innerWidth);\n// output: 1024\n\nconsole.log(typeof window.document.getElementsByClassName);\n// outputs: function\n```\n\n## jQueryify\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.jsdom().createWindow();\n\njsdom.jQueryify(window, \"http://code.jquery.com/jquery.js\", function () {\n  window.$(\"body\").append('<div class=\"testing\">Hello World, It works</div>');\n\n  console.log(window.$(\".testing\").text());\n});\n```\n\n## Passing objects to scripts inside the page\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar window = jsdom().createWindow();\n\nwindow.__myObject = { foo: \"bar\" };\n\nvar scriptEl = window.document.createElement(\"script\");\nscriptEl.src = \"anotherScript.js\";\nwindow.document.body.appendChild(scriptEl);\n\n// anotherScript.js will have the ability to read `window.__myObject`, even\n// though it originated in Node!\n```\n\n# Test Compliance:\n\n```\n level1/core                        532/532      100%\n level1/html                        238/238      100%\n level1/svg                         527/527      100%\n level2/core                        283/283      100%\n level2/html                        695/695      100%\n level2/style                           8/8      100%\n level2/extra                           4/4      100%\n level2/events                        24/24      100%\n level3/xpath                         93/93      100%\n window/index                           5/5      100%\n window/script                        10/10      100%\n window/frame                         14/14      100%\n sizzle/index                          8/14       57%\n jsdom/index                          85/85      100%\n jsonp/jsonp                            1/1      100%\n browser/contextifyReplacement          4/4      100%\n browser/index                        22/22      100%\n------------------------------------------------------\nTOTALS: 6/2559 failed; 99% success\n```\n\n## Running the tests\n\nFirst you'll want to `npm install`. To run all the tests, use `npm test`, which just calls `node test/runner`.\n\nUsing `test/runner` directly, you can slice and dice which tests your want to run from different levels. Usage is as follows:\n\n```\ntest/runner --help\nRun the jsdom test suite\n\nOptions:\n-s, --suites     suites that you want to run. ie: -s level1/core,1/html,html [string]\n-f, --fail-fast  stop on the first failed test\n-h, --help       show the help\n-t, --tests      choose the test cases to run. ie: -t jquery\n```\n","_id":"jsdom@0.3.2","dist":{"shasum":"917bd53e3515ca6f132e5919489421b67187edde","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.3.2.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"domenic","email":"domenic@domenicdenicola.com"}},"0.3.3":{"name":"jsdom","version":"0.3.3","description":"A JavaScript implementation of the W3C DOM","keywords":["dom","w3c","html"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"},{"name":"domenic","email":"domenic@domenicdenicola.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"},{"name":"Tiago Rodrigues","email":"tmcrodrigues@gmail.com","url":"http://trodrigues.net"},{"name":"Samori Gorse","email":"samorigorse@gmail.com","url":"http://github.com/shinuza"},{"name":"John Roberts","email":"jroberts@logitech.com"},{"name":"Chad Walker","email":"chad@chad-cat-lore-eddie.com","url":"https://github.com/chad3814"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","nwmatcher":">=1.3.0","request":"2.x","cssom":"0.2.x","cssstyle":">=0.2.3","contextify":"0.1.x"},"optionalDependencies":{"contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","html5":">=0.3.8","optimist":"*"},"directories":{"lib":"./lib/jsdom"},"scripts":{"test":"node ./test/runner"},"main":"./lib/jsdom","readme":"# jsdom\n\nA JavaScript implementation of the W3C DOM.\n\n## Install\n\n```bash\n$ npm install jsdom\n```\n\n## Human contact\n\nsee: [mailing list](http://groups.google.com/group/jsdom)\n\n## Easymode\n\nBootstrapping a DOM is generally a difficult process involving many error prone steps. We didn't want jsdom to fall into the same trap and that is why a new method, `jsdom.env()`, has been added in jsdom 0.2.0 which should make everyone's lives easier.\n\nwith URL\n\n```js\n// Count all of the links from the nodejs build page\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  \"http://nodejs.org/dist/\",\n  [\"http://code.jquery.com/jquery.js\"],\n  function (errors, window) {\n    console.log(\"there have been\", window.$(\"a\").length, \"nodejs releases!\");\n  }\n);\n```\n\nor with raw HTML\n\n```js\n// Run some jQuery on a html fragment\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  '<p><a class=\"the-link\" href=\"https://github.com/tmpvar/jsdom\">jsdom\\'s Homepage</a></p>',\n  [\"http://code.jquery.com/jquery.js\"],\n  function(errors, window) {\n    console.log(\"contents of a.the-link:\", window.$(\"a.the-link\").text());\n  }\n);\n```\n\nor with a configuration object\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  scripts: [\"http://code.jquery.com/jquery.js\"],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\nor with raw JavaScript source\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\nvar fs = require(\"fs\");\nvar jquery = fs.readFileSync(\"./jquery.js\").toString();\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  src: [jquery],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\n### How it works\n`jsdom.env` is built for ease of use, which is rare in the world of the DOM! Since the web has some absolutely horrible JavaScript on it, as of jsdom 0.2.0 `jsdom.env` will not process external resources (scripts, images, etc).  If you want to process the JavaScript use one of the methods below (`jsdom.jsdom` or `jsdom.jQueryify`)\n\n```js\njsdom.env(html, [scripts], [config], callback);\n```\n\n- `html` (**required**): may be a URL, HTML fragment, or file.\n- `scripts` (**optional**): may contain files or URLs.\n- `config` (**optional**): see below.\n- `callback` (**required**): takes two arguments:\n  - `errors`: an array of errors\n  - `window`: a brand new window\n\n_example:_\n\n```js\njsdom.env(html, function (errors, window) {\n  // free memory associated with the window\n  window.close();\n});\n```\n\nIf you would like to specify a configuration object only:\n\n```js\njsdom.env(config);\n```\n\n- `config.html`: see `html` above.\n- `config.scripts`: see `scripts` above.\n- `config.src`: an array of JavaScript strings that will be evaluated against the resulting document. Similar to `scripts`, but it accepts JavaScript instead of paths/URLs.\n- `config.done`: see `callback` above.\n- `config.document`:\n  - `referer`: the new document will have this referer\n  - `cookie`: manually set a cookie value, e.g. `'key=value; expires=Wed, Sep 21 2011 12:00:00 GMT; path=/'`\n- `config.features` : see `Flexibility` section below. **Note**: the default feature set for jsdom.env does _not_ include fetching remote JavaScript and executing it. This is something that you will need to **carefully** enable yourself.\n\n## For the hardcore\n\nIf you want to spawn a document/window and specify all sorts of options this is the section for you. This section covers the `jsdom.jsdom` method:\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar doc = jsdom(markup, level, options);\nvar window = doc.createWindow();\n```\n\n- `markup` is an HTML/XML document to be parsed. You can also pass `null` or an undefined value to get a basic document with empty `<head>` and `<body>` tags. Document fragments are also supported (including `\"\"`), and will behave as sanely as possible (e.g. the resulting document will lack the `head`, `body` and `documentElement` properties if the corresponding elements aren't included).\n\n- `level` is `null` (which means level3) by default, but you can pass another level if you'd like.\n\n  ```js\n  var jsdom = require(\"jsdom\");\n  var doc = jsdom.jsdom(\"<html><body></body></html>\", jsdom.level(1, \"core\"));\n  ```\n\n- `options` see the **Flexibility** section below.\n\n### Flexibility\n\nOne of the goals of jsdom is to be as minimal and light as possible. This section details how someone can change the behavior of `Document`s on the fly.  These features are baked into the `DOMImplementation` that every `Document` has, and may be tweaked in two ways:\n\n1. When you create a new `Document` using the jsdom builder (`require(\"jsdom\").jsdom()`)\n\n  ```js\n  var jsdom = require(\"jsdom\").jsdom;\n  var doc = jsdom(\"<html><body></body></html>\", null, {\n      features: {\n        FetchExternalResources : [\"img\"]\n      }\n  });\n  ```\n\n  Do note, that this will only affect the document that is currently being created. All other documents will use the defaults specified below (see: Default Features).\n\n2. Before creating any documents, you can modify the defaults for all future documents:\n\n  ```js\n  require(\"jsdom\").defaultDocumentFeatures = {\n      FetchExternalResources: [\"script\"],\n      ProcessExternalResources: false\n  };\n  ```\n\n#### Default Features\n\nDefault features are extremely important for jsdom as they lower the configuration requirement and present developers a set of consistent default behaviors. The following sections detail the available features, their defaults, and the values that jsdom uses.\n\n\n`FetchExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\", \"img\", \"css\", \"frame\", \"iframe\", \"link\"]` or `false`\n\nEnables/disables fetching files over the file system/HTTP.\n\n`ProcessExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\"]` or `false`\n\nDisabling this will disable script execution (currently only JavaScript).\n\n`SkipExternalResources`\n\n- _Default_: `false`\n- _Allowed_: `/url to be skipped/` or `false`\n- _Example_: `/http:\\/\\/example.org/js/bad\\.js/`\n\nDo not download and process resources with url matching a regular expression.\n\n## Canvas\n\njsdom includes support for using the [canvas](https://npmjs.org/package/canvas) package to extend any `<canvas>` elements with the canvas API. To make this work, you need to include canvas as a dependency in your project, as a peer of jsdom. If jsdom can find the canvas package, it will use it, but if it's not present, then `<canvas>` elements will behave like `<div>`s.\n\n# More Examples\n\n## Creating a document-less window\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.createWindow();\n\nconsole.log(window.document); // output: undefined\n```\n\n## Creating a document\n\n```js\nvar jsdom = require(\"jsdom\");\nvar doc = new (jsdom.level(1, \"core\").Document)();\n\nconsole.log(doc.nodeName); // outputs: #document\n```\n\n## Creating a browser-like BOM/DOM/Window\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar document = jsdom(\"<html><head></head><body>hello world</body></html>\");\nvar window = document.createWindow();\n\nconsole.log(window.document.innerHTML);\n// output: \"<html><head></head><body>hello world</body></html>\"\n\nconsole.log(window.innerWidth);\n// output: 1024\n\nconsole.log(typeof window.document.getElementsByClassName);\n// outputs: function\n```\n\n## jQueryify\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.jsdom().createWindow();\n\njsdom.jQueryify(window, \"http://code.jquery.com/jquery.js\", function () {\n  window.$(\"body\").append('<div class=\"testing\">Hello World, It works</div>');\n\n  console.log(window.$(\".testing\").text());\n});\n```\n\n## Passing objects to scripts inside the page\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar window = jsdom().createWindow();\n\nwindow.__myObject = { foo: \"bar\" };\n\nvar scriptEl = window.document.createElement(\"script\");\nscriptEl.src = \"anotherScript.js\";\nwindow.document.body.appendChild(scriptEl);\n\n// anotherScript.js will have the ability to read `window.__myObject`, even\n// though it originated in Node!\n```\n\n# Test Compliance:\n\n```\n level1/core                        532/532      100%\n level1/html                        238/238      100%\n level1/svg                         527/527      100%\n level2/core                        283/283      100%\n level2/html                        697/697      100%\n level2/style                         10/10      100%\n level2/extra                           4/4      100%\n level2/events                        24/24      100%\n level3/xpath                         93/93      100%\n window/index                           5/5      100%\n window/script                        10/10      100%\n window/frame                         14/14      100%\n sizzle/index                          9/14       64%\n jsdom/index                          86/86      100%\n jsonp/jsonp                            1/1      100%\n browser/contextifyReplacement          4/4      100%\n browser/index                        22/22      100%\n------------------------------------------------------\nTOTALS: 5/2564 failed; 99% success\n```\n\n## Running the tests\n\nFirst you'll want to `npm install`. To run all the tests, use `npm test`, which just calls `node test/runner`.\n\nUsing `test/runner` directly, you can slice and dice which tests your want to run from different levels. Usage is as follows:\n\n```\ntest/runner --help\nRun the jsdom test suite\n\nOptions:\n-s, --suites     suites that you want to run. ie: -s level1/core,1/html,html [string]\n-f, --fail-fast  stop on the first failed test\n-h, --help       show the help\n-t, --tests      choose the test cases to run. ie: -t jquery\n```\n","_id":"jsdom@0.3.3","dist":{"shasum":"95eb28184857ae165cee571a73e2c41ae47fb0ed","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.3.3.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"domenic","email":"domenic@domenicdenicola.com"}},"0.3.4":{"name":"jsdom","version":"0.3.4","description":"A JavaScript implementation of the W3C DOM","keywords":["dom","w3c","html"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"},{"name":"domenic","email":"domenic@domenicdenicola.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"},{"name":"Tiago Rodrigues","email":"tmcrodrigues@gmail.com","url":"http://trodrigues.net"},{"name":"Samori Gorse","email":"samorigorse@gmail.com","url":"http://github.com/shinuza"},{"name":"John Roberts","email":"jroberts@logitech.com"},{"name":"Chad Walker","email":"chad@chad-cat-lore-eddie.com","url":"https://github.com/chad3814"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","nwmatcher":">=1.3.0","request":"2.x","cssom":"0.2.x","cssstyle":">=0.2.3","contextify":"0.1.x"},"optionalDependencies":{"contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","html5":">=0.3.8","optimist":"*"},"directories":{"lib":"./lib/jsdom"},"scripts":{"test":"node ./test/runner"},"main":"./lib/jsdom","readme":"# jsdom\n\nA JavaScript implementation of the W3C DOM.\n\n## Install\n\n```bash\n$ npm install jsdom\n```\n\n## Human contact\n\nsee: [mailing list](http://groups.google.com/group/jsdom)\n\n## Easymode\n\nBootstrapping a DOM is generally a difficult process involving many error prone steps. We didn't want jsdom to fall into the same trap and that is why a new method, `jsdom.env()`, has been added in jsdom 0.2.0 which should make everyone's lives easier.\n\nwith URL\n\n```js\n// Count all of the links from the nodejs build page\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  \"http://nodejs.org/dist/\",\n  [\"http://code.jquery.com/jquery.js\"],\n  function (errors, window) {\n    console.log(\"there have been\", window.$(\"a\").length, \"nodejs releases!\");\n  }\n);\n```\n\nor with raw HTML\n\n```js\n// Run some jQuery on a html fragment\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  '<p><a class=\"the-link\" href=\"https://github.com/tmpvar/jsdom\">jsdom\\'s Homepage</a></p>',\n  [\"http://code.jquery.com/jquery.js\"],\n  function(errors, window) {\n    console.log(\"contents of a.the-link:\", window.$(\"a.the-link\").text());\n  }\n);\n```\n\nor with a configuration object\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  scripts: [\"http://code.jquery.com/jquery.js\"],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\nor with raw JavaScript source\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\nvar fs = require(\"fs\");\nvar jquery = fs.readFileSync(\"./jquery.js\").toString();\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  src: [jquery],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\n### How it works\n`jsdom.env` is built for ease of use, which is rare in the world of the DOM! Since the web has some absolutely horrible JavaScript on it, as of jsdom 0.2.0 `jsdom.env` will not process external resources (scripts, images, etc).  If you want to process the JavaScript use one of the methods below (`jsdom.jsdom` or `jsdom.jQueryify`)\n\n```js\njsdom.env(html, [scripts], [config], callback);\n```\n\n- `html` (**required**): may be a URL, HTML fragment, or file.\n- `scripts` (**optional**): may contain files or URLs.\n- `config` (**optional**): see below.\n- `callback` (**required**): takes two arguments:\n  - `errors`: an array of errors\n  - `window`: a brand new window\n\n_example:_\n\n```js\njsdom.env(html, function (errors, window) {\n  // free memory associated with the window\n  window.close();\n});\n```\n\nIf you would like to specify a configuration object only:\n\n```js\njsdom.env(config);\n```\n\n- `config.html`: see `html` above.\n- `config.scripts`: see `scripts` above.\n- `config.src`: an array of JavaScript strings that will be evaluated against the resulting document. Similar to `scripts`, but it accepts JavaScript instead of paths/URLs.\n- `config.done`: see `callback` above.\n- `config.document`:\n  - `referer`: the new document will have this referer\n  - `cookie`: manually set a cookie value, e.g. `'key=value; expires=Wed, Sep 21 2011 12:00:00 GMT; path=/'`\n- `config.features` : see `Flexibility` section below. **Note**: the default feature set for jsdom.env does _not_ include fetching remote JavaScript and executing it. This is something that you will need to **carefully** enable yourself.\n\n## For the hardcore\n\nIf you want to spawn a document/window and specify all sorts of options this is the section for you. This section covers the `jsdom.jsdom` method:\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar doc = jsdom(markup, level, options);\nvar window = doc.createWindow();\n```\n\n- `markup` is an HTML/XML document to be parsed. You can also pass `null` or an undefined value to get a basic document with empty `<head>` and `<body>` tags. Document fragments are also supported (including `\"\"`), and will behave as sanely as possible (e.g. the resulting document will lack the `head`, `body` and `documentElement` properties if the corresponding elements aren't included).\n\n- `level` is `null` (which means level3) by default, but you can pass another level if you'd like.\n\n  ```js\n  var jsdom = require(\"jsdom\");\n  var doc = jsdom.jsdom(\"<html><body></body></html>\", jsdom.level(1, \"core\"));\n  ```\n\n- `options` see the **Flexibility** section below.\n\n### Flexibility\n\nOne of the goals of jsdom is to be as minimal and light as possible. This section details how someone can change the behavior of `Document`s on the fly.  These features are baked into the `DOMImplementation` that every `Document` has, and may be tweaked in two ways:\n\n1. When you create a new `Document` using the jsdom builder (`require(\"jsdom\").jsdom()`)\n\n  ```js\n  var jsdom = require(\"jsdom\").jsdom;\n  var doc = jsdom(\"<html><body></body></html>\", null, {\n      features: {\n        FetchExternalResources : [\"img\"]\n      }\n  });\n  ```\n\n  Do note, that this will only affect the document that is currently being created. All other documents will use the defaults specified below (see: Default Features).\n\n2. Before creating any documents, you can modify the defaults for all future documents:\n\n  ```js\n  require(\"jsdom\").defaultDocumentFeatures = {\n      FetchExternalResources: [\"script\"],\n      ProcessExternalResources: false\n  };\n  ```\n\n#### Default Features\n\nDefault features are extremely important for jsdom as they lower the configuration requirement and present developers a set of consistent default behaviors. The following sections detail the available features, their defaults, and the values that jsdom uses.\n\n\n`FetchExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\", \"img\", \"css\", \"frame\", \"iframe\", \"link\"]` or `false`\n\nEnables/disables fetching files over the file system/HTTP.\n\n`ProcessExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\"]` or `false`\n\nDisabling this will disable script execution (currently only JavaScript).\n\n`SkipExternalResources`\n\n- _Default_: `false`\n- _Allowed_: `/url to be skipped/` or `false`\n- _Example_: `/http:\\/\\/example.org/js/bad\\.js/`\n\nDo not download and process resources with url matching a regular expression.\n\n## Canvas\n\njsdom includes support for using the [canvas](https://npmjs.org/package/canvas) package to extend any `<canvas>` elements with the canvas API. To make this work, you need to include canvas as a dependency in your project, as a peer of jsdom. If jsdom can find the canvas package, it will use it, but if it's not present, then `<canvas>` elements will behave like `<div>`s.\n\n# More Examples\n\n## Creating a document-less window\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.createWindow();\n\nconsole.log(window.document); // output: undefined\n```\n\n## Creating a document\n\n```js\nvar jsdom = require(\"jsdom\");\nvar doc = new (jsdom.level(1, \"core\").Document)();\n\nconsole.log(doc.nodeName); // outputs: #document\n```\n\n## Creating a browser-like BOM/DOM/Window\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar document = jsdom(\"<html><head></head><body>hello world</body></html>\");\nvar window = document.createWindow();\n\nconsole.log(window.document.innerHTML);\n// output: \"<html><head></head><body>hello world</body></html>\"\n\nconsole.log(window.innerWidth);\n// output: 1024\n\nconsole.log(typeof window.document.getElementsByClassName);\n// outputs: function\n```\n\n## jQueryify\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.jsdom().createWindow();\n\njsdom.jQueryify(window, \"http://code.jquery.com/jquery.js\", function () {\n  window.$(\"body\").append('<div class=\"testing\">Hello World, It works</div>');\n\n  console.log(window.$(\".testing\").text());\n});\n```\n\n## Passing objects to scripts inside the page\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar window = jsdom().createWindow();\n\nwindow.__myObject = { foo: \"bar\" };\n\nvar scriptEl = window.document.createElement(\"script\");\nscriptEl.src = \"anotherScript.js\";\nwindow.document.body.appendChild(scriptEl);\n\n// anotherScript.js will have the ability to read `window.__myObject`, even\n// though it originated in Node!\n```\n\n# Test Compliance:\n\n```\n level1/core                        532/532      100%\n level1/html                        238/238      100%\n level1/svg                         527/527      100%\n level2/core                        283/283      100%\n level2/html                        697/697      100%\n level2/style                         10/10      100%\n level2/extra                           4/4      100%\n level2/events                        24/24      100%\n level3/xpath                         93/93      100%\n window/index                           5/5      100%\n window/script                        10/10      100%\n window/frame                         14/14      100%\n sizzle/index                          9/14       64%\n jsdom/index                          86/86      100%\n jsonp/jsonp                            1/1      100%\n browser/contextifyReplacement          4/4      100%\n browser/index                        22/22      100%\n------------------------------------------------------\nTOTALS: 5/2564 failed; 99% success\n```\n\n## Running the tests\n\nFirst you'll want to `npm install`. To run all the tests, use `npm test`, which just calls `node test/runner`.\n\nUsing `test/runner` directly, you can slice and dice which tests your want to run from different levels. Usage is as follows:\n\n```\ntest/runner --help\nRun the jsdom test suite\n\nOptions:\n-s, --suites     suites that you want to run. ie: -s level1/core,1/html,html [string]\n-f, --fail-fast  stop on the first failed test\n-h, --help       show the help\n-t, --tests      choose the test cases to run. ie: -t jquery\n```\n","_id":"jsdom@0.3.4","dist":{"shasum":"0cd76aa0f7753178765a4348b4ae252579e53e8c","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.3.4.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"domenic","email":"domenic@domenicdenicola.com"}},"0.4.0":{"name":"jsdom","version":"0.4.0","description":"A JavaScript implementation of the W3C DOM","keywords":["dom","w3c","html"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"},{"name":"domenic","email":"domenic@domenicdenicola.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"},{"name":"Tiago Rodrigues","email":"tmcrodrigues@gmail.com","url":"http://trodrigues.net"},{"name":"Samori Gorse","email":"samorigorse@gmail.com","url":"http://github.com/shinuza"},{"name":"John Roberts","email":"jroberts@logitech.com"},{"name":"Chad Walker","email":"chad@chad-cat-lore-eddie.com","url":"https://github.com/chad3814"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","nwmatcher":">=1.3.0","request":"2.x","cssom":"0.2.x","cssstyle":">=0.2.3","contextify":"0.1.x"},"optionalDependencies":{"contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","html5":">=0.3.8","optimist":"*"},"directories":{"lib":"./lib/jsdom"},"scripts":{"test":"node ./test/runner"},"main":"./lib/jsdom","readme":"# jsdom\n\nA JavaScript implementation of the W3C DOM.\n\n## Install\n\n```bash\n$ npm install jsdom\n```\n\n## Human contact\n\nsee: [mailing list](http://groups.google.com/group/jsdom)\n\n## Easymode\n\nBootstrapping a DOM is generally a difficult process involving many error prone steps. We didn't want jsdom to fall into the same trap and that is why a new method, `jsdom.env()`, has been added in jsdom 0.2.0 which should make everyone's lives easier.\n\nwith URL\n\n```js\n// Count all of the links from the nodejs build page\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  \"http://nodejs.org/dist/\",\n  [\"http://code.jquery.com/jquery.js\"],\n  function (errors, window) {\n    console.log(\"there have been\", window.$(\"a\").length, \"nodejs releases!\");\n  }\n);\n```\n\nor with raw HTML\n\n```js\n// Run some jQuery on a html fragment\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  '<p><a class=\"the-link\" href=\"https://github.com/tmpvar/jsdom\">jsdom\\'s Homepage</a></p>',\n  [\"http://code.jquery.com/jquery.js\"],\n  function(errors, window) {\n    console.log(\"contents of a.the-link:\", window.$(\"a.the-link\").text());\n  }\n);\n```\n\nor with a configuration object\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  scripts: [\"http://code.jquery.com/jquery.js\"],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\nor with raw JavaScript source\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\nvar fs = require(\"fs\");\nvar jquery = fs.readFileSync(\"./jquery.js\").toString();\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  src: [jquery],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\n### How it works\n`jsdom.env` is built for ease of use, which is rare in the world of the DOM! Since the web has some absolutely horrible JavaScript on it, as of jsdom 0.2.0 `jsdom.env` will not process external resources (scripts, images, etc).  If you want to process the JavaScript use one of the methods below (`jsdom.jsdom` or `jsdom.jQueryify`)\n\n```js\njsdom.env(html, [scripts], [config], callback);\n```\n\n- `html` (**required**): may be a URL, HTML fragment, or file.\n- `scripts` (**optional**): may contain files or URLs.\n- `config` (**optional**): see below.\n- `callback` (**required**): takes two arguments:\n  - `errors`: an array of errors\n  - `window`: a brand new window\n\n_example:_\n\n```js\njsdom.env(html, function (errors, window) {\n  // free memory associated with the window\n  window.close();\n});\n```\n\nIf you would like to specify a configuration object only:\n\n```js\njsdom.env(config);\n```\n\n- `config.html`: see `html` above.\n- `config.scripts`: see `scripts` above.\n- `config.src`: an array of JavaScript strings that will be evaluated against the resulting document. Similar to `scripts`, but it accepts JavaScript instead of paths/URLs.\n- `config.done`: see `callback` above.\n- `config.document`:\n  - `referer`: the new document will have this referer\n  - `cookie`: manually set a cookie value, e.g. `'key=value; expires=Wed, Sep 21 2011 12:00:00 GMT; path=/'`\n- `config.features` : see `Flexibility` section below. **Note**: the default feature set for jsdom.env does _not_ include fetching remote JavaScript and executing it. This is something that you will need to **carefully** enable yourself.\n\n## For the hardcore\n\nIf you want to spawn a document/window and specify all sorts of options this is the section for you. This section covers the `jsdom.jsdom` method:\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar doc = jsdom(markup, level, options);\nvar window = doc.createWindow();\n```\n\n- `markup` is an HTML/XML document to be parsed. You can also pass `null` or an undefined value to get a basic document with empty `<head>` and `<body>` tags. Document fragments are also supported (including `\"\"`), and will behave as sanely as possible (e.g. the resulting document will lack the `head`, `body` and `documentElement` properties if the corresponding elements aren't included).\n\n- `level` is `null` (which means level3) by default, but you can pass another level if you'd like.\n\n  ```js\n  var jsdom = require(\"jsdom\");\n  var doc = jsdom.jsdom(\"<html><body></body></html>\", jsdom.level(1, \"core\"));\n  ```\n\n- `options` see the **Flexibility** section below.\n\n### Flexibility\n\nOne of the goals of jsdom is to be as minimal and light as possible. This section details how someone can change the behavior of `Document`s on the fly.  These features are baked into the `DOMImplementation` that every `Document` has, and may be tweaked in two ways:\n\n1. When you create a new `Document` using the jsdom builder (`require(\"jsdom\").jsdom()`)\n\n  ```js\n  var jsdom = require(\"jsdom\").jsdom;\n  var doc = jsdom(\"<html><body></body></html>\", null, {\n      features: {\n        FetchExternalResources : [\"img\"]\n      }\n  });\n  ```\n\n  Do note, that this will only affect the document that is currently being created. All other documents will use the defaults specified below (see: Default Features).\n\n2. Before creating any documents, you can modify the defaults for all future documents:\n\n  ```js\n  require(\"jsdom\").defaultDocumentFeatures = {\n      FetchExternalResources: [\"script\"],\n      ProcessExternalResources: false\n  };\n  ```\n\n#### Default Features\n\nDefault features are extremely important for jsdom as they lower the configuration requirement and present developers a set of consistent default behaviors. The following sections detail the available features, their defaults, and the values that jsdom uses.\n\n\n`FetchExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\", \"img\", \"css\", \"frame\", \"iframe\", \"link\"]` or `false`\n\nEnables/disables fetching files over the file system/HTTP.\n\n`ProcessExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\"]` or `false`\n\nDisabling this will disable script execution (currently only JavaScript).\n\n`SkipExternalResources`\n\n- _Default_: `false`\n- _Allowed_: `/url to be skipped/` or `false`\n- _Example_: `/http:\\/\\/example.org/js/bad\\.js/`\n\nDo not download and process resources with url matching a regular expression.\n\n## Canvas\n\njsdom includes support for using the [canvas](https://npmjs.org/package/canvas) package to extend any `<canvas>` elements with the canvas API. To make this work, you need to include canvas as a dependency in your project, as a peer of jsdom. If jsdom can find the canvas package, it will use it, but if it's not present, then `<canvas>` elements will behave like `<div>`s.\n\n# More Examples\n\n## Creating a document-less window\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.createWindow();\n\nconsole.log(window.document); // output: undefined\n```\n\n## Creating a document\n\n```js\nvar jsdom = require(\"jsdom\");\nvar doc = new (jsdom.level(1, \"core\").Document)();\n\nconsole.log(doc.nodeName); // outputs: #document\n```\n\n## Creating a browser-like BOM/DOM/Window\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar document = jsdom(\"<html><head></head><body>hello world</body></html>\");\nvar window = document.createWindow();\n\nconsole.log(window.document.innerHTML);\n// output: \"<html><head></head><body>hello world</body></html>\"\n\nconsole.log(window.innerWidth);\n// output: 1024\n\nconsole.log(typeof window.document.getElementsByClassName);\n// outputs: function\n```\n\n## jQueryify\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.jsdom().createWindow();\n\njsdom.jQueryify(window, \"http://code.jquery.com/jquery.js\", function () {\n  window.$(\"body\").append('<div class=\"testing\">Hello World, It works</div>');\n\n  console.log(window.$(\".testing\").text());\n});\n```\n\n## Passing objects to scripts inside the page\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar window = jsdom().createWindow();\n\nwindow.__myObject = { foo: \"bar\" };\n\nvar scriptEl = window.document.createElement(\"script\");\nscriptEl.src = \"anotherScript.js\";\nwindow.document.body.appendChild(scriptEl);\n\n// anotherScript.js will have the ability to read `window.__myObject`, even\n// though it originated in Node!\n```\n\n# Test Compliance:\n\n```\n level1/core                        532/532      100%\n level1/html                        238/238      100%\n level1/svg                         527/527      100%\n level2/core                        283/283      100%\n level2/html                        697/697      100%\n level2/style                         11/11      100%\n level2/extra                           4/4      100%\n level2/events                        24/24      100%\n level3/xpath                         93/93      100%\n window/index                           5/5      100%\n window/script                        10/10      100%\n window/frame                         14/14      100%\n sizzle/index                         10/14       71%\n jsdom/index                          86/86      100%\n jsonp/jsonp                            1/1      100%\n browser/contextifyReplacement          4/4      100%\n browser/index                        22/22      100%\n------------------------------------------------------\nTOTALS: 4/2565 failed; 99% success\n```\n\n## Running the tests\n\nFirst you'll want to `npm install`. To run all the tests, use `npm test`, which just calls `node test/runner`.\n\nUsing `test/runner` directly, you can slice and dice which tests your want to run from different levels. Usage is as follows:\n\n```\ntest/runner --help\nRun the jsdom test suite\n\nOptions:\n-s, --suites     suites that you want to run. ie: -s level1/core,1/html,html [string]\n-f, --fail-fast  stop on the first failed test\n-h, --help       show the help\n-t, --tests      choose the test cases to run. ie: -t jquery\n```\n","readmeFilename":"README.md","_id":"jsdom@0.4.0","dist":{"shasum":"aedd37a6a4c1dc991c264e8f264b9f9c595dfd03","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.4.0.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"domenic","email":"domenic@domenicdenicola.com"}},"0.4.1":{"name":"jsdom","version":"0.4.1","description":"A JavaScript implementation of the W3C DOM","keywords":["dom","w3c","html"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"},{"name":"domenic","email":"domenic@domenicdenicola.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"},{"name":"Tiago Rodrigues","email":"tmcrodrigues@gmail.com","url":"http://trodrigues.net"},{"name":"Samori Gorse","email":"samorigorse@gmail.com","url":"http://github.com/shinuza"},{"name":"John Roberts","email":"jroberts@logitech.com"},{"name":"Chad Walker","email":"chad@chad-cat-lore-eddie.com","url":"https://github.com/chad3814"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","nwmatcher":">=1.3.0","request":"2.x","cssom":"0.2.x","cssstyle":">=0.2.3","contextify":"0.1.x"},"optionalDependencies":{"contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","html5":">=0.3.8","optimist":"*"},"directories":{"lib":"./lib/jsdom"},"scripts":{"test":"node ./test/runner"},"main":"./lib/jsdom","readme":"# jsdom\n\nA JavaScript implementation of the W3C DOM.\n\n## Install\n\n```bash\n$ npm install jsdom\n```\n\n## Human contact\n\nsee: [mailing list](http://groups.google.com/group/jsdom)\n\n## Easymode\n\nBootstrapping a DOM is generally a difficult process involving many error prone steps. We didn't want jsdom to fall into the same trap and that is why a new method, `jsdom.env()`, has been added in jsdom 0.2.0 which should make everyone's lives easier.\n\nwith URL\n\n```js\n// Count all of the links from the nodejs build page\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  \"http://nodejs.org/dist/\",\n  [\"http://code.jquery.com/jquery.js\"],\n  function (errors, window) {\n    console.log(\"there have been\", window.$(\"a\").length, \"nodejs releases!\");\n  }\n);\n```\n\nor with raw HTML\n\n```js\n// Run some jQuery on a html fragment\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  '<p><a class=\"the-link\" href=\"https://github.com/tmpvar/jsdom\">jsdom\\'s Homepage</a></p>',\n  [\"http://code.jquery.com/jquery.js\"],\n  function(errors, window) {\n    console.log(\"contents of a.the-link:\", window.$(\"a.the-link\").text());\n  }\n);\n```\n\nor with a configuration object\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  scripts: [\"http://code.jquery.com/jquery.js\"],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\nor with raw JavaScript source\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\nvar fs = require(\"fs\");\nvar jquery = fs.readFileSync(\"./jquery.js\").toString();\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  src: [jquery],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\n### How it works\n`jsdom.env` is built for ease of use, which is rare in the world of the DOM! Since the web has some absolutely horrible JavaScript on it, as of jsdom 0.2.0 `jsdom.env` will not process external resources (scripts, images, etc).  If you want to process the JavaScript use one of the methods below (`jsdom.jsdom` or `jsdom.jQueryify`)\n\n```js\njsdom.env(html, [scripts], [config], callback);\n```\n\n- `html` (**required**): may be a URL, HTML fragment, or file.\n- `scripts` (**optional**): may contain files or URLs.\n- `config` (**optional**): see below.\n- `callback` (**required**): takes two arguments:\n  - `errors`: an array of errors\n  - `window`: a brand new window\n\n_example:_\n\n```js\njsdom.env(html, function (errors, window) {\n  // free memory associated with the window\n  window.close();\n});\n```\n\nIf you would like to specify a configuration object only:\n\n```js\njsdom.env(config);\n```\n\n- `config.html`: see `html` above.\n- `config.scripts`: see `scripts` above.\n- `config.src`: an array of JavaScript strings that will be evaluated against the resulting document. Similar to `scripts`, but it accepts JavaScript instead of paths/URLs.\n- `config.done`: see `callback` above.\n- `config.document`:\n  - `referer`: the new document will have this referer\n  - `cookie`: manually set a cookie value, e.g. `'key=value; expires=Wed, Sep 21 2011 12:00:00 GMT; path=/'`\n- `config.features` : see `Flexibility` section below. **Note**: the default feature set for jsdom.env does _not_ include fetching remote JavaScript and executing it. This is something that you will need to **carefully** enable yourself.\n\n## For the hardcore\n\nIf you want to spawn a document/window and specify all sorts of options this is the section for you. This section covers the `jsdom.jsdom` method:\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar doc = jsdom(markup, level, options);\nvar window = doc.createWindow();\n```\n\n- `markup` is an HTML/XML document to be parsed. You can also pass `null` or an undefined value to get a basic document with empty `<head>` and `<body>` tags. Document fragments are also supported (including `\"\"`), and will behave as sanely as possible (e.g. the resulting document will lack the `head`, `body` and `documentElement` properties if the corresponding elements aren't included).\n\n- `level` is `null` (which means level3) by default, but you can pass another level if you'd like.\n\n  ```js\n  var jsdom = require(\"jsdom\");\n  var doc = jsdom.jsdom(\"<html><body></body></html>\", jsdom.level(1, \"core\"));\n  ```\n\n- `options` see the **Flexibility** section below.\n\n### Flexibility\n\nOne of the goals of jsdom is to be as minimal and light as possible. This section details how someone can change the behavior of `Document`s on the fly.  These features are baked into the `DOMImplementation` that every `Document` has, and may be tweaked in two ways:\n\n1. When you create a new `Document` using the jsdom builder (`require(\"jsdom\").jsdom()`)\n\n  ```js\n  var jsdom = require(\"jsdom\").jsdom;\n  var doc = jsdom(\"<html><body></body></html>\", null, {\n      features: {\n        FetchExternalResources : [\"img\"]\n      }\n  });\n  ```\n\n  Do note, that this will only affect the document that is currently being created. All other documents will use the defaults specified below (see: Default Features).\n\n2. Before creating any documents, you can modify the defaults for all future documents:\n\n  ```js\n  require(\"jsdom\").defaultDocumentFeatures = {\n      FetchExternalResources: [\"script\"],\n      ProcessExternalResources: false\n  };\n  ```\n\n#### Default Features\n\nDefault features are extremely important for jsdom as they lower the configuration requirement and present developers a set of consistent default behaviors. The following sections detail the available features, their defaults, and the values that jsdom uses.\n\n\n`FetchExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\", \"img\", \"css\", \"frame\", \"iframe\", \"link\"]` or `false`\n\nEnables/disables fetching files over the file system/HTTP.\n\n`ProcessExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\"]` or `false`\n\nDisabling this will disable script execution (currently only JavaScript).\n\n`SkipExternalResources`\n\n- _Default_: `false`\n- _Allowed_: `/url to be skipped/` or `false`\n- _Example_: `/http:\\/\\/example.org/js/bad\\.js/`\n\nDo not download and process resources with url matching a regular expression.\n\n## Canvas\n\njsdom includes support for using the [canvas](https://npmjs.org/package/canvas) package to extend any `<canvas>` elements with the canvas API. To make this work, you need to include canvas as a dependency in your project, as a peer of jsdom. If jsdom can find the canvas package, it will use it, but if it's not present, then `<canvas>` elements will behave like `<div>`s.\n\n# More Examples\n\n## Creating a document-less window\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.createWindow();\n\nconsole.log(window.document); // output: undefined\n```\n\n## Creating a document\n\n```js\nvar jsdom = require(\"jsdom\");\nvar doc = new (jsdom.level(1, \"core\").Document)();\n\nconsole.log(doc.nodeName); // outputs: #document\n```\n\n## Creating a browser-like BOM/DOM/Window\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar document = jsdom(\"<html><head></head><body>hello world</body></html>\");\nvar window = document.createWindow();\n\nconsole.log(window.document.innerHTML);\n// output: \"<html><head></head><body>hello world</body></html>\"\n\nconsole.log(window.innerWidth);\n// output: 1024\n\nconsole.log(typeof window.document.getElementsByClassName);\n// outputs: function\n```\n\n## jQueryify\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.jsdom().createWindow();\n\njsdom.jQueryify(window, \"http://code.jquery.com/jquery.js\", function () {\n  window.$(\"body\").append('<div class=\"testing\">Hello World, It works</div>');\n\n  console.log(window.$(\".testing\").text());\n});\n```\n\n## Passing objects to scripts inside the page\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar window = jsdom().createWindow();\n\nwindow.__myObject = { foo: \"bar\" };\n\nvar scriptEl = window.document.createElement(\"script\");\nscriptEl.src = \"anotherScript.js\";\nwindow.document.body.appendChild(scriptEl);\n\n// anotherScript.js will have the ability to read `window.__myObject`, even\n// though it originated in Node!\n```\n\n# Test Compliance:\n\n```\n level1/core                        532/532      100%\n level1/html                        238/238      100%\n level1/svg                         527/527      100%\n level2/core                        283/283      100%\n level2/html                        697/697      100%\n level2/style                         11/11      100%\n level2/extra                           4/4      100%\n level2/events                        24/24      100%\n level3/xpath                         93/93      100%\n window/index                           5/5      100%\n window/script                        10/10      100%\n window/frame                         14/14      100%\n sizzle/index                         10/14       71%\n jsdom/index                          86/86      100%\n jsonp/jsonp                            1/1      100%\n browser/contextifyReplacement          4/4      100%\n browser/index                        22/22      100%\n------------------------------------------------------\nTOTALS: 4/2565 failed; 99% success\n```\n\n## Running the tests\n\nFirst you'll want to `npm install`. To run all the tests, use `npm test`, which just calls `node test/runner`.\n\nUsing `test/runner` directly, you can slice and dice which tests your want to run from different levels. Usage is as follows:\n\n```\ntest/runner --help\nRun the jsdom test suite\n\nOptions:\n-s, --suites     suites that you want to run. ie: -s level1/core,1/html,html [string]\n-f, --fail-fast  stop on the first failed test\n-h, --help       show the help\n-t, --tests      choose the test cases to run. ie: -t jquery\n```\n","readmeFilename":"README.md","_id":"jsdom@0.4.1","dist":{"shasum":"120e044796e1f8ebd4e4bb561feda60ae1151f5e","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.4.1.tgz"},"_from":".","_npmVersion":"1.2.10","_npmUser":{"name":"domenic","email":"domenic@domenicdenicola.com"}},"0.4.2":{"name":"jsdom","version":"0.4.2","description":"A JavaScript implementation of the W3C DOM","keywords":["dom","w3c","html"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"},{"name":"domenic","email":"domenic@domenicdenicola.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"},{"name":"Tiago Rodrigues","email":"tmcrodrigues@gmail.com","url":"http://trodrigues.net"},{"name":"Samori Gorse","email":"samorigorse@gmail.com","url":"http://github.com/shinuza"},{"name":"John Roberts","email":"jroberts@logitech.com"},{"name":"Chad Walker","email":"chad@chad-cat-lore-eddie.com","url":"https://github.com/chad3814"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","nwmatcher":">=1.3.1","request":"2.x","cssom":"0.2.x","cssstyle":">=0.2.3","contextify":"0.1.x"},"optionalDependencies":{"contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","html5":">=0.3.8","optimist":"*"},"directories":{"lib":"./lib/jsdom"},"scripts":{"test":"node ./test/runner"},"main":"./lib/jsdom","readme":"# jsdom\n\nA JavaScript implementation of the W3C DOM.\n\n## Install\n\n```bash\n$ npm install jsdom\n```\n\n## Human contact\n\nsee: [mailing list](http://groups.google.com/group/jsdom)\n\n## Easymode\n\nBootstrapping a DOM is generally a difficult process involving many error prone steps. We didn't want jsdom to fall into the same trap and that is why a new method, `jsdom.env()`, has been added in jsdom 0.2.0 which should make everyone's lives easier.\n\nwith URL\n\n```js\n// Count all of the links from the nodejs build page\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  \"http://nodejs.org/dist/\",\n  [\"http://code.jquery.com/jquery.js\"],\n  function (errors, window) {\n    console.log(\"there have been\", window.$(\"a\").length, \"nodejs releases!\");\n  }\n);\n```\n\nor with raw HTML\n\n```js\n// Run some jQuery on a html fragment\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  '<p><a class=\"the-link\" href=\"https://github.com/tmpvar/jsdom\">jsdom\\'s Homepage</a></p>',\n  [\"http://code.jquery.com/jquery.js\"],\n  function(errors, window) {\n    console.log(\"contents of a.the-link:\", window.$(\"a.the-link\").text());\n  }\n);\n```\n\nor with a configuration object\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  scripts: [\"http://code.jquery.com/jquery.js\"],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\nor with raw JavaScript source\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\nvar fs = require(\"fs\");\nvar jquery = fs.readFileSync(\"./jquery.js\").toString();\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  src: [jquery],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\n### How it works\n`jsdom.env` is built for ease of use, which is rare in the world of the DOM! Since the web has some absolutely horrible JavaScript on it, as of jsdom 0.2.0 `jsdom.env` will not process external resources (scripts, images, etc).  If you want to process the JavaScript use one of the methods below (`jsdom.jsdom` or `jsdom.jQueryify`)\n\n```js\njsdom.env(html, [scripts], [config], callback);\n```\n\n- `html` (**required**): may be a URL, HTML fragment, or file.\n- `scripts` (**optional**): may contain files or URLs.\n- `config` (**optional**): see below.\n- `callback` (**required**): takes two arguments:\n  - `errors`: an array of errors\n  - `window`: a brand new window\n\n_example:_\n\n```js\njsdom.env(html, function (errors, window) {\n  // free memory associated with the window\n  window.close();\n});\n```\n\nIf you would like to specify a configuration object only:\n\n```js\njsdom.env(config);\n```\n\n- `config.html`: see `html` above.\n- `config.scripts`: see `scripts` above.\n- `config.src`: an array of JavaScript strings that will be evaluated against the resulting document. Similar to `scripts`, but it accepts JavaScript instead of paths/URLs.\n- `config.done`: see `callback` above.\n- `config.document`:\n  - `referer`: the new document will have this referer\n  - `cookie`: manually set a cookie value, e.g. `'key=value; expires=Wed, Sep 21 2011 12:00:00 GMT; path=/'`\n- `config.features` : see `Flexibility` section below. **Note**: the default feature set for jsdom.env does _not_ include fetching remote JavaScript and executing it. This is something that you will need to **carefully** enable yourself.\n\n## For the hardcore\n\nIf you want to spawn a document/window and specify all sorts of options this is the section for you. This section covers the `jsdom.jsdom` method:\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar doc = jsdom(markup, level, options);\nvar window = doc.createWindow();\n```\n\n- `markup` is an HTML/XML document to be parsed. You can also pass `null` or an undefined value to get a basic document with empty `<head>` and `<body>` tags. Document fragments are also supported (including `\"\"`), and will behave as sanely as possible (e.g. the resulting document will lack the `head`, `body` and `documentElement` properties if the corresponding elements aren't included).\n\n- `level` is `null` (which means level3) by default, but you can pass another level if you'd like.\n\n  ```js\n  var jsdom = require(\"jsdom\");\n  var doc = jsdom.jsdom(\"<html><body></body></html>\", jsdom.level(1, \"core\"));\n  ```\n\n- `options` see the **Flexibility** section below.\n\n### Flexibility\n\nOne of the goals of jsdom is to be as minimal and light as possible. This section details how someone can change the behavior of `Document`s on the fly.  These features are baked into the `DOMImplementation` that every `Document` has, and may be tweaked in two ways:\n\n1. When you create a new `Document` using the jsdom builder (`require(\"jsdom\").jsdom()`)\n\n  ```js\n  var jsdom = require(\"jsdom\").jsdom;\n  var doc = jsdom(\"<html><body></body></html>\", null, {\n      features: {\n        FetchExternalResources : [\"img\"]\n      }\n  });\n  ```\n\n  Do note, that this will only affect the document that is currently being created. All other documents will use the defaults specified below (see: Default Features).\n\n2. Before creating any documents, you can modify the defaults for all future documents:\n\n  ```js\n  require(\"jsdom\").defaultDocumentFeatures = {\n      FetchExternalResources: [\"script\"],\n      ProcessExternalResources: false\n  };\n  ```\n\n#### Default Features\n\nDefault features are extremely important for jsdom as they lower the configuration requirement and present developers a set of consistent default behaviors. The following sections detail the available features, their defaults, and the values that jsdom uses.\n\n\n`FetchExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\", \"img\", \"css\", \"frame\", \"iframe\", \"link\"]` or `false`\n\nEnables/disables fetching files over the file system/HTTP.\n\n`ProcessExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\"]` or `false`\n\nDisabling this will disable script execution (currently only JavaScript).\n\n`SkipExternalResources`\n\n- _Default_: `false`\n- _Allowed_: `/url to be skipped/` or `false`\n- _Example_: `/http:\\/\\/example.org/js/bad\\.js/`\n\nDo not download and process resources with url matching a regular expression.\n\n## Canvas\n\njsdom includes support for using the [canvas](https://npmjs.org/package/canvas) package to extend any `<canvas>` elements with the canvas API. To make this work, you need to include canvas as a dependency in your project, as a peer of jsdom. If jsdom can find the canvas package, it will use it, but if it's not present, then `<canvas>` elements will behave like `<div>`s.\n\n# More Examples\n\n## Creating a document-less window\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.createWindow();\n\nconsole.log(window.document); // output: undefined\n```\n\n## Creating a document\n\n```js\nvar jsdom = require(\"jsdom\");\nvar doc = new (jsdom.level(1, \"core\").Document)();\n\nconsole.log(doc.nodeName); // outputs: #document\n```\n\n## Creating a browser-like BOM/DOM/Window\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar document = jsdom(\"<html><head></head><body>hello world</body></html>\");\nvar window = document.createWindow();\n\nconsole.log(window.document.innerHTML);\n// output: \"<html><head></head><body>hello world</body></html>\"\n\nconsole.log(window.innerWidth);\n// output: 1024\n\nconsole.log(typeof window.document.getElementsByClassName);\n// outputs: function\n```\n\n## jQueryify\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.jsdom().createWindow();\n\njsdom.jQueryify(window, \"http://code.jquery.com/jquery.js\", function () {\n  window.$(\"body\").append('<div class=\"testing\">Hello World, It works</div>');\n\n  console.log(window.$(\".testing\").text());\n});\n```\n\n## Passing objects to scripts inside the page\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar window = jsdom().createWindow();\n\nwindow.__myObject = { foo: \"bar\" };\n\nvar scriptEl = window.document.createElement(\"script\");\nscriptEl.src = \"anotherScript.js\";\nwindow.document.body.appendChild(scriptEl);\n\n// anotherScript.js will have the ability to read `window.__myObject`, even\n// though it originated in Node!\n```\n\n# Test Compliance:\n\n```\n level1/core                        532/532      100%     \n level1/html                        238/238      100%     \n level1/svg                         527/527      100%     \n level2/core                        283/283      100%     \n level2/html                        700/700      100%     \n level2/style                         11/11      100%     \n level2/extra                           4/4      100%     \n level2/events                        24/24      100%     \n level3/xpath                         93/93      100%     \n window/index                           5/5      100%     \n window/script                        10/10      100%     \n window/frame                         14/14      100%     \n sizzle/index                         14/14      100%     \n jsdom/index                          86/86      100%     \n jsonp/jsonp                            1/1      100%     \n browser/contextifyReplacement          4/4      100%     \n browser/index                        22/22      100%     \n------------------------------------------------------\nTOTALS: 0/2568 failed; 100% success\nTIME: 32648ms\n```\n\n## Running the tests\n\nFirst you'll want to `npm install`. To run all the tests, use `npm test`, which just calls `node test/runner`.\n\nUsing `test/runner` directly, you can slice and dice which tests your want to run from different levels. Usage is as follows:\n\n```\ntest/runner --help\nRun the jsdom test suite\n\nOptions:\n-s, --suites     suites that you want to run. ie: -s level1/core,1/html,html [string]\n-f, --fail-fast  stop on the first failed test\n-h, --help       show the help\n-t, --tests      choose the test cases to run. ie: -t jquery\n```\n","readmeFilename":"README.md","_id":"jsdom@0.4.2","dist":{"shasum":"9a958b57aa8e8bee1f3dbb6b5c1be9412c0a6314","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.4.2.tgz"},"_from":".","_npmVersion":"1.2.10","_npmUser":{"name":"domenic","email":"domenic@domenicdenicola.com"}},"0.5.0":{"name":"jsdom","version":"0.5.0","description":"A JavaScript implementation of the W3C DOM","keywords":["dom","w3c","html"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"},{"name":"domenic","email":"domenic@domenicdenicola.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"},{"name":"Tiago Rodrigues","email":"tmcrodrigues@gmail.com","url":"http://trodrigues.net"},{"name":"Samori Gorse","email":"samorigorse@gmail.com","url":"http://github.com/shinuza"},{"name":"John Roberts","email":"jroberts@logitech.com"},{"name":"Chad Walker","email":"chad@chad-cat-lore-eddie.com","url":"https://github.com/chad3814"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","nwmatcher":">=1.3.1","request":"2.x","cssom":"0.2.x","cssstyle":">=0.2.3","contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","html5":">=0.3.8","optimist":"*"},"directories":{"lib":"./lib/jsdom"},"scripts":{"test":"node ./test/runner"},"main":"./lib/jsdom","readme":"# jsdom\n\nA JavaScript implementation of the W3C DOM.\n\n## Install\n\n```bash\n$ npm install jsdom\n```\n\nIf this gives you trouble with errors about installing Contextify, especially on Windows, see [below](#contextify).\n\n## Human contact\n\nsee: [mailing list](http://groups.google.com/group/jsdom)\n\n## Easymode\n\nBootstrapping a DOM is generally a difficult process involving many error prone steps. We didn't want jsdom to fall into the same trap and that is why a new method, `jsdom.env()`, has been added in jsdom 0.2.0 which should make everyone's lives easier.\n\nwith URL\n\n```js\n// Count all of the links from the nodejs build page\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  \"http://nodejs.org/dist/\",\n  [\"http://code.jquery.com/jquery.js\"],\n  function (errors, window) {\n    console.log(\"there have been\", window.$(\"a\").length, \"nodejs releases!\");\n  }\n);\n```\n\nor with raw HTML\n\n```js\n// Run some jQuery on a html fragment\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  '<p><a class=\"the-link\" href=\"https://github.com/tmpvar/jsdom\">jsdom\\'s Homepage</a></p>',\n  [\"http://code.jquery.com/jquery.js\"],\n  function(errors, window) {\n    console.log(\"contents of a.the-link:\", window.$(\"a.the-link\").text());\n  }\n);\n```\n\nor with a configuration object\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  scripts: [\"http://code.jquery.com/jquery.js\"],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\nor with raw JavaScript source\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\nvar fs = require(\"fs\");\nvar jquery = fs.readFileSync(\"./jquery.js\").toString();\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  src: [jquery],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\n### How it works\n`jsdom.env` is built for ease of use, which is rare in the world of the DOM! Since the web has some absolutely horrible JavaScript on it, as of jsdom 0.2.0 `jsdom.env` will not process external resources (scripts, images, etc).  If you want to process the JavaScript use one of the methods below (`jsdom.jsdom` or `jsdom.jQueryify`)\n\n```js\njsdom.env(html, [scripts], [config], callback);\n```\n\n- `html` (**required**): may be a URL, HTML fragment, or file.\n- `scripts` (**optional**): may contain files or URLs.\n- `config` (**optional**): see below.\n- `callback` (**required**): takes two arguments:\n  - `errors`: an array of errors\n  - `window`: a brand new window\n\n_example:_\n\n```js\njsdom.env(html, function (errors, window) {\n  // free memory associated with the window\n  window.close();\n});\n```\n\nIf you would like to specify a configuration object only:\n\n```js\njsdom.env(config);\n```\n\n- `config.html`: see `html` above.\n- `config.scripts`: see `scripts` above.\n- `config.src`: an array of JavaScript strings that will be evaluated against the resulting document. Similar to `scripts`, but it accepts JavaScript instead of paths/URLs.\n- `config.done`: see `callback` above.\n- `config.document`:\n  - `referer`: the new document will have this referer\n  - `cookie`: manually set a cookie value, e.g. `'key=value; expires=Wed, Sep 21 2011 12:00:00 GMT; path=/'`\n- `config.features` : see `Flexibility` section below. **Note**: the default feature set for jsdom.env does _not_ include fetching remote JavaScript and executing it. This is something that you will need to **carefully** enable yourself.\n\n## For the hardcore\n\nIf you want to spawn a document/window and specify all sorts of options this is the section for you. This section covers the `jsdom.jsdom` method:\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar doc = jsdom(markup, level, options);\nvar window = doc.createWindow();\n```\n\n- `markup` is an HTML/XML document to be parsed. You can also pass `null` or an undefined value to get a basic document with empty `<head>` and `<body>` tags. Document fragments are also supported (including `\"\"`), and will behave as sanely as possible (e.g. the resulting document will lack the `head`, `body` and `documentElement` properties if the corresponding elements aren't included).\n\n- `level` is `null` (which means level3) by default, but you can pass another level if you'd like.\n\n  ```js\n  var jsdom = require(\"jsdom\");\n  var doc = jsdom.jsdom(\"<html><body></body></html>\", jsdom.level(1, \"core\"));\n  ```\n\n- `options` see the **Flexibility** section below.\n\n### Flexibility\n\nOne of the goals of jsdom is to be as minimal and light as possible. This section details how someone can change the behavior of `Document`s on the fly.  These features are baked into the `DOMImplementation` that every `Document` has, and may be tweaked in two ways:\n\n1. When you create a new `Document` using the jsdom builder (`require(\"jsdom\").jsdom()`)\n\n  ```js\n  var jsdom = require(\"jsdom\").jsdom;\n  var doc = jsdom(\"<html><body></body></html>\", null, {\n      features: {\n        FetchExternalResources : [\"img\"]\n      }\n  });\n  ```\n\n  Do note, that this will only affect the document that is currently being created. All other documents will use the defaults specified below (see: Default Features).\n\n2. Before creating any documents, you can modify the defaults for all future documents:\n\n  ```js\n  require(\"jsdom\").defaultDocumentFeatures = {\n      FetchExternalResources: [\"script\"],\n      ProcessExternalResources: false\n  };\n  ```\n\n#### Default Features\n\nDefault features are extremely important for jsdom as they lower the configuration requirement and present developers a set of consistent default behaviors. The following sections detail the available features, their defaults, and the values that jsdom uses.\n\n\n`FetchExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\", \"img\", \"css\", \"frame\", \"iframe\", \"link\"]` or `false`\n\nEnables/disables fetching files over the file system/HTTP.\n\n`ProcessExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\"]` or `false`\n\nDisabling this will disable script execution (currently only JavaScript).\n\n`SkipExternalResources`\n\n- _Default_: `false`\n- _Allowed_: `/url to be skipped/` or `false`\n- _Example_: `/http:\\/\\/example.org/js/bad\\.js/`\n\nDo not download and process resources with url matching a regular expression.\n\n### Canvas\n\njsdom includes support for using the [canvas](https://npmjs.org/package/canvas) package to extend any `<canvas>` elements with the canvas API. To make this work, you need to include canvas as a dependency in your project, as a peer of jsdom. If jsdom can find the canvas package, it will use it, but if it's not present, then `<canvas>` elements will behave like `<div>`s.\n\n## More Examples\n\n### Creating a document-less window\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.createWindow();\n\nconsole.log(window.document); // output: undefined\n```\n\n### Creating a document\n\n```js\nvar jsdom = require(\"jsdom\");\nvar doc = new (jsdom.level(1, \"core\").Document)();\n\nconsole.log(doc.nodeName); // outputs: #document\n```\n\n### Creating a browser-like BOM/DOM/Window\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar document = jsdom(\"<html><head></head><body>hello world</body></html>\");\nvar window = document.createWindow();\n\nconsole.log(window.document.innerHTML);\n// output: \"<html><head></head><body>hello world</body></html>\"\n\nconsole.log(window.innerWidth);\n// output: 1024\n\nconsole.log(typeof window.document.getElementsByClassName);\n// outputs: function\n```\n\n## jQueryify\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.jsdom().createWindow();\n\njsdom.jQueryify(window, \"http://code.jquery.com/jquery.js\", function () {\n  window.$(\"body\").append('<div class=\"testing\">Hello World, It works</div>');\n\n  console.log(window.$(\".testing\").text());\n});\n```\n\n### Passing objects to scripts inside the page\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar window = jsdom().createWindow();\n\nwindow.__myObject = { foo: \"bar\" };\n\nvar scriptEl = window.document.createElement(\"script\");\nscriptEl.src = \"anotherScript.js\";\nwindow.document.body.appendChild(scriptEl);\n\n// anotherScript.js will have the ability to read `window.__myObject`, even\n// though it originated in Node!\n```\n\n## Test Compliance:\n\n```\n level1/core                        532/532      100%\n level1/html                        238/238      100%\n level1/svg                         527/527      100%\n level2/core                        283/283      100%\n level2/html                        700/700      100%\n level2/style                         11/11      100%\n level2/extra                           4/4      100%\n level2/events                        24/24      100%\n level3/xpath                         93/93      100%\n window/index                           5/5      100%\n window/script                        10/10      100%\n window/frame                         14/14      100%\n sizzle/index                         14/14      100%\n jsdom/index                          86/86      100%\n jsonp/jsonp                            1/1      100%\n browser/contextifyReplacement          4/4      100%\n browser/index                        22/22      100%\n------------------------------------------------------\nTOTALS: 0/2568 failed; 100% success\nTIME: 32648ms\n```\n\n### Running the tests\n\nFirst you'll want to `npm install`. To run all the tests, use `npm test`, which just calls `node test/runner`.\n\nUsing `test/runner` directly, you can slice and dice which tests your want to run from different levels. Usage is as follows:\n\n```\ntest/runner --help\nRun the jsdom test suite\n\nOptions:\n-s, --suites     suites that you want to run. ie: -s level1/core,1/html,html [string]\n-f, --fail-fast  stop on the first failed test\n-h, --help       show the help\n-t, --tests      choose the test cases to run. ie: -t jquery\n```\n\n## Contextify\n\n[Contextify](https://npmjs.org/package/contextify) is a dependency of jsdom, used for running `<script>` tags within the\npage. In other words, it allows jsdom, which is run in Node.js, to run strings of JavaScript in an isolated environment\nthat pretends to be a browser environment instead of a server. You can see how this is an important feature.\n\nUnfortunately, doing this kind of magic requires C++. And in Node.js, using C++ from JavaScript means using \"native\nmodules.\" Native modules are compiled at installation time so that they work precisely for your machine; that is, you\ndon't download a contextify binary from npm, but instead build one locally after downloading the source from npm.\n\nFor Mac and Linux users, this is usually fine. Their systems come preinstalled with the necessaries for compiling C++.\nFor Windows users, however, things can be tricky. Thus, one of the most common problems with jsdom is trying to use it\non Windows without the proper compilation tools installed. Here's what you need to compile Contextify, and thus to\ninstall jsdom, on Windows:\n\n* A recent copy of the *x86* version of [Node.js for Windows](http://nodejs.org/download/), *not* the x64 version.\n* A copy of [Visual C++ 2010 Express](http://www.microsoft.com/visualstudio/eng/downloads#d-2010-express).\n* A copy of [Python 2.7](http://www.python.org/download/), installed in the default location of `C:\\Python27`.\n\nThere are some slight modifications to this that can work; for example full versions of Visual Studio usually work, and\nsometimes you can even get an x64 version of Node.js working too. But it's tricky, so start with the basics!\n","readmeFilename":"README.md","_id":"jsdom@0.5.0","dist":{"shasum":"dc60056cdad433613f66ad1ad8902402370e3288","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.5.0.tgz"},"_from":".","_npmVersion":"1.2.10","_npmUser":{"name":"domenic","email":"domenic@domenicdenicola.com"}},"0.5.1":{"name":"jsdom","version":"0.5.1","description":"A JavaScript implementation of the W3C DOM","keywords":["dom","w3c","html"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"},{"name":"domenic","email":"domenic@domenicdenicola.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"},{"name":"Tiago Rodrigues","email":"tmcrodrigues@gmail.com","url":"http://trodrigues.net"},{"name":"Samori Gorse","email":"samorigorse@gmail.com","url":"http://github.com/shinuza"},{"name":"John Roberts","email":"jroberts@logitech.com"},{"name":"Chad Walker","email":"chad@chad-cat-lore-eddie.com","url":"https://github.com/chad3814"},{"name":"Zach Smith","email":"x.coder.zach@gmail.com","url":"https://github.com/xcoderzach"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","nwmatcher":">=1.3.1","request":"2.x","cssom":"0.2.x","cssstyle":">=0.2.3","contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","html5":">=0.3.8","optimist":"*"},"directories":{"lib":"./lib/jsdom"},"scripts":{"test":"node ./test/runner"},"main":"./lib/jsdom","readme":"# jsdom\n\nA JavaScript implementation of the W3C DOM.\n\n## Install\n\n```bash\n$ npm install jsdom\n```\n\nIf this gives you trouble with errors about installing Contextify, especially on Windows, see [below](#contextify).\n\n## Human contact\n\nsee: [mailing list](http://groups.google.com/group/jsdom)\n\n## Easymode\n\nBootstrapping a DOM is generally a difficult process involving many error prone steps. We didn't want jsdom to fall into the same trap and that is why a new method, `jsdom.env()`, has been added in jsdom 0.2.0 which should make everyone's lives easier.\n\nwith URL\n\n```js\n// Count all of the links from the nodejs build page\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  \"http://nodejs.org/dist/\",\n  [\"http://code.jquery.com/jquery.js\"],\n  function (errors, window) {\n    console.log(\"there have been\", window.$(\"a\").length, \"nodejs releases!\");\n  }\n);\n```\n\nor with raw HTML\n\n```js\n// Run some jQuery on a html fragment\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  '<p><a class=\"the-link\" href=\"https://github.com/tmpvar/jsdom\">jsdom\\'s Homepage</a></p>',\n  [\"http://code.jquery.com/jquery.js\"],\n  function(errors, window) {\n    console.log(\"contents of a.the-link:\", window.$(\"a.the-link\").text());\n  }\n);\n```\n\nor with a configuration object\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  scripts: [\"http://code.jquery.com/jquery.js\"],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\nor with raw JavaScript source\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\nvar fs = require(\"fs\");\nvar jquery = fs.readFileSync(\"./jquery.js\").toString();\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  src: [jquery],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\n### How it works\n`jsdom.env` is built for ease of use, which is rare in the world of the DOM! Since the web has some absolutely horrible JavaScript on it, as of jsdom 0.2.0 `jsdom.env` will not process external resources (scripts, images, etc).  If you want to process the JavaScript use one of the methods below (`jsdom.jsdom` or `jsdom.jQueryify`)\n\n```js\njsdom.env(html, [scripts], [config], callback);\n```\n\n- `html` (**required**): may be a URL, HTML fragment, or file.\n- `scripts` (**optional**): may contain files or URLs.\n- `config` (**optional**): see below.\n- `callback` (**required**): takes two arguments:\n  - `errors`: an array of errors\n  - `window`: a brand new window\n\n_example:_\n\n```js\njsdom.env(html, function (errors, window) {\n  // free memory associated with the window\n  window.close();\n});\n```\n\nIf you would like to specify a configuration object only:\n\n```js\njsdom.env(config);\n```\n\n- `config.html`: see `html` above.\n- `config.scripts`: see `scripts` above.\n- `config.src`: an array of JavaScript strings that will be evaluated against the resulting document. Similar to `scripts`, but it accepts JavaScript instead of paths/URLs.\n- `config.done`: see `callback` above.\n- `config.document`:\n  - `referer`: the new document will have this referer\n  - `cookie`: manually set a cookie value, e.g. `'key=value; expires=Wed, Sep 21 2011 12:00:00 GMT; path=/'`\n- `config.features` : see `Flexibility` section below. **Note**: the default feature set for jsdom.env does _not_ include fetching remote JavaScript and executing it. This is something that you will need to **carefully** enable yourself.\n\n## For the hardcore\n\nIf you want to spawn a document/window and specify all sorts of options this is the section for you. This section covers the `jsdom.jsdom` method:\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar doc = jsdom(markup, level, options);\nvar window = doc.createWindow();\n```\n\n- `markup` is an HTML/XML document to be parsed. You can also pass `null` or an undefined value to get a basic document with empty `<head>` and `<body>` tags. Document fragments are also supported (including `\"\"`), and will behave as sanely as possible (e.g. the resulting document will lack the `head`, `body` and `documentElement` properties if the corresponding elements aren't included).\n\n- `level` is `null` (which means level3) by default, but you can pass another level if you'd like.\n\n  ```js\n  var jsdom = require(\"jsdom\");\n  var doc = jsdom.jsdom(\"<html><body></body></html>\", jsdom.level(1, \"core\"));\n  ```\n\n- `options` see the **Flexibility** section below.\n\n### Flexibility\n\nOne of the goals of jsdom is to be as minimal and light as possible. This section details how someone can change the behavior of `Document`s on the fly.  These features are baked into the `DOMImplementation` that every `Document` has, and may be tweaked in two ways:\n\n1. When you create a new `Document` using the jsdom builder (`require(\"jsdom\").jsdom()`)\n\n  ```js\n  var jsdom = require(\"jsdom\").jsdom;\n  var doc = jsdom(\"<html><body></body></html>\", null, {\n      features: {\n        FetchExternalResources : [\"img\"]\n      }\n  });\n  ```\n\n  Do note, that this will only affect the document that is currently being created. All other documents will use the defaults specified below (see: Default Features).\n\n2. Before creating any documents, you can modify the defaults for all future documents:\n\n  ```js\n  require(\"jsdom\").defaultDocumentFeatures = {\n      FetchExternalResources: [\"script\"],\n      ProcessExternalResources: false\n  };\n  ```\n\n#### Default Features\n\nDefault features are extremely important for jsdom as they lower the configuration requirement and present developers a set of consistent default behaviors. The following sections detail the available features, their defaults, and the values that jsdom uses.\n\n\n`FetchExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\", \"img\", \"css\", \"frame\", \"iframe\", \"link\"]` or `false`\n\nEnables/disables fetching files over the file system/HTTP.\n\n`ProcessExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\"]` or `false`\n\nDisabling this will disable script execution (currently only JavaScript).\n\n`SkipExternalResources`\n\n- _Default_: `false`\n- _Allowed_: `/url to be skipped/` or `false`\n- _Example_: `/http:\\/\\/example.org/js/bad\\.js/`\n\nDo not download and process resources with url matching a regular expression.\n\n### Canvas\n\njsdom includes support for using the [canvas](https://npmjs.org/package/canvas) package to extend any `<canvas>` elements with the canvas API. To make this work, you need to include canvas as a dependency in your project, as a peer of jsdom. If jsdom can find the canvas package, it will use it, but if it's not present, then `<canvas>` elements will behave like `<div>`s.\n\n## More Examples\n\n### Creating a document-less window\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.createWindow();\n\nconsole.log(window.document); // output: undefined\n```\n\n### Creating a document\n\n```js\nvar jsdom = require(\"jsdom\");\nvar doc = new (jsdom.level(1, \"core\").Document)();\n\nconsole.log(doc.nodeName); // outputs: #document\n```\n\n### Creating a browser-like BOM/DOM/Window\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar document = jsdom(\"<html><head></head><body>hello world</body></html>\");\nvar window = document.createWindow();\n\nconsole.log(window.document.innerHTML);\n// output: \"<html><head></head><body>hello world</body></html>\"\n\nconsole.log(window.innerWidth);\n// output: 1024\n\nconsole.log(typeof window.document.getElementsByClassName);\n// outputs: function\n```\n\n## jQueryify\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.jsdom().createWindow();\n\njsdom.jQueryify(window, \"http://code.jquery.com/jquery.js\", function () {\n  window.$(\"body\").append('<div class=\"testing\">Hello World, It works</div>');\n\n  console.log(window.$(\".testing\").text());\n});\n```\n\n### Passing objects to scripts inside the page\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar window = jsdom().createWindow();\n\nwindow.__myObject = { foo: \"bar\" };\n\nvar scriptEl = window.document.createElement(\"script\");\nscriptEl.src = \"anotherScript.js\";\nwindow.document.body.appendChild(scriptEl);\n\n// anotherScript.js will have the ability to read `window.__myObject`, even\n// though it originated in Node!\n```\n\n## Test Compliance:\n\n```\n level1/core                        532/532      100%\n level1/html                        238/238      100%\n level1/svg                         527/527      100%\n level2/core                        283/283      100%\n level2/html                        700/700      100%\n level2/style                         11/11      100%\n level2/extra                           4/4      100%\n level2/events                        24/24      100%\n level3/xpath                         93/93      100%\n window/index                           5/5      100%\n window/script                        10/10      100%\n window/frame                         14/14      100%\n sizzle/index                         14/14      100%\n jsdom/index                          86/86      100%\n jsonp/jsonp                            1/1      100%\n browser/contextifyReplacement          4/4      100%\n browser/index                        34/34      100%\n------------------------------------------------------\nTOTALS: 0/2580 failed; 100% success\n```\n\n### Running the tests\n\nFirst you'll want to `npm install`. To run all the tests, use `npm test`, which just calls `node test/runner`.\n\nUsing `test/runner` directly, you can slice and dice which tests your want to run from different levels. Usage is as follows:\n\n```\ntest/runner --help\nRun the jsdom test suite\n\nOptions:\n-s, --suites     suites that you want to run. ie: -s level1/core,1/html,html [string]\n-f, --fail-fast  stop on the first failed test\n-h, --help       show the help\n-t, --tests      choose the test cases to run. ie: -t jquery\n```\n\n## Contextify\n\n[Contextify](https://npmjs.org/package/contextify) is a dependency of jsdom, used for running `<script>` tags within the\npage. In other words, it allows jsdom, which is run in Node.js, to run strings of JavaScript in an isolated environment\nthat pretends to be a browser environment instead of a server. You can see how this is an important feature.\n\nUnfortunately, doing this kind of magic requires C++. And in Node.js, using C++ from JavaScript means using \"native\nmodules.\" Native modules are compiled at installation time so that they work precisely for your machine; that is, you\ndon't download a contextify binary from npm, but instead build one locally after downloading the source from npm.\n\nFor Mac and Linux users, this is usually fine. Their systems come preinstalled with the necessaries for compiling C++.\nFor Windows users, however, things can be tricky. Thus, one of the most common problems with jsdom is trying to use it\non Windows without the proper compilation tools installed. Here's what you need to compile Contextify, and thus to\ninstall jsdom, on Windows:\n\n* A recent copy of the *x86* version of [Node.js for Windows](http://nodejs.org/download/), *not* the x64 version.\n* A copy of [Visual C++ 2010 Express](http://www.microsoft.com/visualstudio/eng/downloads#d-2010-express).\n* A copy of [Python 2.7](http://www.python.org/download/), installed in the default location of `C:\\Python27`.\n\nThere are some slight modifications to this that can work; for example full versions of Visual Studio usually work, and\nsometimes you can even get an x64 version of Node.js working too. But it's tricky, so start with the basics!\n","readmeFilename":"README.md","_id":"jsdom@0.5.1","dist":{"shasum":"09dee237e01735d98cab91b58f05e30c56c61787","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.5.1.tgz"},"_from":".","_npmVersion":"1.2.10","_npmUser":{"name":"domenic","email":"domenic@domenicdenicola.com"}},"0.5.2":{"name":"jsdom","version":"0.5.2","description":"A JavaScript implementation of the W3C DOM","keywords":["dom","w3c","html"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"},{"name":"domenic","email":"domenic@domenicdenicola.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"},{"name":"Tiago Rodrigues","email":"tmcrodrigues@gmail.com","url":"http://trodrigues.net"},{"name":"Samori Gorse","email":"samorigorse@gmail.com","url":"http://github.com/shinuza"},{"name":"John Roberts","email":"jroberts@logitech.com"},{"name":"Chad Walker","email":"chad@chad-cat-lore-eddie.com","url":"https://github.com/chad3814"},{"name":"Zach Smith","email":"x.coder.zach@gmail.com","url":"https://github.com/xcoderzach"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","nwmatcher":">=1.3.1","request":"2.x","cssom":"0.2.x","cssstyle":">=0.2.3","contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","html5":">=0.3.8","optimist":"*"},"directories":{"lib":"./lib/jsdom"},"scripts":{"test":"node ./test/runner"},"main":"./lib/jsdom","readme":"# jsdom\n\nA JavaScript implementation of the W3C DOM.\n\n## Install\n\n```bash\n$ npm install jsdom\n```\n\nIf this gives you trouble with errors about installing Contextify, especially on Windows, see [below](#contextify).\n\n## Human contact\n\nsee: [mailing list](http://groups.google.com/group/jsdom)\n\n## Easymode\n\nBootstrapping a DOM is generally a difficult process involving many error prone steps. We didn't want jsdom to fall into the same trap and that is why a new method, `jsdom.env()`, has been added in jsdom 0.2.0 which should make everyone's lives easier.\n\nwith URL\n\n```js\n// Count all of the links from the nodejs build page\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  \"http://nodejs.org/dist/\",\n  [\"http://code.jquery.com/jquery.js\"],\n  function (errors, window) {\n    console.log(\"there have been\", window.$(\"a\").length, \"nodejs releases!\");\n  }\n);\n```\n\nor with raw HTML\n\n```js\n// Run some jQuery on a html fragment\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  '<p><a class=\"the-link\" href=\"https://github.com/tmpvar/jsdom\">jsdom\\'s Homepage</a></p>',\n  [\"http://code.jquery.com/jquery.js\"],\n  function(errors, window) {\n    console.log(\"contents of a.the-link:\", window.$(\"a.the-link\").text());\n  }\n);\n```\n\nor with a configuration object\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  scripts: [\"http://code.jquery.com/jquery.js\"],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\nor with raw JavaScript source\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\nvar fs = require(\"fs\");\nvar jquery = fs.readFileSync(\"./jquery.js\").toString();\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  src: [jquery],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\n### How it works\n`jsdom.env` is built for ease of use, which is rare in the world of the DOM! Since the web has some absolutely horrible JavaScript on it, as of jsdom 0.2.0 `jsdom.env` will not process external resources (scripts, images, etc).  If you want to process the JavaScript use one of the methods below (`jsdom.jsdom` or `jsdom.jQueryify`)\n\n```js\njsdom.env(html, [scripts], [config], callback);\n```\n\n- `html` (**required**): may be a URL, HTML fragment, or file.\n- `scripts` (**optional**): may contain files or URLs.\n- `config` (**optional**): see below.\n- `callback` (**required**): takes two arguments:\n  - `errors`: an array of errors\n  - `window`: a brand new window\n\n_example:_\n\n```js\njsdom.env(html, function (errors, window) {\n  // free memory associated with the window\n  window.close();\n});\n```\n\nIf you would like to specify a configuration object only:\n\n```js\njsdom.env(config);\n```\n\n- `config.html`: see `html` above.\n- `config.scripts`: see `scripts` above.\n- `config.src`: an array of JavaScript strings that will be evaluated against the resulting document. Similar to `scripts`, but it accepts JavaScript instead of paths/URLs.\n- `config.done`: see `callback` above.\n- `config.document`:\n  - `referer`: the new document will have this referer\n  - `cookie`: manually set a cookie value, e.g. `'key=value; expires=Wed, Sep 21 2011 12:00:00 GMT; path=/'`\n- `config.features` : see `Flexibility` section below. **Note**: the default feature set for jsdom.env does _not_ include fetching remote JavaScript and executing it. This is something that you will need to **carefully** enable yourself.\n\n## For the hardcore\n\nIf you want to spawn a document/window and specify all sorts of options this is the section for you. This section covers the `jsdom.jsdom` method:\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar doc = jsdom(markup, level, options);\nvar window = doc.createWindow();\n```\n\n- `markup` is an HTML/XML document to be parsed. You can also pass `null` or an undefined value to get a basic document with empty `<head>` and `<body>` tags. Document fragments are also supported (including `\"\"`), and will behave as sanely as possible (e.g. the resulting document will lack the `head`, `body` and `documentElement` properties if the corresponding elements aren't included).\n\n- `level` is `null` (which means level3) by default, but you can pass another level if you'd like.\n\n  ```js\n  var jsdom = require(\"jsdom\");\n  var doc = jsdom.jsdom(\"<html><body></body></html>\", jsdom.level(1, \"core\"));\n  ```\n\n- `options` see the **Flexibility** section below.\n\n### Flexibility\n\nOne of the goals of jsdom is to be as minimal and light as possible. This section details how someone can change the behavior of `Document`s on the fly.  These features are baked into the `DOMImplementation` that every `Document` has, and may be tweaked in two ways:\n\n1. When you create a new `Document` using the jsdom builder (`require(\"jsdom\").jsdom()`)\n\n  ```js\n  var jsdom = require(\"jsdom\").jsdom;\n  var doc = jsdom(\"<html><body></body></html>\", null, {\n      features: {\n        FetchExternalResources : [\"img\"]\n      }\n  });\n  ```\n\n  Do note, that this will only affect the document that is currently being created. All other documents will use the defaults specified below (see: Default Features).\n\n2. Before creating any documents, you can modify the defaults for all future documents:\n\n  ```js\n  require(\"jsdom\").defaultDocumentFeatures = {\n      FetchExternalResources: [\"script\"],\n      ProcessExternalResources: false\n  };\n  ```\n\n#### Default Features\n\nDefault features are extremely important for jsdom as they lower the configuration requirement and present developers a set of consistent default behaviors. The following sections detail the available features, their defaults, and the values that jsdom uses.\n\n\n`FetchExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\", \"img\", \"css\", \"frame\", \"iframe\", \"link\"]` or `false`\n\nEnables/disables fetching files over the file system/HTTP.\n\n`ProcessExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\"]` or `false`\n\nDisabling this will disable script execution (currently only JavaScript).\n\n`SkipExternalResources`\n\n- _Default_: `false`\n- _Allowed_: `/url to be skipped/` or `false`\n- _Example_: `/http:\\/\\/example.org/js/bad\\.js/`\n\nDo not download and process resources with url matching a regular expression.\n\n### Canvas\n\njsdom includes support for using the [canvas](https://npmjs.org/package/canvas) package to extend any `<canvas>` elements with the canvas API. To make this work, you need to include canvas as a dependency in your project, as a peer of jsdom. If jsdom can find the canvas package, it will use it, but if it's not present, then `<canvas>` elements will behave like `<div>`s.\n\n## More Examples\n\n### Creating a document-less window\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.createWindow();\n\nconsole.log(window.document); // output: undefined\n```\n\n### Creating a document\n\n```js\nvar jsdom = require(\"jsdom\");\nvar doc = new (jsdom.level(1, \"core\").Document)();\n\nconsole.log(doc.nodeName); // outputs: #document\n```\n\n### Creating a browser-like BOM/DOM/Window\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar document = jsdom(\"<html><head></head><body>hello world</body></html>\");\nvar window = document.createWindow();\n\nconsole.log(window.document.innerHTML);\n// output: \"<html><head></head><body>hello world</body></html>\"\n\nconsole.log(window.innerWidth);\n// output: 1024\n\nconsole.log(typeof window.document.getElementsByClassName);\n// outputs: function\n```\n\n## jQueryify\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.jsdom().createWindow();\n\njsdom.jQueryify(window, \"http://code.jquery.com/jquery.js\", function () {\n  window.$(\"body\").append('<div class=\"testing\">Hello World, It works</div>');\n\n  console.log(window.$(\".testing\").text());\n});\n```\n\n### Passing objects to scripts inside the page\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar window = jsdom().createWindow();\n\nwindow.__myObject = { foo: \"bar\" };\n\nvar scriptEl = window.document.createElement(\"script\");\nscriptEl.src = \"anotherScript.js\";\nwindow.document.body.appendChild(scriptEl);\n\n// anotherScript.js will have the ability to read `window.__myObject`, even\n// though it originated in Node!\n```\n\n## Test Compliance:\n\n```\n level1/core                        532/532      100%\n level1/html                        238/238      100%\n level1/svg                         527/527      100%\n level2/core                        283/283      100%\n level2/html                        700/700      100%\n level2/style                         13/13      100%\n level2/extra                           4/4      100%\n level2/events                        24/24      100%\n level3/xpath                         93/93      100%\n window/index                           5/5      100%\n window/script                        10/10      100%\n window/frame                         14/14      100%\n sizzle/index                         14/14      100%\n jsdom/index                          87/87      100%\n jsonp/jsonp                            1/1      100%\n browser/contextifyReplacement          4/4      100%\n browser/index                        34/34      100%\n------------------------------------------------------\nTOTALS: 0/2583 failed; 100% success\n```\n\n### Running the tests\n\nFirst you'll want to `npm install`. To run all the tests, use `npm test`, which just calls `node test/runner`.\n\nUsing `test/runner` directly, you can slice and dice which tests your want to run from different levels. Usage is as follows:\n\n```\ntest/runner --help\nRun the jsdom test suite\n\nOptions:\n-s, --suites     suites that you want to run. ie: -s level1/core,1/html,html [string]\n-f, --fail-fast  stop on the first failed test\n-h, --help       show the help\n-t, --tests      choose the test cases to run. ie: -t jquery\n```\n\n## Contextify\n\n[Contextify](https://npmjs.org/package/contextify) is a dependency of jsdom, used for running `<script>` tags within the\npage. In other words, it allows jsdom, which is run in Node.js, to run strings of JavaScript in an isolated environment\nthat pretends to be a browser environment instead of a server. You can see how this is an important feature.\n\nUnfortunately, doing this kind of magic requires C++. And in Node.js, using C++ from JavaScript means using \"native\nmodules.\" Native modules are compiled at installation time so that they work precisely for your machine; that is, you\ndon't download a contextify binary from npm, but instead build one locally after downloading the source from npm.\n\nFor Mac and Linux users, this is usually fine. Their systems come preinstalled with the necessaries for compiling C++.\nFor Windows users, however, things can be tricky. Thus, one of the most common problems with jsdom is trying to use it\non Windows without the proper compilation tools installed. Here's what you need to compile Contextify, and thus to\ninstall jsdom, on Windows:\n\n* A recent copy of the *x86* version of [Node.js for Windows](http://nodejs.org/download/), *not* the x64 version.\n* A copy of [Visual C++ 2010 Express](http://www.microsoft.com/visualstudio/eng/downloads#d-2010-express).\n* A copy of [Python 2.7](http://www.python.org/download/), installed in the default location of `C:\\Python27`.\n\nThere are some slight modifications to this that can work; for example full versions of Visual Studio usually work, and\nsometimes you can even get an x64 version of Node.js working too. But it's tricky, so start with the basics!\n","readmeFilename":"README.md","_id":"jsdom@0.5.2","dist":{"shasum":"8affab8e3e76a3b0738c11ab62399c70143c065d","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.5.2.tgz"},"_from":".","_npmVersion":"1.2.10","_npmUser":{"name":"domenic","email":"domenic@domenicdenicola.com"}},"0.5.3":{"name":"jsdom","version":"0.5.3","description":"A JavaScript implementation of the W3C DOM","keywords":["dom","w3c","html"],"maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"},{"name":"domenic","email":"domenic@domenicdenicola.com"}],"contributors":[{"name":"Vincent Greene","email":"ulteriorlife@gmail.com"},{"name":"Dav Glass","email":"davglass@gmail.com"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Charlie Robbins","email":"charlie.robbins@gmail.com"},{"name":"Aria Stewart","email":"aredridel@nbtsc.org"},{"name":"Matthew","email":"N.A.","url":"http://github.com/matthewpflueger/"},{"name":"Olivier El Mekki","email":"unknown","url":"http://blog.olivier-elmekki.com/"},{"name":"Shimon Dookdin","email":"helpmepro1@gmail.com"},{"name":"Daniel Cassidy","email":"mail@danielcassidy.me.uk","url":"http://www.danielcassidy.me.uk/"},{"name":"Sam Ruby","url":"http://intertwingly.net/blog/"},{"name":"hij1nx","url":"http://github.com/hij1nx"},{"name":"Yonathan Randolph","url":"http://github.com/yonran"},{"name":"Martin Davis","url":"http://github.com/waslogic"},{"name":"Andreas Lind Petersen","email":"andreas@one.com"},{"name":"d-ash","url":"http://github.com/d-ash"},{"name":"Robin Zhong","email":"fbzhong@gmail.com"},{"name":"Alexander Flatter","email":"flatter@gmail.com"},{"name":"Heng Liu","email":"liucougar@gmail.com"},{"name":"Brian McDaniel","url":"http://github.com/brianmcd"},{"name":"John Hurliman","email":"jhurliman@jhurliman.org"},{"name":"Jimmy Mabey"},{"name":"Gregory Tomlinson"},{"name":"Jason Davies","url":"http://www.jasondavies.com/"},{"name":"Josh Marshall","url":"http://www.ponderingtheobvious.com/"},{"name":"Jason Priestley","url":"https://github.com/jhp"},{"name":"Derek Lindahl","url":"https://github.com/dlindahl"},{"name":"Chris Roebuck","email":"chris@quillu.com","url":"http://www.quillu.com"},{"name":"Avi Deitcher","url":"https://github.com/deitch"},{"name":"Nao Iizuka","email":"iizuka@kyu-mu.net","url":"https://github.com/iizukanao"},{"name":"Peter Perenyi","url":"https://github.com/sinegar"},{"name":"Tiago Rodrigues","email":"tmcrodrigues@gmail.com","url":"http://trodrigues.net"},{"name":"Samori Gorse","email":"samorigorse@gmail.com","url":"http://github.com/shinuza"},{"name":"John Roberts","email":"jroberts@logitech.com"},{"name":"Chad Walker","email":"chad@chad-cat-lore-eddie.com","url":"https://github.com/chad3814"},{"name":"Zach Smith","email":"x.coder.zach@gmail.com","url":"https://github.com/xcoderzach"}],"bugs":{"email":"tmpvar@gmail.com","url":"http://github.com/tmpvar/jsdom/issues"},"licenses":[{"type":"MIT","url":"http://github.com/tmpvar/jsdom/blob/master/LICENSE.txt"}],"repositories":[{"type":"git","url":"http://github.com/tmpvar/jsdom.git"}],"implements":["http://www.w3.org/TR/REC-DOM-Level-1"],"dependencies":{"htmlparser":"1.x","nwmatcher":">=1.3.1","request":"2.14","cssom":"0.2.x","cssstyle":">=0.2.3","contextify":"0.1.x"},"devDependencies":{"nodeunit":">=0.5.x","console.log":"*","html5":">=0.3.8","optimist":"*"},"directories":{"lib":"./lib/jsdom"},"scripts":{"test":"node ./test/runner"},"main":"./lib/jsdom","readme":"# jsdom\n\nA JavaScript implementation of the W3C DOM.\n\n## Install\n\n```bash\n$ npm install jsdom\n```\n\nIf this gives you trouble with errors about installing Contextify, especially on Windows, see [below](#contextify).\n\n## Human contact\n\nsee: [mailing list](http://groups.google.com/group/jsdom)\n\n## Easymode\n\nBootstrapping a DOM is generally a difficult process involving many error prone steps. We didn't want jsdom to fall into the same trap and that is why a new method, `jsdom.env()`, has been added in jsdom 0.2.0 which should make everyone's lives easier.\n\nwith URL\n\n```js\n// Count all of the links from the nodejs build page\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  \"http://nodejs.org/dist/\",\n  [\"http://code.jquery.com/jquery.js\"],\n  function (errors, window) {\n    console.log(\"there have been\", window.$(\"a\").length, \"nodejs releases!\");\n  }\n);\n```\n\nor with raw HTML\n\n```js\n// Run some jQuery on a html fragment\nvar jsdom = require(\"jsdom\");\n\njsdom.env(\n  '<p><a class=\"the-link\" href=\"https://github.com/tmpvar/jsdom\">jsdom\\'s Homepage</a></p>',\n  [\"http://code.jquery.com/jquery.js\"],\n  function(errors, window) {\n    console.log(\"contents of a.the-link:\", window.$(\"a.the-link\").text());\n  }\n);\n```\n\nor with a configuration object\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  scripts: [\"http://code.jquery.com/jquery.js\"],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\nor with raw JavaScript source\n\n```js\n// Print all of the news items on hackernews\nvar jsdom = require(\"jsdom\");\nvar fs = require(\"fs\");\nvar jquery = fs.readFileSync(\"./jquery.js\").toString();\n\njsdom.env({\n  html: \"http://news.ycombinator.com/\",\n  src: [jquery],\n  done: function (errors, window) {\n    var $ = window.$;\n    console.log(\"HN Links\");\n    $(\"td.title:not(:last) a\").each(function() {\n      console.log(\" -\", $(this).text());\n    });\n  }\n});\n```\n\n### How it works\n`jsdom.env` is built for ease of use, which is rare in the world of the DOM! Since the web has some absolutely horrible JavaScript on it, as of jsdom 0.2.0 `jsdom.env` will not process external resources (scripts, images, etc).  If you want to process the JavaScript use one of the methods below (`jsdom.jsdom` or `jsdom.jQueryify`)\n\n```js\njsdom.env(html, [scripts], [config], callback);\n```\n\n- `html` (**required**): may be a URL, HTML fragment, or file.\n- `scripts` (**optional**): may contain files or URLs.\n- `config` (**optional**): see below.\n- `callback` (**required**): takes two arguments:\n  - `errors`: an array of errors\n  - `window`: a brand new window\n\n_example:_\n\n```js\njsdom.env(html, function (errors, window) {\n  // free memory associated with the window\n  window.close();\n});\n```\n\nIf you would like to specify a configuration object only:\n\n```js\njsdom.env(config);\n```\n\n- `config.html`: see `html` above.\n- `config.scripts`: see `scripts` above.\n- `config.src`: an array of JavaScript strings that will be evaluated against the resulting document. Similar to `scripts`, but it accepts JavaScript instead of paths/URLs.\n- `config.done`: see `callback` above.\n- `config.document`:\n  - `referer`: the new document will have this referer\n  - `cookie`: manually set a cookie value, e.g. `'key=value; expires=Wed, Sep 21 2011 12:00:00 GMT; path=/'`\n- `config.features` : see `Flexibility` section below. **Note**: the default feature set for jsdom.env does _not_ include fetching remote JavaScript and executing it. This is something that you will need to **carefully** enable yourself.\n\n## For the hardcore\n\nIf you want to spawn a document/window and specify all sorts of options this is the section for you. This section covers the `jsdom.jsdom` method:\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar doc = jsdom(markup, level, options);\nvar window = doc.createWindow();\n```\n\n- `markup` is an HTML/XML document to be parsed. You can also pass `null` or an undefined value to get a basic document with empty `<head>` and `<body>` tags. Document fragments are also supported (including `\"\"`), and will behave as sanely as possible (e.g. the resulting document will lack the `head`, `body` and `documentElement` properties if the corresponding elements aren't included).\n\n- `level` is `null` (which means level3) by default, but you can pass another level if you'd like.\n\n  ```js\n  var jsdom = require(\"jsdom\");\n  var doc = jsdom.jsdom(\"<html><body></body></html>\", jsdom.level(1, \"core\"));\n  ```\n\n- `options` see the **Flexibility** section below.\n\n### Flexibility\n\nOne of the goals of jsdom is to be as minimal and light as possible. This section details how someone can change the behavior of `Document`s on the fly.  These features are baked into the `DOMImplementation` that every `Document` has, and may be tweaked in two ways:\n\n1. When you create a new `Document` using the jsdom builder (`require(\"jsdom\").jsdom()`)\n\n  ```js\n  var jsdom = require(\"jsdom\").jsdom;\n  var doc = jsdom(\"<html><body></body></html>\", null, {\n      features: {\n        FetchExternalResources : [\"img\"]\n      }\n  });\n  ```\n\n  Do note, that this will only affect the document that is currently being created. All other documents will use the defaults specified below (see: Default Features).\n\n2. Before creating any documents, you can modify the defaults for all future documents:\n\n  ```js\n  require(\"jsdom\").defaultDocumentFeatures = {\n      FetchExternalResources: [\"script\"],\n      ProcessExternalResources: false\n  };\n  ```\n\n#### Default Features\n\nDefault features are extremely important for jsdom as they lower the configuration requirement and present developers a set of consistent default behaviors. The following sections detail the available features, their defaults, and the values that jsdom uses.\n\n\n`FetchExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\", \"img\", \"css\", \"frame\", \"iframe\", \"link\"]` or `false`\n\nEnables/disables fetching files over the file system/HTTP.\n\n`ProcessExternalResources`\n\n- _Default_: `[\"script\"]`\n- _Allowed_: `[\"script\"]` or `false`\n\nDisabling this will disable script execution (currently only JavaScript).\n\n`SkipExternalResources`\n\n- _Default_: `false`\n- _Allowed_: `/url to be skipped/` or `false`\n- _Example_: `/http:\\/\\/example.org/js/bad\\.js/`\n\nDo not download and process resources with url matching a regular expression.\n\n### Canvas\n\njsdom includes support for using the [canvas](https://npmjs.org/package/canvas) package to extend any `<canvas>` elements with the canvas API. To make this work, you need to include canvas as a dependency in your project, as a peer of jsdom. If jsdom can find the canvas package, it will use it, but if it's not present, then `<canvas>` elements will behave like `<div>`s.\n\n## More Examples\n\n### Creating a document-less window\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.createWindow();\n\nconsole.log(window.document); // output: undefined\n```\n\n### Creating a document\n\n```js\nvar jsdom = require(\"jsdom\");\nvar doc = new (jsdom.level(1, \"core\").Document)();\n\nconsole.log(doc.nodeName); // outputs: #document\n```\n\n### Creating a browser-like BOM/DOM/Window\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar document = jsdom(\"<html><head></head><body>hello world</body></html>\");\nvar window = document.createWindow();\n\nconsole.log(window.document.innerHTML);\n// output: \"<html><head></head><body>hello world</body></html>\"\n\nconsole.log(window.innerWidth);\n// output: 1024\n\nconsole.log(typeof window.document.getElementsByClassName);\n// outputs: function\n```\n\n## jQueryify\n\n```js\nvar jsdom = require(\"jsdom\");\nvar window = jsdom.jsdom().createWindow();\n\njsdom.jQueryify(window, \"http://code.jquery.com/jquery.js\", function () {\n  window.$(\"body\").append('<div class=\"testing\">Hello World, It works</div>');\n\n  console.log(window.$(\".testing\").text());\n});\n```\n\n### Passing objects to scripts inside the page\n\n```js\nvar jsdom = require(\"jsdom\").jsdom;\nvar window = jsdom().createWindow();\n\nwindow.__myObject = { foo: \"bar\" };\n\nvar scriptEl = window.document.createElement(\"script\");\nscriptEl.src = \"anotherScript.js\";\nwindow.document.body.appendChild(scriptEl);\n\n// anotherScript.js will have the ability to read `window.__myObject`, even\n// though it originated in Node!\n```\n\n## Test Compliance:\n\n```\n level1/core                        532/532      100%\n level1/html                        238/238      100%\n level1/svg                         527/527      100%\n level2/core                        283/283      100%\n level2/html                        700/700      100%\n level2/style                         13/13      100%\n level2/extra                           4/4      100%\n level2/events                        24/24      100%\n level3/xpath                         93/93      100%\n window/index                           5/5      100%\n window/script                        10/10      100%\n window/frame                         14/14      100%\n sizzle/index                         14/14      100%\n jsdom/index                          87/87      100%\n jsonp/jsonp                            1/1      100%\n browser/contextifyReplacement          4/4      100%\n browser/index                        34/34      100%\n------------------------------------------------------\nTOTALS: 0/2583 failed; 100% success\n```\n\n### Running the tests\n\nFirst you'll want to `npm install`. To run all the tests, use `npm test`, which just calls `node test/runner`.\n\nUsing `test/runner` directly, you can slice and dice which tests your want to run from different levels. Usage is as follows:\n\n```\ntest/runner --help\nRun the jsdom test suite\n\nOptions:\n-s, --suites     suites that you want to run. ie: -s level1/core,1/html,html [string]\n-f, --fail-fast  stop on the first failed test\n-h, --help       show the help\n-t, --tests      choose the test cases to run. ie: -t jquery\n```\n\n## Contextify\n\n[Contextify](https://npmjs.org/package/contextify) is a dependency of jsdom, used for running `<script>` tags within the\npage. In other words, it allows jsdom, which is run in Node.js, to run strings of JavaScript in an isolated environment\nthat pretends to be a browser environment instead of a server. You can see how this is an important feature.\n\nUnfortunately, doing this kind of magic requires C++. And in Node.js, using C++ from JavaScript means using \"native\nmodules.\" Native modules are compiled at installation time so that they work precisely for your machine; that is, you\ndon't download a contextify binary from npm, but instead build one locally after downloading the source from npm.\n\nFor Mac and Linux users, this is usually fine. Their systems come preinstalled with the necessaries for compiling C++.\nFor Windows users, however, things can be tricky. Thus, one of the most common problems with jsdom is trying to use it\non Windows without the proper compilation tools installed. Here's what you need to compile Contextify, and thus to\ninstall jsdom, on Windows:\n\n* A recent copy of the *x86* version of [Node.js for Windows](http://nodejs.org/download/), *not* the x64 version.\n* A copy of [Visual C++ 2010 Express](http://www.microsoft.com/visualstudio/eng/downloads#d-2010-express).\n* A copy of [Python 2.7](http://www.python.org/download/), installed in the default location of `C:\\Python27`.\n\nThere are some slight modifications to this that can work; for example full versions of Visual Studio usually work, and\nsometimes you can even get an x64 version of Node.js working too. But it's tricky, so start with the basics!\n","readmeFilename":"README.md","_id":"jsdom@0.5.3","dist":{"shasum":"0e0cb312f24867d6688cf47971d5aba8655647c4","tarball":"http://registry.npmjs.org/jsdom/-/jsdom-0.5.3.tgz"},"_from":".","_npmVersion":"1.2.10","_npmUser":{"name":"domenic","email":"domenic@domenicdenicola.com"}}},"readme":"# jsdom\n\nCommonJS implementation of the DOM intended to be platform independent and as minimal/light as possible while completely adhering to the w3c DOM specifications.\n\nCurrently Implemented and w3c Compliant:\n\n  - DOM Level 1 (html/svg/xml) \n  - Browser (BOM) Augmentation (getElementsByClassName, getElementById, etc..)\n\n\n**Note**: Running the tests now requires [mjsunit.runner][]\n\nsee: [testlog][] for w3 test compliance\n\nsee: [plan][] for roadmap and thoughts about this project\n\nsee: [project site][] for additional information\n\n  [project site]: http://www.jsdom.org\n  [mjsunit.runner]: http://github.com/tmpvar/mjsunit.runner\n  [testlog]: http://github.com/tmpvar/jsdom/blob/master/test/testlog.txt\n  [plan]: http://github.com/tmpvar/jsdom/blob/master/PLAN.md\n  ","maintainers":[{"name":"tmpvar","email":"tmpvar@gmail.com"},{"name":"domenic","email":"domenic@domenicdenicola.com"}],"time":{"0.0.1":"2011-11-21T03:09:05.477Z","0.1.2":"2011-11-21T03:09:53.766Z","0.1.4":"2011-11-21T03:10:38.441Z","0.1.5":"2011-11-21T03:11:18.142Z","0.1.6":"2011-11-21T03:11:57.872Z","0.1.7":"2011-11-21T03:12:37.152Z","0.1.8":"2011-11-21T03:13:15.555Z","0.1.9":"2011-11-21T03:13:55.435Z","0.1.10":"2011-11-21T03:14:37.965Z","0.1.11":"2011-11-21T03:15:12.565Z","0.1.12":"2011-11-21T03:15:46.441Z","0.1.13":"2011-11-21T03:16:22.598Z","0.1.15":"2011-11-21T03:16:57.935Z","0.1.16":"2011-11-21T03:17:31.089Z","0.1.17":"2011-11-21T03:18:04.410Z","0.1.18":"2011-11-21T03:18:37.311Z","0.1.19":"2011-11-21T03:19:10.313Z","0.1.20":"2011-11-21T03:19:43.587Z","0.1.21":"2011-11-21T03:20:17.251Z","0.1.22":"2011-11-21T03:20:51.248Z","0.1.23":"2011-11-21T03:21:28.854Z","0.2.0":"2011-11-21T03:22:02.086Z","0.2.1":"2011-11-21T03:22:20.006Z","0.2.2":"2011-11-21T03:22:39.637Z","0.2.3":"2011-11-21T03:23:02.172Z","0.2.4":"2011-11-21T03:23:25.921Z","0.2.5":"2011-11-21T03:27:21.095Z","0.2.6":"2011-11-21T03:27:44.349Z","0.2.7":"2011-11-21T03:28:04.973Z","0.2.8":"2011-11-21T03:28:25.916Z","0.2.9":"2011-11-21T03:28:47.572Z","0.2.10":"2011-11-21T03:29:08.202Z","0.2.11":"2012-02-23T16:05:12.500Z","0.2.12":"2012-02-23T19:28:52.655Z","0.2.13":"2012-02-28T01:42:58.216Z","0.2.14":"2012-04-12T22:16:22.177Z","0.2.15":"2012-07-12T20:10:34.689Z","0.2.16":"2012-10-12T00:33:43.431Z","0.2.17":"2012-10-13T00:13:59.370Z","0.2.18":"2012-10-13T03:26:31.436Z","0.2.19":"2012-10-27T02:42:29.479Z","0.3.0":"2012-12-10T08:08:17.503Z","0.3.1":"2012-12-11T06:04:59.106Z","0.3.2":"2012-12-16T23:41:51.557Z","0.3.3":"2012-12-20T03:54:54.883Z","0.3.4":"2012-12-29T06:07:50.861Z","0.4.0":"2013-02-06T05:03:49.999Z","0.4.1":"2013-02-08T06:31:00.792Z","0.4.2":"2013-02-13T04:32:50.910Z","0.5.0":"2013-02-13T04:55:38.768Z","0.5.1":"2013-03-03T00:53:13.463Z","0.5.2":"2013-03-10T21:47:50.425Z","0.5.3":"2013-03-16T23:53:07.745Z"},"users":{"vasc":true,"fgnass":true,"dodo":true,"tjholowaychuk":true,"fgribreau":true,"sjonnet19":true,"chevex":true,"charmander":true},"_attachments":{"jsdom-0.5.3.tgz":{"content_type":"application/octet-stream","revpos":118,"digest":"md5-uL6xc9cLaV3u8uxAjN01UQ==","length":79123,"stub":true},"jsdom-0.5.2.tgz":{"content_type":"application/octet-stream","revpos":116,"digest":"md5-jYqBEHif9EFYHd6ApNDAtw==","length":79138,"stub":true},"jsdom-0.5.1.tgz":{"content_type":"application/octet-stream","revpos":114,"digest":"md5-sQJXr72Yj2zIHw2Rv0Ykyw==","length":79061,"stub":true},"jsdom-0.5.0.tgz":{"content_type":"application/octet-stream","revpos":112,"digest":"md5-BvHzRsW4Tj7ruAepX+8TMw==","length":78918,"stub":true},"jsdom-0.4.2.tgz":{"content_type":"application/octet-stream","revpos":110,"digest":"md5-vwv83ZYYPQDnpU3xmcK+ew==","length":78189,"stub":true},"jsdom-0.4.1.tgz":{"content_type":"application/octet-stream","revpos":108,"digest":"md5-ItaSUBPgtuJu6uPBVytdbA==","length":78044,"stub":true},"jsdom-0.4.0.tgz":{"content_type":"application/octet-stream","revpos":106,"digest":"md5-RkBrIADrE4TgqtkrYuJO+A==","length":77975,"stub":true},"jsdom-0.3.4.tgz":{"content_type":"application/octet-stream","revpos":103,"digest":"md5-x4/HNYiNd94Ef8wVvVKeww==","length":78007,"stub":true},"jsdom-0.3.3.tgz":{"content_type":"application/octet-stream","revpos":101,"digest":"md5-CzuaNz2yyX4yDwG9vMO2zA==","length":77880,"stub":true},"jsdom-0.3.2.tgz":{"content_type":"application/octet-stream","revpos":99,"digest":"md5-aYWDGOPWmAZfo+6bDH76oA==","length":77435,"stub":true},"jsdom-0.3.1.tgz":{"content_type":"application/octet-stream","revpos":96,"digest":"md5-yzalkxvM0242zvI77gFjlg==","length":77212,"stub":true},"jsdom-0.3.0.tgz":{"content_type":"application/octet-stream","revpos":94,"digest":"md5-+yEIsYME2mPbhYYZBs0X5g==","length":77160,"stub":true},"jsdom-0.2.19.tgz":{"content_type":"application/octet-stream","revpos":92,"digest":"md5-LrSb8fSYsHpg56OjHEhayg==","length":89460,"stub":true},"jsdom-0.2.18.tgz":{"content_type":"application/octet-stream","revpos":88,"digest":"md5-+SMYzW71zQA8Aizu3JgAIw==","length":89636,"stub":true},"jsdom-0.2.17.tgz":{"content_type":"application/octet-stream","revpos":86,"digest":"md5-oVJblqYFXVXJgPLQ0Uuqbw==","length":89574,"stub":true},"jsdom-0.2.16.tgz":{"content_type":"application/octet-stream","revpos":84,"digest":"md5-CuhTnjaZe8vvu7uKfyZt2Q==","length":89631,"stub":true},"jsdom-0.2.15.tgz":{"content_type":"application/octet-stream","revpos":79,"digest":"md5-ahHo64p0lIqWPDExo0/Y/Q==","length":149617,"stub":true},"jsdom-0.2.14.tgz":{"content_type":"application/octet-stream","revpos":77,"digest":"md5-cgzj5cEeXIK3I0AXUXi4Pg==","length":149849,"stub":true},"jsdom-0.2.13.tgz":{"content_type":"application/octet-stream","revpos":75,"digest":"md5-aBbDB5nDkrkfIXgAy496bg==","length":153600,"stub":true},"jsdom-0.2.12.tgz":{"content_type":"application/octet-stream","revpos":73,"digest":"md5-J44ZpYQZsk5Rlmseax7Hig==","length":149632,"stub":true},"jsdom-0.2.11.tgz":{"content_type":"application/octet-stream","revpos":71,"digest":"md5-eQCTpcpmf3JReS6JXm0mEQ==","length":2005584,"stub":true},"jsdom-0.2.10.tgz":{"content_type":"application/octet-stream","revpos":65,"digest":"md5-jx0EvrPfVj4xfKCrbBnzpQ==","length":901120,"stub":true},"jsdom-0.2.9.tgz":{"content_type":"application/octet-stream","revpos":63,"digest":"md5-+sjUzVdL82w5wVZuK34rQg==","length":901120,"stub":true},"jsdom-0.2.8.tgz":{"content_type":"application/octet-stream","revpos":61,"digest":"md5-ZGbloe9rFhtPL2958iO67w==","length":870400,"stub":true},"jsdom-0.2.7.tgz":{"content_type":"application/octet-stream","revpos":59,"digest":"md5-qmj2YykyXWWXsJ/qZavCXw==","length":870400,"stub":true},"jsdom-0.2.6.tgz":{"content_type":"application/octet-stream","revpos":57,"digest":"md5-cgsNvUWWJJvPThqqZ3vpUw==","length":870400,"stub":true},"jsdom-0.2.5.tgz":{"content_type":"application/octet-stream","revpos":55,"digest":"md5-3R3/dDA8RW9U3tOZ22NF1w==","length":860160,"stub":true},"jsdom-0.2.4.tgz":{"content_type":"application/octet-stream","revpos":53,"digest":"md5-dqd4FvVIoeZkc1PnFMVmsA==","length":860160,"stub":true},"jsdom-0.2.3.tgz":{"content_type":"application/octet-stream","revpos":51,"digest":"md5-u3NioO20V+NufA8Svo/pAA==","length":849920,"stub":true},"jsdom-0.2.2.tgz":{"content_type":"application/octet-stream","revpos":49,"digest":"md5-ZAmtauaqCYKecWj2MuMR3g==","length":849920,"stub":true},"jsdom-0.2.1.tgz":{"content_type":"application/octet-stream","revpos":47,"digest":"md5-LHiOIA3b8jIRP8TXcAzmOQ==","length":849920,"stub":true},"jsdom-0.2.0.tgz":{"content_type":"application/octet-stream","revpos":45,"digest":"md5-dZlMa1VwRtCTzknNiF3IPA==","length":686080,"stub":true},"jsdom-0.1.23.tgz":{"content_type":"application/octet-stream","revpos":43,"digest":"md5-X0rFRvFqnbG9BsbcxBcA7g==","length":1802240,"stub":true},"jsdom-0.1.22.tgz":{"content_type":"application/octet-stream","revpos":41,"digest":"md5-P45XUTBC5LODt7IfkIesJQ==","length":1792000,"stub":true},"jsdom-0.1.21.tgz":{"content_type":"application/octet-stream","revpos":39,"digest":"md5-gncBelK+5qM+CMG9UgXLdA==","length":1730560,"stub":true},"jsdom-0.1.20.tgz":{"content_type":"application/octet-stream","revpos":37,"digest":"md5-X01hakfmb5HSiUS+nDSu+g==","length":1730560,"stub":true},"jsdom-0.1.19.tgz":{"content_type":"application/octet-stream","revpos":35,"digest":"md5-bIsPaOIyu8uP5KRff/fkDQ==","length":1710080,"stub":true},"jsdom-0.1.18.tgz":{"content_type":"application/octet-stream","revpos":33,"digest":"md5-J7ij9zeQdooIRUIApxD1oQ==","length":1710080,"stub":true},"jsdom-0.1.17.tgz":{"content_type":"application/octet-stream","revpos":31,"digest":"md5-V5Ama04fm1cDST/6sBGNTg==","length":1710080,"stub":true},"jsdom-0.1.16.tgz":{"content_type":"application/octet-stream","revpos":29,"digest":"md5-em5ydMdRTvMep7PMHaQeCA==","length":1710080,"stub":true},"jsdom-0.1.15.tgz":{"content_type":"application/octet-stream","revpos":27,"digest":"md5-SxuNVkKqFLKt4jT+g7ZjPQ==","length":1710080,"stub":true},"jsdom-0.1.13.tgz":{"content_type":"application/octet-stream","revpos":25,"digest":"md5-biFJuS8IBFK2a/UjkN1tyg==","length":1781760,"stub":true},"jsdom-0.1.12.tgz":{"content_type":"application/octet-stream","revpos":23,"digest":"md5-t7ADyxFkN2qFbk9TE6+r8w==","length":1781760,"stub":true},"jsdom-0.1.11.tgz":{"content_type":"application/octet-stream","revpos":21,"digest":"md5-HiQtj1FPVso/bwKqX9ziTA==","length":1781760,"stub":true},"jsdom-0.1.10.tgz":{"content_type":"application/octet-stream","revpos":19,"digest":"md5-JzNPx04cY/9jyITYaseiGA==","length":1781760,"stub":true},"jsdom-0.1.9.tgz":{"content_type":"application/octet-stream","revpos":17,"digest":"md5-ch6zFKazPwLEVFAUccpQyw==","length":2027520,"stub":true},"jsdom-0.1.8.tgz":{"content_type":"application/octet-stream","revpos":15,"digest":"md5-ZJrPk8mc6rHzCkf+1Ob2Nw==","length":2027520,"stub":true},"jsdom-0.1.7.tgz":{"content_type":"application/octet-stream","revpos":13,"digest":"md5-+mPCrpLyKMklzZt3BQqDAA==","length":2027520,"stub":true},"jsdom-0.1.6.tgz":{"content_type":"application/octet-stream","revpos":11,"digest":"md5-mdraTvDQDTKpylfLoEjDDQ==","length":2027520,"stub":true},"jsdom-0.1.5.tgz":{"content_type":"application/octet-stream","revpos":9,"digest":"md5-rD4IbZLIrteL/gW7mVcX/Q==","length":2027520,"stub":true},"jsdom-0.1.4.tgz":{"content_type":"application/octet-stream","revpos":7,"digest":"md5-G2lSgnNV87XZxHrOX7h27w==","length":2017280,"stub":true},"jsdom-0.1.2.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-ECINRDruim20TmhTm/majA==","length":2027520,"stub":true},"jsdom-0.0.1.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-LK24HAtqUzHG9fs9D8t7MA==","length":2017280,"stub":true}},"_etag":"\"5XVWNY7E753MWX5O59GL0UQ8M\""}